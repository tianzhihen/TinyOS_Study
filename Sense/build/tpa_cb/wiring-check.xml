<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:SenseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2abfc44da940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2abfc44f3840"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2abfc44f3840"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2abfc483d198"/></to>
    </wire>
    <wire loc="14:SenseAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abfc44de468"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abfc484c190"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abfc484c190"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abfc4847930"/></to>
    </wire>
    <wire loc="16:SenseAppC.nc">
      <from><interface-ref name="SenseTimer" scoped="" ref="0x2abfc44cb128"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abfc4e62c80"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abfc4e62c80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2abfc4559020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:SenseAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2abfc44db020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2abfc4e805e8"/></to>
    </wire>
    <wire loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2abfc4e805e8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2abfc53d0128"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc53ba980"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc4e96888"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2abfc4cf17f0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2abfc4cec688"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc4c6bd18"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc4a4b890"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc4e532d0"/></to>
    </wire>
    <wire loc="16:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc4585378"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2abfc483d7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2abfc4363898"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2abfc4363898"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2abfc43da2a8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2abfc483c1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc44f1a78"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abfc44f1a78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc44f7080"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc483c898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc44fa970"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc451d768"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2abfc44ed6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc485d918"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2abfc44f7db0"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x2abfc44ed6c0"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x2abfc44f7750"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc45018b0"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abfc45018b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc44ff808"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="WDInit" scoped="" ref="0x2abfc44f6468"/></from>
      <to><interface-ref name="WDInit" scoped="" ref="0x2abfc45385f8"/></to>
    </wire>
    <wire loc="17:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <from><interface-ref name="WDInit" scoped="" ref="0x2abfc45385f8"/></from>
      <to><interface-ref name="WDInit" scoped="" ref="0x2abfc4543890"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x2abfc4500670"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc4ec8e10"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2abfc4500020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc5360770"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2abfc4500020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc50e7108"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2abfc4500020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc50ce080"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2abfc450e688"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x2abfc4500020"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x2abfc450ecd8"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x2abfc4500670"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x2abfc450d3b8"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x2abfc44fdb80"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2abfc450e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc451d138"/></to>
    </wire>
    <wire loc="18:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2abfc4540020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2abfc44f3840"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <from><interface-ref name="TimerWD" scoped="" ref="0x2abfc4540800"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abfc45507b0"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abfc45507b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2abfc4559020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <from><interface-ref name="wd_task" scoped="" ref="0x2abfc4554188"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2abfc4559020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abfc48180c8"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abfc47cbc70"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abfc45669e8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abfc45669e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abfc505c020"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2abfc48125a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abfc47d0ab0"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2abfc5056450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abfc5062230"/></to>
    </wire>
    <wire loc="17:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abfc5062230"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x2abfc45786f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc50581a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4744610"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc4744610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc473d270"/></to>
    </wire>
    <wire loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="ClientAlarm" scoped="" ref="0x2abfc45786f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abfc4585cc0"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2abfc45bf020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abfc4734e10"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abfc4734e10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abfc50a75a0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abfc50a75a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abfc50ce828"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc50a3690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4633a88"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc4633a88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc465cad0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2abfc509e368"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2abfc4642be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc50ca9e8"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc50a3690"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2abfc50c5568"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2abfc509e368"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2abfc463c0c8"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2abfc465de00"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abfc4642be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2abfc4655700"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abfc4642be0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2abfc4667988"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abfc4642be0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2abfc4662b88"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2abfc466e148"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2abfc44041e0"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc44102b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc4f18660"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc44102b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc4d7ba50"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc44102b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc4ce94d8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc44102b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc4670a50"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc47072b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4700dd8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc4700dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc50e78b0"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc473a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4633a88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc50e49e8"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc473a020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2abfc4772450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc47072b0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2abfc47c7cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2abfc482b618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc43d91c8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2abfc43e3668"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2abfc4365cb8"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abfc485d918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc4847368"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2abfc483fc58"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2abfc48484c8"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2abfc48484c8"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2abfc488a020"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2abfc4844df0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2abfc485f648"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2abfc485f648"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2abfc48891a0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2abfc485b020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2abfc485e7d0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2abfc485e7d0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2abfc4888348"/></to>
    </wire>
    <wire loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2abfc488a020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d7370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2abfc48891a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d7370"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2abfc4888348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d7370"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2abfc48a3af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48f8370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2abfc487d658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48eba88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2abfc4891658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48e4d28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2abfc48a8348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48dd020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2abfc489caf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48f8370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2abfc4872348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48b7020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2abfc48aa020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48dd020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2abfc4870658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d7370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2abfc48857e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d17c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2abfc4899af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48eba88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2abfc488eaf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48e4d28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2abfc4879af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48b7020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2abfc486daf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d7370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2abfc4882c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d17c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2abfc4895020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48eba88"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2abfc48a57e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48dd020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2abfc489e7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48f8370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2abfc4893348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48e4d28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2abfc4874020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48b7020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2abfc48a14d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48f8370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2abfc48874d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d17c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2abfc487c7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48eba88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2abfc48907e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48e4d28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2abfc48a74d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48dd020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2abfc48714d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48b7020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2abfc486f7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d7370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2abfc4884968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d17c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2abfc4898c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48eba88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2abfc488dc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48e4d28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2abfc4878c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48b7020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2abfc486cc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d7370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2abfc4881e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d17c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2abfc48a4968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48dd020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2abfc487e1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48eba88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2abfc48924d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48e4d28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2abfc48a91a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48dd020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2abfc489d968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48f8370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2abfc48731a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48b7020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2abfc488ce00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48dd020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2abfc4886658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d17c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2abfc489a968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48eba88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2abfc488f968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48e4d28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2abfc48a6658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48dd020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2abfc485c8b8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48b7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2abfc486e968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d7370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2abfc4883af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d17c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2abfc4897e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48eba88"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2abfc489f658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48f8370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2abfc48941a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48e4d28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2abfc487f020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48d17c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2abfc4877e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2abfc48b7020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2abfc4e520f8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2abfc4e46748"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abfc4e4c790"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abfc4e17c58"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abfc4e17c58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abfc51b5378"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abfc4e4b430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abfc4e16888"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abfc4e16888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abfc49d52a8"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2abfc4e67e58"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2abfc4e50898"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abfc49d52a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abfc4a2c888"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abfc4e15578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abfc49d4020"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abfc49d4020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abfc4a2d320"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2abfc4e14bd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abfc49d1658"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abfc49d1658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abfc4a2b578"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abfc51b4020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abfc49795d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abfc51b4bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abfc49d4020"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abfc49795d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abfc49c1920"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abfc49c06f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abfc49b71c8"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abfc49b71c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abfc4a2e020"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abfc49bf3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abfc49d4020"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abfc49bea10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abfc49d52a8"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2abfc49bd780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2abfc49bc020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abfc49d61e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abfc4a48020"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abfc4a48020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abfc4c20b88"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Protection" scoped="" ref="0x2abfc49cb9e8"/></from>
      <to><interface-ref name="Protection" scoped="" ref="0x2abfc4c556b8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abfc49d0c40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abfc4a2ed18"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="RestartControl" scoped="" ref="0x2abfc49cc020"/></from>
      <to><interface-ref name="RestartControl" scoped="" ref="0x2abfc4c62430"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abfc4a4b890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc4c205f0"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abfc4a455a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abfc49cc648"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abfc4a28268"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abfc49cc648"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abfc4c63968"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abfc4a48020"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abfc4a2a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abfc4a47a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abfc4a2ac18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abfc4a47020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2abfc4a3a520"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2abfc4c7b080"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2abfc4c7b080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2abfc4c783d8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2abfc4a55448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2abfc4c7b848"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2abfc4c7b848"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2abfc4c72498"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2abfc4a3fba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2abfc4c3d448"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abfc4c20b88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abfc5253838"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abfc4a47a98"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abfc4c1fe78"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abfc4c1fe78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abfc52476f8"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abfc4c205f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abfc52532a0"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abfc4a47020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abfc4c1f7e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abfc4c1f7e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abfc5247020"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2abfc4a432b8"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2abfc4c4ba80"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2abfc4c4ba80"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2abfc52463f0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2abfc4c47740"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2abfc4a3e550"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2abfc4c4a1c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2abfc4a3fba8"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abfc4c4aa88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abfc4a455a8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2abfc4c480a0"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2abfc4a3a520"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2abfc4c487c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2abfc4a55448"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2abfc5246b48"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2abfc4c4a1c0"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abfc5250c18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abfc4c4aa88"/></to>
    </wire>
    <wire loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abfc5244e60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abfc4c4aa88"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abfc527e700"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abfc4c4aa88"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2abfc5245578"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2abfc5252e20"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2abfc5245e20"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2abfc52523f0"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2abfc52448c8"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2abfc5251700"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2abfc5251cf8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2abfc52806b0"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2abfc524d2a8"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2abfc4c47740"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2abfc524e2a8"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2abfc4c480a0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2abfc527f760"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2abfc4c487c0"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x2abfc5241538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abfc5279660"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abfc5279660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2abfc4559020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2abfc524b0a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2abfc524a120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2abfc524d8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2abfc524b840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2abfc52844e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2abfc5284c80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2abfc4c76b60"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2abfc4c78b90"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2abfc4c78b90"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2abfc4cb8a88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2abfc4c72498"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2abfc4cb72a8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2abfc4c794a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2abfc4c714a0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2abfc4c714a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2abfc4cb62a8"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2abfc4c783d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2abfc4cb8328"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc4c71d68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4d4f758"/></to>
    </wire>
    <wire loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc4d4f758"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4d49d60"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc4cb3020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4c71d68"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2abfc4cb68c0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2abfc4cc5060"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2abfc4cc5060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2abfc4cee020"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2abfc4cb50a0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2abfc4cc58b8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2abfc4cc58b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2abfc4cee8b8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2abfc4cb5840"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2abfc4cc4158"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2abfc4cc4158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2abfc4ced158"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2abfc4cf3860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2abfc4cea020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2abfc4cf46b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2abfc4cecd98"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2abfc4cf3020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2abfc4ceb6b8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc4ce9b48"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc44fa970"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2abfc4ce8950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2abfc44041e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2abfc4ce8950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2abfc44041e0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc4d49d60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4e29420"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc4dfca88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4d42950"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc4d42950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abfc4d63928"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2abfc4e27688"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc4dff9e0"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abfc4dff9e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abfc53ab020"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2abfc4d69de0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2abfc4d80de0"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abfc4d6fbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2abfc4d5c698"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abfc4d6fbe0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2abfc4d8a988"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abfc4d6fbe0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2abfc4d85b88"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2abfc4d7a148"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2abfc44041e0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc53a8128"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc4dfca88"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2abfc4e7c4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2abfc4e95020"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2abfc4e67e58"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2abfc4e8c020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2abfc44f3840"/></to>
    </wire>
    <wire loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2abfc4e8c700"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abfc49d61e0"/></to>
    </wire>
    <wire loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2abfc53d0128"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2abfc53cdd98"/></to>
    </wire>
    <wire loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2abfc53cdd98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2abfc4ea9a48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc53cb340"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc5039e78"/></to>
    </wire>
    <wire loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc4e9b3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc53cb340"/></to>
    </wire>
    <wire loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2abfc4e9a410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abfc4eca020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc4ec9890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc53cbbe8"/></to>
    </wire>
    <wire loc="31:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2abfc4ea9a48"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2abfc5020680"/></to>
    </wire>
    <wire loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2abfc4e9f718"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2abfc50136f8"/></to>
    </wire>
    <wire loc="33:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2abfc5044720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abfc4e9a410"/></to>
    </wire>
    <wire loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc5010e78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc4e9b3f0"/></to>
    </wire>
    <wire loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2abfc5046060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2abfc5015ab0"/></to>
    </wire>
    <wire loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2abfc5010020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2abfc4ec30d0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2abfc4ec30d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2abfc4eba488"/></to>
    </wire>
    <wire loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2abfc500b398"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2abfc5027b28"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2abfc4ebf9b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2abfc4ebade0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2abfc4eca020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abfc4fbf4f8"/></to>
    </wire>
    <wire loc="105:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2abfc4fbf4f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abfc53b7060"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc4fbc020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc4ec9890"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2abfc4edfc70"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2abfc4f200c0"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2abfc4f200c0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2abfc4f1da00"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc4edd798"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc44fa970"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2abfc4ff6060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2abfc4eb8c60"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc4ff6d18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc4fbeac8"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc4fbeac8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc53b64c0"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2abfc4f18cc0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2abfc44041e0"/></to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2abfc4fbe388"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2abfc53b7d58"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2abfc4fbd700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2abfc53b50e0"/></to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc53b5980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc4fbc020"/></to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2abfc53b4130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2abfc53b9020"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2abfc53b12e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2abfc541b020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2abfc4ff6060"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2abfc541b740"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2abfc4ff6780"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc541bcd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc4ff6d18"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2abfc541a908"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2abfc4fe0908"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2abfc4ffc9a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="SenseC" loc="9:SenseC.nc">
      <documentation loc="1:Sense.h">
        <short>***********************************************************************&#10;> File Name: Sense.h&#10;> Author:WangQi &#10;> Mail:912293097@qq.com&#10;> Created Time: 2014&#9189;&#9145;&#9140;08&#9190;&#9116;&#9096;27&#9190;&#9111;&#9125; &#9190;&#9112;&#9119;&#9190;&#9116;&#9119;&#9188;&#9144;&#9097; 16&#9190;&#9111;&#9142;04&#9189;&#9096;&#9094;30&#9191;&#9127;&#9106;&#10;***********************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc" safe="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="WatchDogC" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
        <short>&#10; internal watchdog&#10;&#10; </short>
        <long>&#10; internal watchdog&#10;&#10; @author tango&#10; @date 2014/04/23&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="WatchDogP" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
        <short>&#10; internal watchdog&#10;&#10; </short>
        <long>&#10; internal watchdog&#10;&#10; @author tango&#10; @date 2014/04/23&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WatchDogC.TimerWDC" loc="44(WatchDogC.TimerWDC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C" loc="7(TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="MuxAlarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.VirtualizeAlarmC" loc="46(MuxAlarm62khz32C_.VirtualizeAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C" loc="37(MuxAlarm62khz32C_.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc45c7d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45d84a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC" loc="35(Counter62khz32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc46ff020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc46ff748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC" loc="51(SerialDispatcherC.SerialDispatcherCommonC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherCommonC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP" loc="62(SerialDispatcherC.SerialDispatcherCommonC.SerialP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <instance number="0">
        <component-ref qname="SerialP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC" loc="47(SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HdlcTranslateC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC" loc="44(SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SR" loc="1(SerialActiveMessageC.SR):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <instance number="0">
        <component-ref qname="SerialRestartControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SerialProtectorC" loc="11(SerialActiveMessageC.SerialProtectorC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DummySerialProtectorC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short>&#10; Private component of the Atmega1281 serial port HPL.</short>
        <long>&#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC" loc="35(CounterMcu32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2abfc4495960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP" loc="35(CounterMcu32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc46ff020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc46ff748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2abfc4495960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2abfc4495960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SenseAppC.Timer1" loc="44(SenseAppC.Timer1):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor" loc="35(SenseAppC.Sensor):/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/DemoSensorC.nc">
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensorC" loc="40(SenseAppC.Sensor.DemoSensorC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AtmegaVoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SenseAppC.Sensor.DemoSensorC.AdcReadClientC" loc="21(SenseAppC.Sensor.DemoSensorC.AdcReadClientC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Andras Biro &#60;bbandi86@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have&#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/wangqi/platforms2013/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC&#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaVoltageP" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageP.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeAlarmC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc" abstract="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc4587cd8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc4587cd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abfc4584460" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4584460"/></type-var>
        </typedef>
        <constant name="num_alarms" ref="0x2abfc4584770" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc45c7d40" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc45c7d40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abfc45d84a0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45d84a0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2abfc45d87c0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2abfc45d8af8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc45e4cd8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc45e4cd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abfc45f7460" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45f7460"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2abfc45f7780" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2abfc45f7ab8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc46ff020" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc46ff020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abfc46ff748" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc46ff748"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2abfc46ffa68" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc4710be8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc4710be8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abfc470d348" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc470d348"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2abfc470d668" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2abfc473fab8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2abfc473fab8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2abfc4756278" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2abfc4756278"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2abfc4756640" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2abfc4756640"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2abfc4756db8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2abfc4756db8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2abfc47541a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2abfc4754930" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2abfc4754930"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2abfc4742748" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2abfc4742748"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2abfc476b020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2abfc476b020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2abfc476b3e8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2abfc476b3e8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2abfc476bb60" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2abfc476bb60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2abfc4769020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc47a2a88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc47a2a88"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc47e19d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc47e19d8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2abfc47e1ce8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x2abfc48b9be8" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2abfc48b6020" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2abfc48b6388" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2abfc49380c8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2abfc4950248" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2abfc49768a8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherCommonC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc" abstract="">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2abfc4a3d740" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
          <component-ref qname="SerialDispatcherCommonC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2abfc4b66c88" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
          <component-ref qname="SerialDispatcherP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialRestartControlP" loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummySerialProtectorC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2abfc4e12e78" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2abfc4e12e78"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2abfc4e45200" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/DemoSensorC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaVoltageC" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc" abstract="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have&#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2abfc4f485a8" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2abfc4f711f8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2abfc4f8f020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC&#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2abfc501f368" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2abfc501f368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x2abfc44da940" loc="13:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2abfc44da940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2abfc44dac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2abfc44db020" loc="14:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2abfc44db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc44dbb68"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc44d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SenseTimer" ref="0x2abfc44cb128" loc="11:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SenseTimer" scoped="" ref="0x2abfc44cb128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc44e05f0"/>
        <function-ref name="fired" scoped="" ref="0x2abfc44caa48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc44e18c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc44e1470"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc44de020"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc44e0a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc44e1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc44cbc70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc44e0020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc44ca158"/>
        <function-ref name="stop" scoped="" ref="0x2abfc44ca5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc44de468" loc="12:SenseC.nc">
      <component-ref qname="SenseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc44de468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc44de7b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc44de940"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc44deac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc44dec50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc44dedd8"/>
        <function-ref name="get" scoped="" ref="0x2abfc44dd020"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc44dd1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc44dd7c8"/>
        <function-ref name="set" scoped="" ref="0x2abfc44dd330"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc44dd4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc44dd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2abfc44f2c58" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc44f2c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc44f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2abfc44f3840" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2abfc44f3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2abfc44f3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc44f1a78" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc44f1a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc44f1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2abfc44fa970" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc44fa970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2abfc44facc0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2abfc44fae48"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2abfc44ed020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2abfc44ed1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2abfc44ed330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2abfc44ed6c0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2abfc44ed6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc44eda10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WDInit" ref="0x2abfc44f6468" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDInit" scoped="" ref="0x2abfc44f6468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc44f67b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc44f7080" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc44f7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc44f73d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2abfc44f7db0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2abfc44f7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc44f6170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x2abfc44f7750" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x2abfc44f7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc44f7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc45018b0" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc45018b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2abfc4328570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2abfc4328570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4501c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2abfc4500670" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2abfc4500670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc45009c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2abfc4500020" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2abfc4500020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4500370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x2abfc450d3b8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x2abfc450d3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc450d708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc44ff808" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc44ff808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc44ffb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2abfc450ecd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2abfc450ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc450d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2abfc450e020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2abfc450e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc450e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2abfc450e688" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2abfc450e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc450e9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc451d138" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc451d138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2abfc4328570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2abfc4328570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc451d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2abfc451d768" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc451d768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2abfc451dab8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2abfc451dc40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2abfc451ddc8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2abfc451c020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2abfc451c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x2abfc44fdb80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x2abfc44fdb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4537020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WDInit" ref="0x2abfc45385f8" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <component-ref qname="WatchDogC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDInit" scoped="" ref="0x2abfc45385f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4538948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wd_task" ref="0x2abfc4554188" loc="25:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wd_task" scoped="" ref="0x2abfc4554188"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc45544d8"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc4554660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WDInit" ref="0x2abfc4543890" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDInit" scoped="" ref="0x2abfc4543890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4543be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2abfc4540020" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2abfc4540020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2abfc4540370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerWD" ref="0x2abfc4540800" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerWD" scoped="" ref="0x2abfc4540800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc453da18"/>
        <function-ref name="fired" scoped="" ref="0x2abfc453e158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc453ee48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc453e9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc454d2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc453de68"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc453e5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc453f370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc453d448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc453f810"/>
        <function-ref name="stop" scoped="" ref="0x2abfc453fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abfc45507b0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="WatchDogC.TimerWDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abfc45507b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc4824a18"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4825158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc4825e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc48259f8"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc48232e8"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc4824e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc48255a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc4826370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc4824448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc4826810"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4826cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2abfc4559020" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2abfc4559020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc456a2b8"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4558978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc45576c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc4557278"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc456ab58"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc456a708"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc4558dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc4559b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc4557c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc4558088"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4558528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abfc45669e8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abfc45669e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc47a3088"/>
        <function-ref name="fired" scoped="" ref="0x2abfc47a40f8"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc47a4a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc47a4580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc47a3510"/>
        <function-ref name="start" scoped="" ref="0x2abfc47a5768"/>
        <function-ref name="stop" scoped="" ref="0x2abfc47a5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abfc5062230" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abfc5062230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc505f918"/>
        <function-ref name="fired" scoped="" ref="0x2abfc5061980"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc505f310"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc5061e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc505fda0"/>
        <function-ref name="start" scoped="" ref="0x2abfc5061020"/>
        <function-ref name="stop" scoped="" ref="0x2abfc50614f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientAlarm" ref="0x2abfc45786f0" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <component-ref qname="MuxAlarm62khz32C_"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClientAlarm" scoped="" ref="0x2abfc45786f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc4575020"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4576020"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc4576930"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc45764a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc45754a8"/>
        <function-ref name="start" scoped="" ref="0x2abfc4577578"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4577a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abfc4585cc0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abfc4585cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc45c1470"/>
        <function-ref name="fired" scoped="" ref="0x2abfc45c34c8"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc45c3e18"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc45c3970"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc45c1918"/>
        <function-ref name="start" scoped="" ref="0x2abfc45c4ac0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc45c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc4585378" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc4585378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc45856c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2abfc45bf020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2abfc45bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc45bd690"/>
        <function-ref name="fired" scoped="" ref="0x2abfc45be6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc45bd088"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc45beb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc45bdb18"/>
        <function-ref name="start" scoped="" ref="0x2abfc45bfd70"/>
        <function-ref name="stop" scoped="" ref="0x2abfc45be270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abfc4734e10" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abfc4734e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc4731628"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4732580"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc4731020"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc4732a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc4731ab0"/>
        <function-ref name="start" scoped="" ref="0x2abfc4733be8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc47320f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2abfc509e368" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2abfc509e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc509b580"/>
        <function-ref name="test" scoped="" ref="0x2abfc509de08"/>
        <function-ref name="fired" scoped="" ref="0x2abfc509d980"/>
        <function-ref name="force" scoped="" ref="0x2abfc5099020"/>
        <function-ref name="get" scoped="" ref="0x2abfc509d020"/>
        <function-ref name="reset" scoped="" ref="0x2abfc509c310"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc509ba58"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc509b0f8"/>
        <function-ref name="set" scoped="" ref="0x2abfc509d4a8"/>
        <function-ref name="start" scoped="" ref="0x2abfc509c798"/>
        <function-ref name="stop" scoped="" ref="0x2abfc509cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abfc50a75a0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abfc50a75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc50a5c88"/>
        <function-ref name="fired" scoped="" ref="0x2abfc50a6d08"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc50a5680"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc50a51f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc50a3150"/>
        <function-ref name="start" scoped="" ref="0x2abfc50a63a8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc50a6880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2abfc50a3690" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc50a3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc50a0930"/>
        <function-ref name="test" scoped="" ref="0x2abfc50a11f8"/>
        <function-ref name="get" scoped="" ref="0x2abfc50a23a8"/>
        <function-ref name="reset" scoped="" ref="0x2abfc50a1680"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc50a0e08"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc50a2d08"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc50a04a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc50a2830"/>
        <function-ref name="start" scoped="" ref="0x2abfc50a1b08"/>
        <function-ref name="stop" scoped="" ref="0x2abfc50a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2abfc50c5568" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2abfc50c5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc50c16f8"/>
        <function-ref name="test" scoped="" ref="0x2abfc50c2020"/>
        <function-ref name="fired" scoped="" ref="0x2abfc50c4a90"/>
        <function-ref name="force" scoped="" ref="0x2abfc50c0088"/>
        <function-ref name="get" scoped="" ref="0x2abfc50c4130"/>
        <function-ref name="reset" scoped="" ref="0x2abfc50c24a8"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc50c1bd0"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc50c1270"/>
        <function-ref name="set" scoped="" ref="0x2abfc50c45b8"/>
        <function-ref name="start" scoped="" ref="0x2abfc50c2930"/>
        <function-ref name="stop" scoped="" ref="0x2abfc50c2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abfc50ce828" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abfc50ce828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc50ca020"/>
        <function-ref name="fired" scoped="" ref="0x2abfc50cc020"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc50cc930"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc50cc4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc50ca4a8"/>
        <function-ref name="start" scoped="" ref="0x2abfc50cd5e0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc50cdab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc50ce080" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc50ce080"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2abfc4328570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2abfc4328570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc50ce3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2abfc50ca9e8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc50ca9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc50c6b80"/>
        <function-ref name="test" scoped="" ref="0x2abfc50c84a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc50c9598"/>
        <function-ref name="reset" scoped="" ref="0x2abfc50c8930"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc50c5088"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc50c8020"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc50c66f8"/>
        <function-ref name="set" scoped="" ref="0x2abfc50c9a20"/>
        <function-ref name="start" scoped="" ref="0x2abfc50c8db8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc50c6270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc4633a88" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4633a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4644b80"/>
        <function-ref name="test" scoped="" ref="0x2abfc46454a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4646658"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4645930"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4642088"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4645020"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc46446f8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4646ae0"/>
        <function-ref name="start" scoped="" ref="0x2abfc4645db8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4644270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2abfc463c0c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2abfc463c0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4647270"/>
        <function-ref name="test" scoped="" ref="0x2abfc4651a58"/>
        <function-ref name="fired" scoped="" ref="0x2abfc46515d0"/>
        <function-ref name="get" scoped="" ref="0x2abfc463cc48"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4649020"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4647748"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4649db8"/>
        <function-ref name="set" scoped="" ref="0x2abfc46510f8"/>
        <function-ref name="start" scoped="" ref="0x2abfc46494a8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4649930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2abfc4642be0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2abfc4642be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc463fdb8"/>
        <function-ref name="test" scoped="" ref="0x2abfc46405b8"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4640130"/>
        <function-ref name="force" scoped="" ref="0x2abfc463d778"/>
        <function-ref name="get" scoped="" ref="0x2abfc46417a0"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4640a40"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc463d2f0"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc463f930"/>
        <function-ref name="set" scoped="" ref="0x2abfc4641c28"/>
        <function-ref name="start" scoped="" ref="0x2abfc463f020"/>
        <function-ref name="stop" scoped="" ref="0x2abfc463f4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2abfc4655700" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2abfc4655700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4668930"/>
        <function-ref name="test" scoped="" ref="0x2abfc46521f8"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4654d08"/>
        <function-ref name="force" scoped="" ref="0x2abfc4667310"/>
        <function-ref name="get" scoped="" ref="0x2abfc46543a8"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4652680"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4668e08"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc46684a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4654830"/>
        <function-ref name="start" scoped="" ref="0x2abfc4652b08"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4668020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2abfc4670a50" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc4670a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2abfc4670da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2abfc4667988" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2abfc4667988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4663b80"/>
        <function-ref name="test" scoped="" ref="0x2abfc46644a8"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4664020"/>
        <function-ref name="force" scoped="" ref="0x2abfc4662510"/>
        <function-ref name="get" scoped="" ref="0x2abfc4666560"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4664930"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4662088"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc46636f8"/>
        <function-ref name="set" scoped="" ref="0x2abfc46669e8"/>
        <function-ref name="start" scoped="" ref="0x2abfc4664db8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4663270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc465cad0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc465cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4656b80"/>
        <function-ref name="test" scoped="" ref="0x2abfc46584a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4659690"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4658930"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4655088"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4658020"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc46566f8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4659b18"/>
        <function-ref name="start" scoped="" ref="0x2abfc4658db8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4656270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2abfc466e148" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2abfc466e148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2abfc466e498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2abfc465de00" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2abfc465de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc46700f8"/>
        <function-ref name="test" scoped="" ref="0x2abfc4672980"/>
        <function-ref name="fired" scoped="" ref="0x2abfc46724f8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4673a18"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4672e08"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc46705d0"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4671c20"/>
        <function-ref name="set" scoped="" ref="0x2abfc4672020"/>
        <function-ref name="start" scoped="" ref="0x2abfc4671310"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4671798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2abfc4662b88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2abfc4662b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc465edb8"/>
        <function-ref name="test" scoped="" ref="0x2abfc465f580"/>
        <function-ref name="fired" scoped="" ref="0x2abfc465f0f8"/>
        <function-ref name="force" scoped="" ref="0x2abfc465d778"/>
        <function-ref name="get" scoped="" ref="0x2abfc4661760"/>
        <function-ref name="reset" scoped="" ref="0x2abfc465fa08"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc465d2f0"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc465e930"/>
        <function-ref name="set" scoped="" ref="0x2abfc4661be8"/>
        <function-ref name="start" scoped="" ref="0x2abfc465e020"/>
        <function-ref name="stop" scoped="" ref="0x2abfc465e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2abfc44102b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc44102b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2abfc4410600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc4406468" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc4406468"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2abfc4329e78"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2abfc4329e78"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc44067b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc4406940"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc4406ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc4406c50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc4406dd8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4414020"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc44141a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc44147c8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4414330"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc44144b8"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc4414640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2abfc4365cb8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2abfc4365cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2abfc44070a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2abfc44041e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2abfc44041e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2abfc4404530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc47072b0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc47072b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4706088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4706998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4706510"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4706e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc4700dd8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4700dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4723be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc473c548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc473c0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc473c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2abfc473a020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc473a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc47360f8"/>
        <function-ref name="test" scoped="" ref="0x2abfc47399e8"/>
        <function-ref name="get" scoped="" ref="0x2abfc473aba0"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4739e70"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc47365d0"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4739560"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4738c30"/>
        <function-ref name="set" scoped="" ref="0x2abfc4739088"/>
        <function-ref name="start" scoped="" ref="0x2abfc4738320"/>
        <function-ref name="stop" scoped="" ref="0x2abfc47387a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc50e7108" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc50e7108"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2abfc4328570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2abfc4328570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc50e7458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc50e78b0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc50e78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc50e5660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc50e4020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc50e5ae8"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc50e44a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2abfc50e49e8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc50e49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc50e0b80"/>
        <function-ref name="test" scoped="" ref="0x2abfc50e14a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc50e3598"/>
        <function-ref name="reset" scoped="" ref="0x2abfc50e1930"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc50df088"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc50e1020"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc50e06f8"/>
        <function-ref name="set" scoped="" ref="0x2abfc50e3a20"/>
        <function-ref name="start" scoped="" ref="0x2abfc50e1db8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc50e0270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc4744610" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4744610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc47413a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4741cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4741830"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4740190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2abfc4772450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2abfc4772450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc47711d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4771ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4771658"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc476f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc473d270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc473d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4757020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4757930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc47574a8"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4757db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abfc505c020" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abfc505c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc505a690"/>
        <function-ref name="fired" scoped="" ref="0x2abfc505b6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc505a088"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc505bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc505ab18"/>
        <function-ref name="start" scoped="" ref="0x2abfc505cd70"/>
        <function-ref name="stop" scoped="" ref="0x2abfc505b270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2abfc5056450" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2abfc5056450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2abfc4493078"/>
            <typename><typedef-ref name="T62khz" ref="0x2abfc4493360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc5094ab0"/>
        <function-ref name="fired" scoped="" ref="0x2abfc5095b30"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc50944a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc5094020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc5092020"/>
        <function-ref name="start" scoped="" ref="0x2abfc50951d0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc50956a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2abfc50581a8" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc50581a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc5057020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc5057930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc50574a8"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc5057db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2abfc47c7cf0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2abfc47c7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc47e30a0"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc47e3228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2abfc47cbc70" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abfc47cbc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc47c7410"/>
        <function-ref name="fired" scoped="" ref="0x2abfc47c94a8"/>
        <function-ref name="startAt" scoped="" ref="0x2abfc47c9db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc47c9930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abfc47c7898"/>
        <function-ref name="start" scoped="" ref="0x2abfc47ca9f0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc47c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abfc47d0ab0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abfc47d0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc47cdd60"/>
        <function-ref name="fired" scoped="" ref="0x2abfc47ce470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc47cd1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc47ced10"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc47cb648"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc47cb1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc47ce8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc47cf620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc47cd790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc47cfac0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc47ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2abfc482b618" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2abfc482b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc482b968"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc482baf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2abfc48125a0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2abfc48125a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc482c8f0"/>
        <function-ref name="fired" scoped="" ref="0x2abfc482e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc482ed10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc482e8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc482b1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc482cd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc482e470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc4811118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc482c320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc48115b8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4811a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abfc48180c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abfc48180c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc4814610"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4817a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc4815900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc4815490"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc4812020"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc4814a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc4815020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc4818c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc4814020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc4817118"/>
        <function-ref name="stop" scoped="" ref="0x2abfc48175d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2abfc483c898" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2abfc483c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc483cbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2abfc483d198" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2abfc483d198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2abfc483d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2abfc483c1d0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2abfc483c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc483c520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2abfc483d7d0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2abfc483d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc483db20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2abfc483dca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2abfc483de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2abfc4320368" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2abfc4320368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc43206b8"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc4320840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2abfc4363898" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2abfc4363898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4363be8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2abfc4363d70"/>
        <function-ref name="runNextTask" scoped="" ref="0x2abfc3d28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2abfc43d91c8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2abfc43d91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc43d9518"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc43d96a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2abfc43e3668" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2abfc43e3668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2abfc43e39b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2abfc43da2a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2abfc43da2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc43da5f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2abfc43da780"/>
        <function-ref name="runNextTask" scoped="" ref="0x2abfc43da908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2abfc484c190" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc484c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc484c4e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc484c668"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc484c7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc484c978"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc484cb00"/>
        <function-ref name="get" scoped="" ref="0x2abfc484cc88"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc484ce10"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc484b4b8"/>
        <function-ref name="set" scoped="" ref="0x2abfc484b020"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc484b1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc484b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2abfc483fc58" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2abfc483fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4844020"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48441a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4844330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48444b8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4844640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48447c8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4844950"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4844ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc4847368" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc4847368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc48476b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2abfc4844df0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2abfc4844df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4843170"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48432f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4843480"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4843608"/>
        <function-ref name="get" scoped="" ref="0x2abfc4843790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4843918"/>
        <function-ref name="set" scoped="" ref="0x2abfc4843aa0"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4843c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2abfc4847930" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc4847930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc4847c80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc4847e08"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc4846020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc48461a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc4846330"/>
        <function-ref name="get" scoped="" ref="0x2abfc48464b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc4846640"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc4846c60"/>
        <function-ref name="set" scoped="" ref="0x2abfc48467c8"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc4846950"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc4846ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2abfc485b020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2abfc485b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc485b370"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc485b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc485b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc485b808"/>
        <function-ref name="get" scoped="" ref="0x2abfc485b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc485bb18"/>
        <function-ref name="set" scoped="" ref="0x2abfc485bca0"/>
        <function-ref name="clr" scoped="" ref="0x2abfc485be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2abfc48484c8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2abfc48484c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4848818"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48489a0"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4848b28"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4848cb0"/>
        <function-ref name="get" scoped="" ref="0x2abfc4848e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc485f020"/>
        <function-ref name="set" scoped="" ref="0x2abfc485f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc485f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2abfc485f648" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2abfc485f648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc485f998"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc485fb20"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc485fca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc485fe30"/>
        <function-ref name="get" scoped="" ref="0x2abfc485e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc485e1a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc485e330"/>
        <function-ref name="clr" scoped="" ref="0x2abfc485e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2abfc485d918" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc485d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc485dc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2abfc485e7d0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2abfc485e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc485eb20"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc485eca8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc485ee30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc485d020"/>
        <function-ref name="get" scoped="" ref="0x2abfc485d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc485d330"/>
        <function-ref name="set" scoped="" ref="0x2abfc485d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc485d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2abfc48a3af0" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2abfc48a3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48a25e8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48a2770"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48a28f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48a2a80"/>
        <function-ref name="get" scoped="" ref="0x2abfc48a2c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48a2d90"/>
        <function-ref name="set" scoped="" ref="0x2abfc48a1020"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48a11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2abfc487d658" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2abfc487d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc487d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc487db30"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc487dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc487de40"/>
        <function-ref name="get" scoped="" ref="0x2abfc487c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc487c1a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc487c330"/>
        <function-ref name="clr" scoped="" ref="0x2abfc487c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2abfc4891658" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2abfc4891658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48919a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4891b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4891cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4891e40"/>
        <function-ref name="get" scoped="" ref="0x2abfc4890020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48901a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4890330"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48904b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2abfc48a8348" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2abfc48a8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48a8698"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48a8820"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48a89a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48a8b30"/>
        <function-ref name="get" scoped="" ref="0x2abfc48a8cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48a8e40"/>
        <function-ref name="set" scoped="" ref="0x2abfc48a7020"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2abfc489caf0" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2abfc489caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc489ce40"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48bb020"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48bb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48bb330"/>
        <function-ref name="get" scoped="" ref="0x2abfc48bb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48bb640"/>
        <function-ref name="set" scoped="" ref="0x2abfc48bb7c8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48bb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2abfc4872348" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2abfc4872348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4872698"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4872820"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48729a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4872b30"/>
        <function-ref name="get" scoped="" ref="0x2abfc4872cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4872e40"/>
        <function-ref name="set" scoped="" ref="0x2abfc4871020"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2abfc48aa020" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2abfc48aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48aa370"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48aa4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48aa680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48aa808"/>
        <function-ref name="get" scoped="" ref="0x2abfc48aa990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48aab18"/>
        <function-ref name="set" scoped="" ref="0x2abfc48aaca0"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48aae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2abfc4870658" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2abfc4870658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48709a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4870b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4870cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4870e40"/>
        <function-ref name="get" scoped="" ref="0x2abfc486f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc486f1a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc486f330"/>
        <function-ref name="clr" scoped="" ref="0x2abfc486f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2abfc48857e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2abfc48857e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4885b30"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4885cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4885e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4884020"/>
        <function-ref name="get" scoped="" ref="0x2abfc48841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4884330"/>
        <function-ref name="set" scoped="" ref="0x2abfc48844b8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4884640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2abfc4899af0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2abfc4899af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4899e40"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4898020"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48981a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4898330"/>
        <function-ref name="get" scoped="" ref="0x2abfc48984b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4898640"/>
        <function-ref name="set" scoped="" ref="0x2abfc48987c8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4898950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2abfc488eaf0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2abfc488eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc488ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc488d020"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc488d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc488d330"/>
        <function-ref name="get" scoped="" ref="0x2abfc488d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc488d640"/>
        <function-ref name="set" scoped="" ref="0x2abfc488d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc488d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2abfc4879af0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2abfc4879af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4879e40"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4878020"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48781a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4878330"/>
        <function-ref name="get" scoped="" ref="0x2abfc48784b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4878640"/>
        <function-ref name="set" scoped="" ref="0x2abfc48787c8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4878950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2abfc486daf0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2abfc486daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc486de40"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc486c020"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc486c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc486c330"/>
        <function-ref name="get" scoped="" ref="0x2abfc486c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc486c640"/>
        <function-ref name="set" scoped="" ref="0x2abfc486c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc486c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2abfc4882c78" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2abfc4882c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4881020"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48811a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4881330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48814b8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4881640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48817c8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4881950"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4881ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2abfc4895020" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2abfc4895020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4895370"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48954f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4895680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4895808"/>
        <function-ref name="get" scoped="" ref="0x2abfc4895990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4895b18"/>
        <function-ref name="set" scoped="" ref="0x2abfc4895ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4895e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2abfc48a57e0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2abfc48a57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48a5b30"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48a5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48a5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48a4020"/>
        <function-ref name="get" scoped="" ref="0x2abfc48a41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48a4330"/>
        <function-ref name="set" scoped="" ref="0x2abfc48a44b8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48a4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2abfc489e7e0" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2abfc489e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc489eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc489ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc489ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc489d020"/>
        <function-ref name="get" scoped="" ref="0x2abfc489d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc489d330"/>
        <function-ref name="set" scoped="" ref="0x2abfc489d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc489d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2abfc4893348" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2abfc4893348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4893698"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4893820"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48939a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4893b30"/>
        <function-ref name="get" scoped="" ref="0x2abfc4893cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4893e40"/>
        <function-ref name="set" scoped="" ref="0x2abfc4892020"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2abfc4874020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2abfc4874020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4874370"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48744f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4874680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4874808"/>
        <function-ref name="get" scoped="" ref="0x2abfc4874990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4874b18"/>
        <function-ref name="set" scoped="" ref="0x2abfc4874ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4874e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2abfc48891a0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2abfc48891a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48894f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4889678"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4889800"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4889988"/>
        <function-ref name="get" scoped="" ref="0x2abfc4889b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4889c98"/>
        <function-ref name="set" scoped="" ref="0x2abfc4889e20"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4888020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2abfc48a14d0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2abfc48a14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48a1820"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48a19a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48a1b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48a1cb8"/>
        <function-ref name="get" scoped="" ref="0x2abfc48a1e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc489f020"/>
        <function-ref name="set" scoped="" ref="0x2abfc489f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc489f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2abfc48874d0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2abfc48874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4887820"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48879a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4887b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4887cb8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4887e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4886020"/>
        <function-ref name="set" scoped="" ref="0x2abfc48861a8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4886330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2abfc487c7e0" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2abfc487c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc487cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc487ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc487ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc489a020"/>
        <function-ref name="get" scoped="" ref="0x2abfc489a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc489a330"/>
        <function-ref name="set" scoped="" ref="0x2abfc489a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc489a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2abfc48907e0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2abfc48907e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4890b30"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4890cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4890e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc488f020"/>
        <function-ref name="get" scoped="" ref="0x2abfc488f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc488f330"/>
        <function-ref name="set" scoped="" ref="0x2abfc488f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc488f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2abfc48a74d0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2abfc48a74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48a7820"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48a79a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48a7b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48a7cb8"/>
        <function-ref name="get" scoped="" ref="0x2abfc48a7e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48a6020"/>
        <function-ref name="set" scoped="" ref="0x2abfc48a61a8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48a6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2abfc48714d0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2abfc48714d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4871820"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48719a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4871b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4871cb8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4871e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4870020"/>
        <function-ref name="set" scoped="" ref="0x2abfc48701a8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4870330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2abfc486f7e0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2abfc486f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc486fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc486fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc486fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc486e020"/>
        <function-ref name="get" scoped="" ref="0x2abfc486e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc486e330"/>
        <function-ref name="set" scoped="" ref="0x2abfc486e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc486e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2abfc4884968" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2abfc4884968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4884cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4884e40"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4883020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48831a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4883330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48834b8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4883640"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2abfc4898c78" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2abfc4898c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4897020"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48971a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4897330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48974b8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4897640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48977c8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4897950"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4897ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2abfc488dc78" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2abfc488dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc488c020"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc488c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc488c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc488c4b8"/>
        <function-ref name="get" scoped="" ref="0x2abfc488c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc488c7c8"/>
        <function-ref name="set" scoped="" ref="0x2abfc488c950"/>
        <function-ref name="clr" scoped="" ref="0x2abfc488cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2abfc4878c78" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2abfc4878c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4877020"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48771a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4877330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48774b8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4877640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48777c8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4877950"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4877ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2abfc486cc78" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2abfc486cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc488b0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc488b278"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc488b400"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc488b588"/>
        <function-ref name="get" scoped="" ref="0x2abfc488b710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc488b898"/>
        <function-ref name="set" scoped="" ref="0x2abfc488ba20"/>
        <function-ref name="clr" scoped="" ref="0x2abfc488bba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2abfc4881e00" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2abfc4881e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48801a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4880330"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48804b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4880640"/>
        <function-ref name="get" scoped="" ref="0x2abfc48807c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4880950"/>
        <function-ref name="set" scoped="" ref="0x2abfc4880ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4880c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2abfc48a4968" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2abfc48a4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48a4cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48a4e40"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48a31a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc48a3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48a34b8"/>
        <function-ref name="set" scoped="" ref="0x2abfc48a3640"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48a37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2abfc487e1a0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2abfc487e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc487e6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc487e878"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc487ea00"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc487eb88"/>
        <function-ref name="get" scoped="" ref="0x2abfc487ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc487d020"/>
        <function-ref name="set" scoped="" ref="0x2abfc487d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc487d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2abfc48924d0" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2abfc48924d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4892820"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48929a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4892b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4892cb8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4892e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4891020"/>
        <function-ref name="set" scoped="" ref="0x2abfc48911a8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4891330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2abfc48a91a0" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2abfc48a91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48a94f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48a9678"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48a9800"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48a9988"/>
        <function-ref name="get" scoped="" ref="0x2abfc48a9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48a9c98"/>
        <function-ref name="set" scoped="" ref="0x2abfc48a9e20"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2abfc489d968" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2abfc489d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc489dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc489de40"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc489c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc489c1a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc489c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc489c4b8"/>
        <function-ref name="set" scoped="" ref="0x2abfc489c640"/>
        <function-ref name="clr" scoped="" ref="0x2abfc489c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2abfc48731a0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2abfc48731a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48734f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4873678"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4873800"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4873988"/>
        <function-ref name="get" scoped="" ref="0x2abfc4873b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4873c98"/>
        <function-ref name="set" scoped="" ref="0x2abfc4873e20"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4872020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2abfc4888348" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2abfc4888348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4888698"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4888820"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48889a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4888b30"/>
        <function-ref name="get" scoped="" ref="0x2abfc4888cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4888e40"/>
        <function-ref name="set" scoped="" ref="0x2abfc4887020"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2abfc488ce00" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2abfc488ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48ab1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48ab330"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48ab4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48ab640"/>
        <function-ref name="get" scoped="" ref="0x2abfc48ab7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48ab950"/>
        <function-ref name="set" scoped="" ref="0x2abfc48abad8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48abc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2abfc4886658" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2abfc4886658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48869a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4886b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4886cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4886e40"/>
        <function-ref name="get" scoped="" ref="0x2abfc4885020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48851a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4885330"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2abfc489a968" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2abfc489a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc489acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc489ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4899020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48991a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4899330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48994b8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4899640"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2abfc488f968" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2abfc488f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc488fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc488fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc488e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc488e1a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc488e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc488e4b8"/>
        <function-ref name="set" scoped="" ref="0x2abfc488e640"/>
        <function-ref name="clr" scoped="" ref="0x2abfc488e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2abfc48a6658" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2abfc48a6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48a69a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48a6b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48a6cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48a6e40"/>
        <function-ref name="get" scoped="" ref="0x2abfc48a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48a51a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc48a5330"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48a54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2abfc485c8b8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2abfc485c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc485cc08"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc485cd90"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4879020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48791a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4879330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48794b8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4879640"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2abfc486e968" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2abfc486e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc486ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc486ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc486d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc486d1a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc486d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc486d4b8"/>
        <function-ref name="set" scoped="" ref="0x2abfc486d640"/>
        <function-ref name="clr" scoped="" ref="0x2abfc486d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2abfc4883af0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2abfc4883af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc4883e40"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4882020"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48821a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4882330"/>
        <function-ref name="get" scoped="" ref="0x2abfc48824b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4882640"/>
        <function-ref name="set" scoped="" ref="0x2abfc48827c8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4882950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2abfc4897e00" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2abfc4897e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48961a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4896330"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48964b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4896640"/>
        <function-ref name="get" scoped="" ref="0x2abfc48967c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4896950"/>
        <function-ref name="set" scoped="" ref="0x2abfc4896ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4896c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2abfc489f658" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2abfc489f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc489f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc489fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc489fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc489fe40"/>
        <function-ref name="get" scoped="" ref="0x2abfc489e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc489e1a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc489e330"/>
        <function-ref name="clr" scoped="" ref="0x2abfc489e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2abfc48941a0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2abfc48941a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48944f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4894678"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc4894800"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4894988"/>
        <function-ref name="get" scoped="" ref="0x2abfc4894b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4894c98"/>
        <function-ref name="set" scoped="" ref="0x2abfc4894e20"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4893020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2abfc487f020" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2abfc487f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc487f370"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc487f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc487f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc487f808"/>
        <function-ref name="get" scoped="" ref="0x2abfc487f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc487fb18"/>
        <function-ref name="set" scoped="" ref="0x2abfc487fca0"/>
        <function-ref name="clr" scoped="" ref="0x2abfc487fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2abfc4877e00" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2abfc4877e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48751a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc4875330"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48754b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc4875640"/>
        <function-ref name="get" scoped="" ref="0x2abfc48757c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc4875950"/>
        <function-ref name="set" scoped="" ref="0x2abfc4875ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc4875c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2abfc488a020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2abfc488a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc488a370"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc488a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc488a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc488a808"/>
        <function-ref name="get" scoped="" ref="0x2abfc488a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc488ab18"/>
        <function-ref name="set" scoped="" ref="0x2abfc488aca0"/>
        <function-ref name="clr" scoped="" ref="0x2abfc488ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2abfc48b7020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2abfc48b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48b7390"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48b7518"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48b76a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48b7828"/>
        <function-ref name="get" scoped="" ref="0x2abfc48b79b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48b7b38"/>
        <function-ref name="set" scoped="" ref="0x2abfc48b7cc0"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48b7e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2abfc48d7370" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2abfc48d7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48d76e0"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48d7868"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48d79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48d7b78"/>
        <function-ref name="get" scoped="" ref="0x2abfc48d7d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48d6020"/>
        <function-ref name="set" scoped="" ref="0x2abfc48d61a8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48d6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2abfc48d17c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2abfc48d17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48d1b30"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48d1cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48d1e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48d0020"/>
        <function-ref name="get" scoped="" ref="0x2abfc48d01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48d0330"/>
        <function-ref name="set" scoped="" ref="0x2abfc48d04b8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48d0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2abfc48eba88" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2abfc48eba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48ebdf8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48ea020"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48ea1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48ea330"/>
        <function-ref name="get" scoped="" ref="0x2abfc48ea4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48ea640"/>
        <function-ref name="set" scoped="" ref="0x2abfc48ea7c8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48ea950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2abfc48e4d28" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2abfc48e4d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48e30d8"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48e3260"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48e33e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48e3570"/>
        <function-ref name="get" scoped="" ref="0x2abfc48e36f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48e3880"/>
        <function-ref name="set" scoped="" ref="0x2abfc48e3a08"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48e3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2abfc48dd020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2abfc48dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48dd390"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48dd518"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48dd6a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48dd828"/>
        <function-ref name="get" scoped="" ref="0x2abfc48dd9b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48ddb38"/>
        <function-ref name="set" scoped="" ref="0x2abfc48ddcc0"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48dde48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2abfc48f8370" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2abfc48f8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abfc48f86e0"/>
        <function-ref name="isInput" scoped="" ref="0x2abfc48f8868"/>
        <function-ref name="toggle" scoped="" ref="0x2abfc48f89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abfc48f8b78"/>
        <function-ref name="get" scoped="" ref="0x2abfc48f8d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abfc48f7020"/>
        <function-ref name="set" scoped="" ref="0x2abfc48f71a8"/>
        <function-ref name="clr" scoped="" ref="0x2abfc48f7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abfc4e17c58" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abfc4e17c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4e16020"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4e161a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4e16330"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4e164b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4e16640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abfc4e16888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abfc4e16888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abfc4e16bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abfc4e16d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4e15020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4e151a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abfc4e15330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abfc4e15578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abfc4e15578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abfc4e158c8"/>
        <function-ref name="source" scoped="" ref="0x2abfc4e15a50"/>
        <function-ref name="address" scoped="" ref="0x2abfc4e15bd8"/>
        <function-ref name="destination" scoped="" ref="0x2abfc4e15d60"/>
        <function-ref name="setSource" scoped="" ref="0x2abfc4e14020"/>
        <function-ref name="setDestination" scoped="" ref="0x2abfc4e141a8"/>
        <function-ref name="type" scoped="" ref="0x2abfc4e14330"/>
        <function-ref name="setType" scoped="" ref="0x2abfc4e144b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2abfc4e14640"/>
        <function-ref name="setGroup" scoped="" ref="0x2abfc4e147c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2abfc4e14950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2abfc4e14bd8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2abfc4e14bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abfc4e13020"/>
        <function-ref name="noAck" scoped="" ref="0x2abfc4e131a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abfc4e13330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abfc51b5378" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abfc51b5378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc51b56c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc51b5850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc51b59d8"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc51b5b60"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc51b5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2abfc51b4020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abfc51b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc51b4370"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc51b44f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc51b4680"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc51b4808"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc51b4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2abfc51b4bd8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abfc51b4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abfc51b3020"/>
        <function-ref name="source" scoped="" ref="0x2abfc51b31a8"/>
        <function-ref name="address" scoped="" ref="0x2abfc51b3330"/>
        <function-ref name="destination" scoped="" ref="0x2abfc51b34b8"/>
        <function-ref name="setSource" scoped="" ref="0x2abfc51b3640"/>
        <function-ref name="setDestination" scoped="" ref="0x2abfc51b37c8"/>
        <function-ref name="type" scoped="" ref="0x2abfc51b3950"/>
        <function-ref name="setType" scoped="" ref="0x2abfc51b3ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2abfc51b3c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2abfc51b3de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2abfc51b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abfc49795d8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abfc49795d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4979928"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4979ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4979c38"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4979dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4977020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2abfc49c06f8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abfc49c06f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc49c0a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc49c0bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc49c0d78"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc49bf020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc49bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abfc49c1920" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abfc49c1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc49c1c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc49c1e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc49c0020"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc49c01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc49c0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2abfc49bea10" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abfc49bea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abfc49bed60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abfc49bd020"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc49bd1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc49bd330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abfc49bd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2abfc49bd780" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2abfc49bd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc49bdad0"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc49bdc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2abfc49bc020" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2abfc49bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc49bc370"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc49bc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2abfc49bf3f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abfc49bf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abfc49bf740"/>
        <function-ref name="source" scoped="" ref="0x2abfc49bf8c8"/>
        <function-ref name="address" scoped="" ref="0x2abfc49bfa50"/>
        <function-ref name="destination" scoped="" ref="0x2abfc49bfbd8"/>
        <function-ref name="setSource" scoped="" ref="0x2abfc49bfd60"/>
        <function-ref name="setDestination" scoped="" ref="0x2abfc49be020"/>
        <function-ref name="type" scoped="" ref="0x2abfc49be1a8"/>
        <function-ref name="setType" scoped="" ref="0x2abfc49be330"/>
        <function-ref name="isForMe" scoped="" ref="0x2abfc49be4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2abfc49be640"/>
        <function-ref name="localGroup" scoped="" ref="0x2abfc49be7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abfc49d61e0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abfc49d61e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abfc49d6530"/>
        <function-ref name="stopDone" scoped="" ref="0x2abfc49d66b8"/>
        <function-ref name="start" scoped="" ref="0x2abfc49d6840"/>
        <function-ref name="stop" scoped="" ref="0x2abfc49d69c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abfc49b71c8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abfc49b71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc49b7518"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc49b76a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc49b7828"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc49b79b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc49b7b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abfc49d52a8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abfc49d52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abfc49d55f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abfc49d5780"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc49d5908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc49d5a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abfc49d5c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2abfc49cb9e8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2abfc49cb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2abfc49cbd38"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2abfc49cd020"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2abfc49cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abfc49d0c40" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abfc49d0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abfc49d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2abfc49cc020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2abfc49cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2abfc49cc370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc49cc648" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc49cc648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc49cc998"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc49ccb20"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc49ccca8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc49cce30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc49ca020"/>
        <function-ref name="get" scoped="" ref="0x2abfc49ca1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc49ca330"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc49ca950"/>
        <function-ref name="set" scoped="" ref="0x2abfc49ca4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc49ca640"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc49ca7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2abfc49d1658" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abfc49d1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abfc49d19a8"/>
        <function-ref name="noAck" scoped="" ref="0x2abfc49d1b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abfc49d1cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abfc49d4020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abfc49d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abfc49d4370"/>
        <function-ref name="source" scoped="" ref="0x2abfc49d44f8"/>
        <function-ref name="address" scoped="" ref="0x2abfc49d4680"/>
        <function-ref name="destination" scoped="" ref="0x2abfc49d4808"/>
        <function-ref name="setSource" scoped="" ref="0x2abfc49d4990"/>
        <function-ref name="setDestination" scoped="" ref="0x2abfc49d4b18"/>
        <function-ref name="type" scoped="" ref="0x2abfc49d4ca0"/>
        <function-ref name="setType" scoped="" ref="0x2abfc49d4e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2abfc49d1020"/>
        <function-ref name="setGroup" scoped="" ref="0x2abfc49d11a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2abfc49d1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abfc4a2a020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abfc4a2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4a2a370"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4a2a4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4a2a680"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4a2a808"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4a2a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abfc4a2ac18" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abfc4a2ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abfc4a28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abfc4a2e020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abfc4a2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4a2e390"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4a2e518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4a2e6a0"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4a2e828"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4a2e9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abfc4a2c888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abfc4a2c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abfc4a2cbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abfc4a2cd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4a2b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4a2b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abfc4a2b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abfc4a2ed18" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abfc4a2ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abfc4a2d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc4a28268" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc4a28268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc4a285b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc4a28740"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc4a288c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc4a28a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc4a28bd8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4a28d60"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc4a27020"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc4a27640"/>
        <function-ref name="set" scoped="" ref="0x2abfc4a27330"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc4a271a8"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc4a274b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2abfc4a2b578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abfc4a2b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abfc4a2b8c8"/>
        <function-ref name="noAck" scoped="" ref="0x2abfc4a2ba50"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abfc4a2bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abfc4a2d320" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abfc4a2d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abfc4a2d670"/>
        <function-ref name="source" scoped="" ref="0x2abfc4a2d7f8"/>
        <function-ref name="address" scoped="" ref="0x2abfc4a2d980"/>
        <function-ref name="destination" scoped="" ref="0x2abfc4a2db08"/>
        <function-ref name="setSource" scoped="" ref="0x2abfc4a2dc90"/>
        <function-ref name="setDestination" scoped="" ref="0x2abfc4a2de18"/>
        <function-ref name="type" scoped="" ref="0x2abfc4a2c020"/>
        <function-ref name="setType" scoped="" ref="0x2abfc4a2c1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2abfc4a2c330"/>
        <function-ref name="setGroup" scoped="" ref="0x2abfc4a2c4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2abfc4a2c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abfc4a48020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abfc4a48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abfc4a48370"/>
        <function-ref name="stopDone" scoped="" ref="0x2abfc4a484f8"/>
        <function-ref name="start" scoped="" ref="0x2abfc4a48680"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4a48808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2abfc4a3a520" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2abfc4a3a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4a3a870"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4a3a9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abfc4a47a98" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abfc4a47a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2abfc44b1020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4a47de8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4a46020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4a461a8"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4a46330"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4a464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc4a4b890" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc4a4b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4a4bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abfc4a47020" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abfc4a47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2abfc44b1020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abfc4a47370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2abfc4a432b8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2abfc4a432b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc4a43608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc4a455a8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc4a455a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc4a458f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc4a45a80"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc4a45c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc4a45d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc4a44020"/>
        <function-ref name="get" scoped="" ref="0x2abfc4a441a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc4a44330"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc4a44950"/>
        <function-ref name="set" scoped="" ref="0x2abfc4a444b8"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc4a44640"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc4a447c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2abfc4a55448" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2abfc4a55448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4a55798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2abfc4a55920"/>
        <function-ref name="receive" scoped="" ref="0x2abfc4a55aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2abfc4a55c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2abfc4a55db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2abfc4a3e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4a3e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2abfc4a3e550" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2abfc4a3e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc4a3e8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2abfc4a3fba8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2abfc4a3fba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2abfc44b1020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2abfc4a45020"/>
        <function-ref name="offset" scoped="" ref="0x2abfc4a451a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2abfc4a45330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abfc4c20b88" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abfc4c20b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abfc4c1f020"/>
        <function-ref name="stopDone" scoped="" ref="0x2abfc4c1f1a8"/>
        <function-ref name="start" scoped="" ref="0x2abfc4c1f330"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4c1f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2abfc4c480a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2abfc4c480a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4c483f0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4c48578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abfc4c1fe78" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abfc4c1fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2abfc44b1020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4c4b218"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4c4b3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4c4b528"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4c4b6b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4c4b838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc4c205f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc4c205f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4c20940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abfc4c1f7e0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abfc4c1f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2abfc44b1020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abfc4c1fb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2abfc4c4ba80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2abfc4c4ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc4c4bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc4c4aa88" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc4c4aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc4c4add8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc4c49020"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc4c491a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc4c49330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc4c494b8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4c49640"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc4c497c8"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc4c49de8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4c49ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc4c49950"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc4c49c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2abfc4c487c0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2abfc4c487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4c48b10"/>
        <function-ref name="receivedByte" scoped="" ref="0x2abfc4c48c98"/>
        <function-ref name="receive" scoped="" ref="0x2abfc4c48e20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2abfc4c47020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2abfc4c471a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2abfc4c47330"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4c474b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2abfc4c47740" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2abfc4c47740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc4c47a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2abfc4c4a1c0" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2abfc4c4a1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2abfc44b1020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2abfc4c4a530"/>
        <function-ref name="offset" scoped="" ref="0x2abfc4c4a6b8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2abfc4c4a840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abfc5253838" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abfc5253838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abfc5253b88"/>
        <function-ref name="stopDone" scoped="" ref="0x2abfc5253d10"/>
        <function-ref name="start" scoped="" ref="0x2abfc5252020"/>
        <function-ref name="stop" scoped="" ref="0x2abfc52521a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2abfc524b0a0" loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2abfc524b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc524b3f0"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc524b578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2abfc524e2a8" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2abfc524e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc524e5f8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc524e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2abfc524a120" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2abfc524a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc524a470"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc524a5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc52532a0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc52532a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc52535f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2abfc524e9c8" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2abfc524e9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2abfc524ed18"/>
        <function-ref name="flush" scoped="" ref="0x2abfc524d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2abfc5251700" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2abfc5251700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc5251a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2abfc524d8c0" loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2abfc524d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc524dc10"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc524dd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2abfc5251cf8" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2abfc5251cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2abfc52500a0"/>
        <function-ref name="resetSend" scoped="" ref="0x2abfc5250228"/>
        <function-ref name="dataReceived" scoped="" ref="0x2abfc52503b0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2abfc5250538"/>
        <function-ref name="putData" scoped="" ref="0x2abfc52506c0"/>
        <function-ref name="putDone" scoped="" ref="0x2abfc5250848"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2abfc52509d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc5250c18" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc5250c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc524f020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc524f1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc524f330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc524f4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc524f640"/>
        <function-ref name="get" scoped="" ref="0x2abfc524f7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc524f950"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc524e020"/>
        <function-ref name="set" scoped="" ref="0x2abfc524fc60"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc524fad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc524fde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2abfc524b840" loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2abfc524b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc524bc90"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc524be18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2abfc524d2a8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2abfc524d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc524d5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2abfc52523f0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2abfc52523f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2abfc5252740"/>
        <function-ref name="nextByte" scoped="" ref="0x2abfc52528c8"/>
        <function-ref name="startSend" scoped="" ref="0x2abfc5252a50"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2abfc5252bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2abfc5252e20" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2abfc5252e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2abfc52511a8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2abfc5251330"/>
        <function-ref name="endPacket" scoped="" ref="0x2abfc52514b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2abfc52844e0" loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2abfc52844e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc5284830"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc52849b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abfc52476f8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abfc52476f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2abfc44b1020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc5247a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc5247bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc5247d78"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc5246020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc52461a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2abfc5284c80" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2abfc5284c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc5282020"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc52821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abfc5247020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abfc5247020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2abfc44b1020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abfc5247390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2abfc52463f0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2abfc52463f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc5246740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2abfc5246b48" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2abfc5246b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2abfc44b1020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2abfc5245020"/>
        <function-ref name="offset" scoped="" ref="0x2abfc52451a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2abfc5245330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc5244e60" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc5244e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc52421e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc5242370"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc52424f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc5242680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc5242808"/>
        <function-ref name="get" scoped="" ref="0x2abfc5242990"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc5242b18"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc52411a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc5242e28"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc5242ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc5241020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2abfc52448c8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2abfc52448c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc5244c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x2abfc5241538" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x2abfc5241538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc523e768"/>
        <function-ref name="fired" scoped="" ref="0x2abfc5240e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc523fb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc523f728"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc5284088"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc523ebb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc523f2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc52400c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc523e198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc5240560"/>
        <function-ref name="stop" scoped="" ref="0x2abfc5240a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2abfc5245e20" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2abfc5245e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2abfc52441a8"/>
        <function-ref name="nextByte" scoped="" ref="0x2abfc5244330"/>
        <function-ref name="startSend" scoped="" ref="0x2abfc52444b8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2abfc5244640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2abfc5245578" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2abfc5245578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2abfc52458c8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2abfc5245a50"/>
        <function-ref name="endPacket" scoped="" ref="0x2abfc5245bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2abfc527f760" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2abfc527f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc527fab0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2abfc527fc38"/>
        <function-ref name="receive" scoped="" ref="0x2abfc527fdc0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2abfc527e020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2abfc527e1a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2abfc527e330"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc527e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2abfc52806b0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2abfc52806b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2abfc5280a00"/>
        <function-ref name="resetSend" scoped="" ref="0x2abfc5280b88"/>
        <function-ref name="dataReceived" scoped="" ref="0x2abfc5280d10"/>
        <function-ref name="resetReceive" scoped="" ref="0x2abfc527f020"/>
        <function-ref name="putData" scoped="" ref="0x2abfc527f1a8"/>
        <function-ref name="putDone" scoped="" ref="0x2abfc527f330"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2abfc527f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc527e700" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc527e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc527ea50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc527ebd8"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc527ed60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc527d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc527d1a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc527d330"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc527d4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc527dad8"/>
        <function-ref name="set" scoped="" ref="0x2abfc527d7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc527d640"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc527d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abfc5279660" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abfc5279660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc52758f0"/>
        <function-ref name="fired" scoped="" ref="0x2abfc5277020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc5277d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc52778c0"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc52741c0"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc5275d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc5277470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc52781e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc5275320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc5278688"/>
        <function-ref name="stop" scoped="" ref="0x2abfc5278b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2abfc4c3d448" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2abfc4c3d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2abfc4c3d798"/>
        <function-ref name="offset" scoped="" ref="0x2abfc4c3d920"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2abfc4c3daa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2abfc4c63968" loc="2:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abfc4c63968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abfc4c63cb8"/>
        <function-ref name="stopDone" scoped="" ref="0x2abfc4c63e40"/>
        <function-ref name="start" scoped="" ref="0x2abfc4c62020"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4c621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2abfc4c62430" loc="3:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2abfc4c62430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2abfc4c62780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2abfc4c556b8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <component-ref qname="SerialActiveMessageC.SerialProtectorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2abfc4c556b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2abfc4c55a08"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2abfc4c55b90"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2abfc4c55d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2abfc4c76b60" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2abfc4c76b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4c79020"/>
        <function-ref name="receive" scoped="" ref="0x2abfc4c791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2abfc4c7b848" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2abfc4c7b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4c7bb98"/>
        <function-ref name="receivedByte" scoped="" ref="0x2abfc4c7bd20"/>
        <function-ref name="receive" scoped="" ref="0x2abfc4c7a020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2abfc4c7a1a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2abfc4c7a330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2abfc4c7a4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4c7a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2abfc4c794a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2abfc4c794a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc4c797f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2abfc4c7b080" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2abfc4c7b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4c7b3d0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4c7b558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2abfc4c78b90" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2abfc4c78b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4c72020"/>
        <function-ref name="receive" scoped="" ref="0x2abfc4c721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2abfc4c72498" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2abfc4c72498"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4c727e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2abfc4c72970"/>
        <function-ref name="receive" scoped="" ref="0x2abfc4c72af8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2abfc4c72c80"/>
        <function-ref name="receiveDone" scoped="" ref="0x2abfc4c72e08"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2abfc4c71020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4c711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2abfc4c714a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2abfc4c714a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc4c717f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2abfc4c71d68" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4c71d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2abfc4497c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4c70af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4c6f4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4c6f020"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4c6f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2abfc4c783d8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2abfc4c783d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4c78728"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4c788b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2abfc4cb8a88" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2abfc4cb8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4cb8dd8"/>
        <function-ref name="receive" scoped="" ref="0x2abfc4cb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2abfc4cb68c0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2abfc4cb68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4cb6c10"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4cb6d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc4c6bd18" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc4c6bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4cb80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2abfc4cb72a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2abfc4cb72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4cb75f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2abfc4cb7780"/>
        <function-ref name="receive" scoped="" ref="0x2abfc4cb7908"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2abfc4cb7a90"/>
        <function-ref name="receiveDone" scoped="" ref="0x2abfc4cb7c18"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2abfc4cb7da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4cb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2abfc4cb62a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2abfc4cb62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2abfc4cb65f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2abfc4cb5840" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2abfc4cb5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2abfc4cb5b90"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2abfc4cb5d18"/>
        <function-ref name="rxDone" scoped="" ref="0x2abfc4cb4020"/>
        <function-ref name="txDone" scoped="" ref="0x2abfc4cb41a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2abfc4cb4330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2abfc4cb44b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2abfc4cb4640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2abfc4cb47c8"/>
        <function-ref name="tx" scoped="" ref="0x2abfc4cb4950"/>
        <function-ref name="rx" scoped="" ref="0x2abfc4cb4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2abfc4cb3020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4cb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2abfc4497c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4cb3d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4cb26b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4cb2230"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4cb2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2abfc4cb8328" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2abfc4cb8328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4cb8678"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4cb8800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2abfc4cb50a0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2abfc4cb50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4cb53f0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4cb5578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2abfc4cc4158" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2abfc4cc4158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2abfc4cc44a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2abfc4cc4630"/>
        <function-ref name="rxDone" scoped="" ref="0x2abfc4cc47b8"/>
        <function-ref name="txDone" scoped="" ref="0x2abfc4cc4940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2abfc4cc4ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2abfc4cc4c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2abfc4cc4dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2abfc4cf4020"/>
        <function-ref name="tx" scoped="" ref="0x2abfc4cf41a8"/>
        <function-ref name="rx" scoped="" ref="0x2abfc4cf4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2abfc4cf3860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2abfc4cf3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2abfc4cf3bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2abfc4cf3d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2abfc4cf2020"/>
        <function-ref name="txDone" scoped="" ref="0x2abfc4cf21a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2abfc4cf2330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2abfc4cf24b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2abfc4cf2640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2abfc4cf27c8"/>
        <function-ref name="tx" scoped="" ref="0x2abfc4cf2950"/>
        <function-ref name="rx" scoped="" ref="0x2abfc4cf2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2abfc4cc58b8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2abfc4cc58b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4cc5c08"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4cc5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2abfc4cf46b0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2abfc4cf46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4cf4a00"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4cf4b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2abfc4cf3020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2abfc4cf3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4cf3370"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4cf34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2abfc4cc5060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2abfc4cc5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4cc53b0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4cc5538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2abfc4cf17f0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2abfc4cf17f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4cf1b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2abfc4ced158" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2abfc4ced158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2abfc4ced4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2abfc4ced630"/>
        <function-ref name="rxDone" scoped="" ref="0x2abfc4ced7b8"/>
        <function-ref name="txDone" scoped="" ref="0x2abfc4ced940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2abfc4cedac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2abfc4cedc50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2abfc4ceddd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2abfc4cec020"/>
        <function-ref name="tx" scoped="" ref="0x2abfc4cec1a8"/>
        <function-ref name="rx" scoped="" ref="0x2abfc4cec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2abfc4ce94d8" loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc4ce94d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2abfc4ce9828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2abfc4cec688" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2abfc4cec688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4cec9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2abfc4cea020" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2abfc4cea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2abfc4cea370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2abfc4cea4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2abfc4cea680"/>
        <function-ref name="txDone" scoped="" ref="0x2abfc4cea808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2abfc4cea990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2abfc4ceab18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2abfc4ceaca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2abfc4ceae28"/>
        <function-ref name="tx" scoped="" ref="0x2abfc4ce9020"/>
        <function-ref name="rx" scoped="" ref="0x2abfc4ce91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2abfc4cee8b8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2abfc4cee8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4ceec08"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4ceed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2abfc4cecd98" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2abfc4cecd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4ceb170"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4ceb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2abfc4ceb6b8" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2abfc4ceb6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4ceba08"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4cebb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2abfc4ce9b48" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc4ce9b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2abfc4ce8020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2abfc4ce81a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2abfc4ce8330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2abfc4ce84b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2abfc4ce8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2abfc4ce8950" loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2abfc4ce8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2abfc4ce8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2abfc4cee020" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2abfc4cee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4cee370"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4cee4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc4d4f758" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4d4f758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2abfc4497c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4d4c578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4d4a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4d4ca00"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4d4a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc4d49d60" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4d49d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2abfc4495960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4d45af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4d444a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4d44020"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4d44930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2abfc4d69de0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2abfc4d69de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4d640f8"/>
        <function-ref name="test" scoped="" ref="0x2abfc4d66980"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4d664f8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4d68a18"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4d66e08"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4d645d0"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4d65c20"/>
        <function-ref name="set" scoped="" ref="0x2abfc4d66020"/>
        <function-ref name="start" scoped="" ref="0x2abfc4d65310"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4d65798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc4d42950" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4d42950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4d70b80"/>
        <function-ref name="test" scoped="" ref="0x2abfc4d714a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4d72560"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4d71930"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4d6f088"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4d71020"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4d706f8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4d729e8"/>
        <function-ref name="start" scoped="" ref="0x2abfc4d71db8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4d70270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2abfc4d6fbe0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2abfc4d6fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4d6bdb8"/>
        <function-ref name="test" scoped="" ref="0x2abfc4d6c5b8"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4d6c130"/>
        <function-ref name="force" scoped="" ref="0x2abfc4d69778"/>
        <function-ref name="get" scoped="" ref="0x2abfc4d6d7a0"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4d6ca40"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4d692f0"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4d6b930"/>
        <function-ref name="set" scoped="" ref="0x2abfc4d6dc28"/>
        <function-ref name="start" scoped="" ref="0x2abfc4d6b020"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4d6b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2abfc4d5c698" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2abfc4d5c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4d8c930"/>
        <function-ref name="test" scoped="" ref="0x2abfc4d591f8"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4d5ad08"/>
        <function-ref name="force" scoped="" ref="0x2abfc4d8a310"/>
        <function-ref name="get" scoped="" ref="0x2abfc4d5a3a8"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4d59680"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4d8ce08"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4d8c4a8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4d5a830"/>
        <function-ref name="start" scoped="" ref="0x2abfc4d59b08"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4d8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2abfc4d80de0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2abfc4d80de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4d7b0f8"/>
        <function-ref name="test" scoped="" ref="0x2abfc4d7e980"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4d7e4f8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4d7fa18"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4d7ee08"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4d7b5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4d7cc20"/>
        <function-ref name="set" scoped="" ref="0x2abfc4d7e020"/>
        <function-ref name="start" scoped="" ref="0x2abfc4d7c310"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4d7c798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2abfc4d7ba50" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc4d7ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2abfc4d7bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2abfc4d8a988" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2abfc4d8a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4d87b80"/>
        <function-ref name="test" scoped="" ref="0x2abfc4d884a8"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4d88020"/>
        <function-ref name="force" scoped="" ref="0x2abfc4d85510"/>
        <function-ref name="get" scoped="" ref="0x2abfc4d89560"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4d88930"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4d85088"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4d876f8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4d899e8"/>
        <function-ref name="start" scoped="" ref="0x2abfc4d88db8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4d87270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2abfc4d7a148" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2abfc4d7a148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2abfc4d7a498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2abfc4d85b88" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2abfc4d85b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4d82db8"/>
        <function-ref name="test" scoped="" ref="0x2abfc4d83580"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4d830f8"/>
        <function-ref name="force" scoped="" ref="0x2abfc4d80778"/>
        <function-ref name="get" scoped="" ref="0x2abfc4d84760"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4d83a08"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4d802f0"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4d82930"/>
        <function-ref name="set" scoped="" ref="0x2abfc4d84be8"/>
        <function-ref name="start" scoped="" ref="0x2abfc4d82020"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4d824a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abfc4d63928" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abfc4d63928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4d5da08"/>
        <function-ref name="test" scoped="" ref="0x2abfc4d5e310"/>
        <function-ref name="get" scoped="" ref="0x2abfc4d604e0"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4d5e798"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4d5c020"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4d60e40"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4d5d580"/>
        <function-ref name="set" scoped="" ref="0x2abfc4d60968"/>
        <function-ref name="start" scoped="" ref="0x2abfc4d5ec20"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4d5d0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc4dff9e0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4dff9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2abfc4495960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4dfd768"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4dfc0c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4dfdbf0"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4dfc548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2abfc4dfca88" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc4dfca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc4df8b80"/>
        <function-ref name="test" scoped="" ref="0x2abfc4df94a8"/>
        <function-ref name="get" scoped="" ref="0x2abfc4dfb658"/>
        <function-ref name="reset" scoped="" ref="0x2abfc4df9930"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc4df7088"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4df9020"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc4df86f8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4dfbae0"/>
        <function-ref name="start" scoped="" ref="0x2abfc4df9db8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4df8270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc5360770" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc5360770"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2abfc4328570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2abfc4328570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc5360ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc53ab020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc53ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2abfc4495960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc53abd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc53aa6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc53aa230"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc53aab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2abfc53a8128" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2abfc53a8128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2abfc53a4270"/>
        <function-ref name="test" scoped="" ref="0x2abfc53a7af0"/>
        <function-ref name="get" scoped="" ref="0x2abfc53a8ca8"/>
        <function-ref name="reset" scoped="" ref="0x2abfc53a6020"/>
        <function-ref name="getMode" scoped="" ref="0x2abfc53a4748"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc53a7668"/>
        <function-ref name="isOn" scoped="" ref="0x2abfc53a6db8"/>
        <function-ref name="set" scoped="" ref="0x2abfc53a7190"/>
        <function-ref name="start" scoped="" ref="0x2abfc53a64a8"/>
        <function-ref name="stop" scoped="" ref="0x2abfc53a6930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2abfc4e27688" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2abfc4e27688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2abfc4495960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4e25400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4e25d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4e25888"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4e241f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abfc4e29420" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abfc4e29420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2abfc4495960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abfc4e281d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abfc4e28ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abfc4e28658"/>
        <function-ref name="overflow" scoped="" ref="0x2abfc4e27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2abfc4e46748" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2abfc4e46748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2abfc4e584d8"/>
        <function-ref name="enqueue" scoped="" ref="0x2abfc4e57240"/>
        <function-ref name="element" scoped="" ref="0x2abfc4e57870"/>
        <function-ref name="full" scoped="" ref="0x2abfc4e5a7c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2abfc4e58088"/>
        <function-ref name="dequeue" scoped="" ref="0x2abfc4e58b38"/>
        <function-ref name="empty" scoped="" ref="0x2abfc4e5a370"/>
        <function-ref name="size" scoped="" ref="0x2abfc4e5ac10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2abfc4e520f8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2abfc4e520f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2abfc4e51db0"/>
        <function-ref name="enqueue" scoped="" ref="0x2abfc4e4eaa8"/>
        <function-ref name="element" scoped="" ref="0x2abfc4e4c118"/>
        <function-ref name="full" scoped="" ref="0x2abfc4e510c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2abfc4e51960"/>
        <function-ref name="dequeue" scoped="" ref="0x2abfc4e4e448"/>
        <function-ref name="empty" scoped="" ref="0x2abfc4e52c40"/>
        <function-ref name="size" scoped="" ref="0x2abfc4e51510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2abfc4e4c790" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abfc4e4c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abfc4e4cae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4e4cc68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4e4cdf0"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4e4b020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abfc4e4b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2abfc4e4b430" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abfc4e4b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abfc4e4b780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abfc4e4b908"/>
        <function-ref name="getPayload" scoped="" ref="0x2abfc4e4ba90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abfc4e4bc18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abfc4e4bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2abfc4e7c4d8" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2abfc4e7c4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc4e7c828"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc4e7c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc4e532d0" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc4e532d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4e53620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc4e4a080" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc4e4a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc4e4a3d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc4e4a558"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc4e4a6e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc4e4a868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc4e4a9f0"/>
        <function-ref name="get" scoped="" ref="0x2abfc4e4ab78"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc4e4ad00"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc4e494b8"/>
        <function-ref name="set" scoped="" ref="0x2abfc4e49020"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc4e491a8"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc4e49330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2abfc4e50898" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2abfc4e50898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2abfc4e50be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2abfc4e67e58" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2abfc4e67e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2abfc4e641e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc4e96888" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc4e96888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4e96bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2abfc4e95020" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2abfc4e95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2abfc4e95370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2abfc4e8c020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2abfc4e8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2abfc4e8c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2abfc4e8c700" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2abfc4e8c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abfc4e8ca50"/>
        <function-ref name="stopDone" scoped="" ref="0x2abfc4e8cbd8"/>
        <function-ref name="start" scoped="" ref="0x2abfc4e8cd60"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4e8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abfc4e62c80" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SenseAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abfc4e62c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44989d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2abfc4498d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abfc4e83088"/>
        <function-ref name="fired" scoped="" ref="0x2abfc4e855e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abfc4e84470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abfc4e84020"/>
        <function-ref name="getdt" scoped="" ref="0x2abfc4e83928"/>
        <function-ref name="gett0" scoped="" ref="0x2abfc4e834d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2abfc4e85a38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abfc4e86820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abfc4e84a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abfc4e86cc0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4e85198"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2abfc4e805e8" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/DemoSensorC.nc">
      <component-ref qname="SenseAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2abfc4e805e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc4e7f158"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc4e7f5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2abfc53d0128" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2abfc53d0128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc53d0c70"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc53cf0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2abfc53cbbe8" loc="25:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensorC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc53cbbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2abfc53ca020"/>
        <function-ref name="configure" scoped="" ref="0x2abfc53ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2abfc53cdd98" loc="22:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensorC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2abfc53cdd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc53cc908"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc53ccd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2abfc53cb340" loc="24:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SenseAppC.Sensor.DemoSensorC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc53cb340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2abfc53cb690"/>
        <function-ref name="getChannel" scoped="" ref="0x2abfc53cb818"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2abfc53cb9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2abfc4ea9a48" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2abfc4ea9a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc4ea2620"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc4ea2a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2abfc4e9f718" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2abfc4e9f718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc4e9e3a8"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc4e9e830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2abfc4e9b3f0" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc4e9b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2abfc4e9b740"/>
        <function-ref name="getChannel" scoped="" ref="0x2abfc4e9b8c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2abfc4e9ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2abfc4e9a410" loc="24:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abfc4e9a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abfc4e9a760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abfc4e9a8e8"/>
        <function-ref name="request" scoped="" ref="0x2abfc4e9aa70"/>
        <function-ref name="granted" scoped="" ref="0x2abfc4e9abf8"/>
        <function-ref name="isOwner" scoped="" ref="0x2abfc4e9ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2abfc4ec9890" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc4ec9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2abfc4ec9be0"/>
        <function-ref name="configure" scoped="" ref="0x2abfc4ec9d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2abfc4ebf9b0" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2abfc4ebf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2abfc4ebfd00"/>
        <function-ref name="dataReady" scoped="" ref="0x2abfc4ec9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2abfc4ec30d0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2abfc4ec30d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2abfc4ec3420"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4ec35a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2abfc4ec3730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2abfc4eca020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abfc4eca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abfc4eca370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abfc4eca4f8"/>
        <function-ref name="request" scoped="" ref="0x2abfc4eca680"/>
        <function-ref name="granted" scoped="" ref="0x2abfc4eca808"/>
        <function-ref name="isOwner" scoped="" ref="0x2abfc4eca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc4ec8e10" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc4ec8e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc4ebb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2abfc4ebade0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2abfc4ebade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2abfc4eb9170"/>
        <function-ref name="dataReady" scoped="" ref="0x2abfc4eb92f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2abfc4eba488" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2abfc4eba488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2abfc4eba7d8"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4eba960"/>
        <function-ref name="dataReady" scoped="" ref="0x2abfc4ebaae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2abfc4edfc70" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2abfc4edfc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2abfc4eb7020"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x2abfc4eb71a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2abfc4eb7330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2abfc4eb74b8"/>
        <function-ref name="setChannel" scoped="" ref="0x2abfc4eb7640"/>
        <function-ref name="enableAdc" scoped="" ref="0x2abfc4eb77c8"/>
        <function-ref name="setAdlar" scoped="" ref="0x2abfc4eb7950"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2abfc4eb7ad8"/>
        <function-ref name="isComplete" scoped="" ref="0x2abfc4eb7c60"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4eb7de8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2abfc4eb6020"/>
        <function-ref name="getRef" scoped="" ref="0x2abfc4eb61a8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2abfc4eb6330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2abfc4eb65b8"/>
        <function-ref name="startConversion" scoped="" ref="0x2abfc4eb6740"/>
        <function-ref name="isStarted" scoped="" ref="0x2abfc4eb68c8"/>
        <function-ref name="getChannel" scoped="" ref="0x2abfc4eb6a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2abfc4eb6bd8"/>
        <function-ref name="setRef" scoped="" ref="0x2abfc4eb6d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2abfc4edd020"/>
        <function-ref name="setContinuous" scoped="" ref="0x2abfc4edd1a8"/>
        <function-ref name="getValue" scoped="" ref="0x2abfc4edd330"/>
        <function-ref name="dataReady" scoped="" ref="0x2abfc4edd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2abfc4eb8c60" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2abfc4eb8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4eba020"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4eba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2abfc4edd798" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abfc4edd798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2abfc4eddae8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2abfc4eddc70"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2abfc4edddf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2abfc4edc020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2abfc4edc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2abfc4f200c0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2abfc4f200c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2abfc4f20410"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x2abfc4f20598"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2abfc4f20720"/>
        <function-ref name="isEnabled" scoped="" ref="0x2abfc4f208a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2abfc4f20a30"/>
        <function-ref name="enableAdc" scoped="" ref="0x2abfc4f20bb8"/>
        <function-ref name="setAdlar" scoped="" ref="0x2abfc4f20d40"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2abfc4f1f020"/>
        <function-ref name="isComplete" scoped="" ref="0x2abfc4f1f1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4f1f330"/>
        <function-ref name="disableAdc" scoped="" ref="0x2abfc4f1f4b8"/>
        <function-ref name="getRef" scoped="" ref="0x2abfc4f1f640"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2abfc4f1f7c8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2abfc4f1fa50"/>
        <function-ref name="startConversion" scoped="" ref="0x2abfc4f1fbd8"/>
        <function-ref name="isStarted" scoped="" ref="0x2abfc4f1fd60"/>
        <function-ref name="getChannel" scoped="" ref="0x2abfc4f1e020"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2abfc4f1e1a8"/>
        <function-ref name="setRef" scoped="" ref="0x2abfc4f1e330"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2abfc4f1e4b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2abfc4f1e640"/>
        <function-ref name="getValue" scoped="" ref="0x2abfc4f1e7c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2abfc4f1e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2abfc4f18660" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2abfc4f18660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2abfc4f189b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2abfc4f1da00" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2abfc4f1da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2abfc4f1dd50"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x2abfc4f1a020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2abfc4f1a1a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x2abfc4f1a330"/>
        <function-ref name="setChannel" scoped="" ref="0x2abfc4f1a4b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2abfc4f1a640"/>
        <function-ref name="setAdlar" scoped="" ref="0x2abfc4f1a7c8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2abfc4f1a950"/>
        <function-ref name="isComplete" scoped="" ref="0x2abfc4f1aad8"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc4f1ac60"/>
        <function-ref name="disableAdc" scoped="" ref="0x2abfc4f1ade8"/>
        <function-ref name="getRef" scoped="" ref="0x2abfc4f19020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2abfc4f191a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2abfc4f19430"/>
        <function-ref name="startConversion" scoped="" ref="0x2abfc4f195b8"/>
        <function-ref name="isStarted" scoped="" ref="0x2abfc4f19740"/>
        <function-ref name="getChannel" scoped="" ref="0x2abfc4f198c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2abfc4f19a50"/>
        <function-ref name="setRef" scoped="" ref="0x2abfc4f19bd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2abfc4f19d60"/>
        <function-ref name="setContinuous" scoped="" ref="0x2abfc4f18020"/>
        <function-ref name="getValue" scoped="" ref="0x2abfc4f181a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2abfc4f18330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2abfc4f18cc0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2abfc4f18cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2abfc4f170a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2abfc4fbe388" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2abfc4fbe388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2abfc4fbe6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abfc4fbe880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2abfc4fbc020" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc4fbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2abfc4fbc390"/>
        <function-ref name="configure" scoped="" ref="0x2abfc4fbc518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2abfc4fbeac8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc4fbeac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abfc4fbee18"/>
        <function-ref name="requested" scoped="" ref="0x2abfc4fbd020"/>
        <function-ref name="granted" scoped="" ref="0x2abfc4fbd1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2abfc4fbd330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abfc4fbd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2abfc4fbf4f8" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abfc4fbf4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abfc4fbf868"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abfc4fbf9f0"/>
        <function-ref name="request" scoped="" ref="0x2abfc4fbfb78"/>
        <function-ref name="granted" scoped="" ref="0x2abfc4fbfd00"/>
        <function-ref name="isOwner" scoped="" ref="0x2abfc4fbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2abfc4fbd700" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2abfc4fbd700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2abfc4fbda50"/>
        <function-ref name="userId" scoped="" ref="0x2abfc4fbdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abfc53ba980" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abfc53ba980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abfc53bacd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2abfc53b9020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2abfc53b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2abfc53b9370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2abfc53b94f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2abfc53b9680"/>
        <function-ref name="dequeue" scoped="" ref="0x2abfc53b9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2abfc53b7d58" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2abfc53b7d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2abfc53b60f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abfc53b6278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2abfc53b5980" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2abfc53b5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2abfc53b5cf0"/>
        <function-ref name="configure" scoped="" ref="0x2abfc53b5e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2abfc53b4130" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2abfc53b4130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2abfc53b4480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2abfc53b4608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2abfc53b4790"/>
        <function-ref name="dequeue" scoped="" ref="0x2abfc53b4918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2abfc53b64c0" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc53b64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abfc53b6810"/>
        <function-ref name="requested" scoped="" ref="0x2abfc53b6998"/>
        <function-ref name="granted" scoped="" ref="0x2abfc53b6b20"/>
        <function-ref name="isOwner" scoped="" ref="0x2abfc53b6ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abfc53b6e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abfc53b4b60" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abfc53b4b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abfc53b2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abfc53b21a8"/>
        <function-ref name="led1On" scoped="" ref="0x2abfc53b2330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abfc53b24b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abfc53b2640"/>
        <function-ref name="get" scoped="" ref="0x2abfc53b27c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2abfc53b2950"/>
        <function-ref name="led0On" scoped="" ref="0x2abfc53b1020"/>
        <function-ref name="set" scoped="" ref="0x2abfc53b2c60"/>
        <function-ref name="led2On" scoped="" ref="0x2abfc53b2ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2abfc53b2de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2abfc53b7060" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abfc53b7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abfc53b73d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abfc53b7558"/>
        <function-ref name="request" scoped="" ref="0x2abfc53b76e0"/>
        <function-ref name="granted" scoped="" ref="0x2abfc53b7868"/>
        <function-ref name="isOwner" scoped="" ref="0x2abfc53b79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2abfc53b50e0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2abfc53b50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2abfc53b5430"/>
        <function-ref name="userId" scoped="" ref="0x2abfc53b55b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2abfc53b12e8" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2abfc53b12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc53b1638"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc53b17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2abfc4ff6780" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2abfc4ff6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2abfc4ff6ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2abfc4ff6d18" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc4ff6d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abfc4fe00a0"/>
        <function-ref name="requested" scoped="" ref="0x2abfc4fe0228"/>
        <function-ref name="granted" scoped="" ref="0x2abfc4fe03b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2abfc4fe0538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abfc4fe06c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2abfc4ff6060" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2abfc4ff6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc4ff63b0"/>
        <function-ref name="stop" scoped="" ref="0x2abfc4ff6538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2abfc4fe0908" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2abfc4fe0908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2abfc4fe0c58"/>
        <function-ref name="userId" scoped="" ref="0x2abfc4fe0de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2abfc541b740" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2abfc541b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2abfc541ba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2abfc541bcd8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2abfc541bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abfc541a0a0"/>
        <function-ref name="requested" scoped="" ref="0x2abfc541a228"/>
        <function-ref name="granted" scoped="" ref="0x2abfc541a3b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2abfc541a538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abfc541a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2abfc541b020" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2abfc541b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abfc541b370"/>
        <function-ref name="stop" scoped="" ref="0x2abfc541b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2abfc541a908" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2abfc541a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2abfc541ac58"/>
        <function-ref name="userId" scoped="" ref="0x2abfc541ade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2abfc500b398" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2abfc500b398"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2abfc4497c50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2abfc500e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2abfc5015ab0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2abfc5015ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc5014620"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc5014a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2abfc50136f8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2abfc50136f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc50123a8"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc5012830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2abfc5010e78" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc5010e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2abfc500f1f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2abfc500f380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2abfc500f508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2abfc5010020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2abfc5010020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2abfc5010370"/>
        <function-ref name="cancel" scoped="" ref="0x2abfc50104f8"/>
        <function-ref name="dataReady" scoped="" ref="0x2abfc5010680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2abfc4ffc9a8" loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2abfc4ffc9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abfc4ffccf8"/>
        <function-ref name="runTask" scoped="" ref="0x2abfc4ffce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2abfc5027b28" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2abfc5027b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abfc44978f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2abfc4497c50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2abfc50248f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2abfc5020680" loc="24:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2abfc5020680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc5047370"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc50477e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2abfc5046060" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2abfc5046060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2abfc5046bc8"/>
        <function-ref name="readDone" scoped="" ref="0x2abfc5044088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2abfc5044720" loc="27:/home/wangqi/platforms2013/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abfc5044720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abfc5044a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abfc5044c18"/>
        <function-ref name="request" scoped="" ref="0x2abfc5044da0"/>
        <function-ref name="granted" scoped="" ref="0x2abfc5043020"/>
        <function-ref name="isOwner" scoped="" ref="0x2abfc50431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2abfc5039e78" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/sensors/AtmegaVoltageP.nc">
      <component-ref qname="AtmegaVoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2abfc5039e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2abfc50751f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2abfc5075380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2abfc5075508"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2abfc44da580" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2abfc44dc5b0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2abfc44dc5b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2abfc44dcde8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2abfc44eaa98" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2abfc44dc5b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2abfc44ea518" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2abfc44ea818" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2abfc44dc5b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc44c9338" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc44c9338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2abfc44d3b98" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2abfc44d76f8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2abfc44d4348" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2abfc44d5d48" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2abfc44d40c8" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2abfc44d5610" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2abfc44d2b30" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2abfc44d2328" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2abfc44d7e28" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2abfc44c9e08" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2abfc44c9b98" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2abfc44d32a0" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2abfc44d4c78" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2abfc44d3020" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2abfc44d88a0" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2abfc44d8630" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abfc44d7070" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2abfc440c428" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2abfc440cb60" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2abfc440b328" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2abfc44171d8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2abfc4416810" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abfc4415020" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2abfc440ba40" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abfc4415b20" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2abfc44158b0" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2abfc440dcd8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2abfc4417948" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2abfc44160d8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2abfc44f27b0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.&#10;&#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2abfc44fa5e8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2abfc44fa378" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2abfc44eed78" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2abfc44fc7b0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2abfc44fc540" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2abfc44fb290" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2abfc44fb020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abfc3d356a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2abfc44fbad8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2abfc4366290" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2abfc4366a80" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc45633e8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc45633e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abfc4563618" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4563618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2abfc4572020" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4563618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2abfc4574070" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2abfc45735c0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4563618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4563618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2abfc4573020" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4563618"/></type-var>
          </variable>
          <variable name="dt" ref="0x2abfc4573340" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4563618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2abfc45747b8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2abfc45727a0" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4563618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abfc4562108" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4563618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2abfc4563e68" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4563618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abfc45628d8" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCompare" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x2abfc45db758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
          <interfacedef-ref qname="HplAtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45db758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2abfc45eabb8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2abfc45ea948" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2abfc45ed740" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2abfc45ed070" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x2abfc45e99f0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abfc45ee070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45db758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2abfc45edde8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2abfc45e9328" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2abfc45ea290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abfc45ee970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45db758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2abfc45ee700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45db758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abfc45eb4e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abfc45ebb80" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCounter" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x2abfc45d3758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
          <interfacedef-ref qname="HplAtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45d3758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2abfc45e0c50" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2abfc45e09e0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2abfc45e27a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abfc45cf070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45d3758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2abfc45e2e50" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2abfc45de378" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2abfc45e20d8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2abfc45e0328" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abfc45cf970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45d3758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2abfc45cf700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc45d3758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abfc45e1560" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abfc45e1c00" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCapture" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x2abfc4650068" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
          <interfacedef-ref qname="HplAtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4650068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2abfc464a4e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2abfc464a270" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2abfc464d070" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2abfc464e958" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abfc4650920" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4650068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2abfc464d718" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2abfc464abe0" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2abfc464cb88" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abfc464e290" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4650068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2abfc464e020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4650068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abfc464dde0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abfc464c4b8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2abfc4403cd8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the&#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2abfc43bd320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10;&#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2abfc4407da0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2abfc43e3360" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc4708a38" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc4708a38"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abfc4708c68" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4708c68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2abfc4705528" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc4708c68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2abfc4704550" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2abfc4705d38" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2abfc4704c40" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <short>&#10; The interface to a TinyOS task scheduler.</short>
        <long>&#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2abfc4356630" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Initialize the scheduler.</short>
          <long>&#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2abfc4363528" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2abfc4356d48" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long>&#10; Run the next task if one is waiting, otherwise return immediately.&#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2abfc4840440" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2abfc4840b08" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2abfc48416b0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2abfc483f930" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abfc4841d50" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2abfc483f258" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abfc4845848" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2abfc4841020" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2abfc4935798" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abfc44a23d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2abfc4938e68" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abfc44a23d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2abfc49351f8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc4935508" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2abfc4930c18" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc4930650" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc4930960" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2abfc4933e18" loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2abfc4932a50" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc49327e0" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abfc4933020" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc4931900" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2abfc4931c28" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <short>&#10; The basic message data type accessors.</short>
        <long>&#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2abfc492c338" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc492c0c8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2abfc492a338" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength().&#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc492a0c8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2abfc4948418" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than&#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc494ae10" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc4948160" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2abfc494a580" loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2abfc494b6d0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc494b140" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc494b450" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis&#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2abfc495c790" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2abfc44a2020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abfc495c520" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2abfc49436f8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abfc44a23d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abfc4943488" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2abfc4936c28" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abfc44a23d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2abfc49446f0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abfc44a23d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abfc4944480" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2abfc4940020" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abfc44a23d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abfc493f8d0" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abfc493fc08" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abfc44a23d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2abfc4942a58" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abfc44a23d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abfc49424a0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abfc49427d8" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abfc44a23d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2abfc493d3e0" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abfc493d170" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2abfc493b680" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abfc493b100" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2abfc493b400" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2abfc44a3b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2abfc493e290" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abfc493e020" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2abfc4959b48" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2abfc44a2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abfc4959598" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2abfc49598c8" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2abfc44a2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2abfc49588e8" loc="195:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2abfc44a2020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2abfc49550a8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc4947de0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2abfc4954290" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc4954020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2abfc4953338" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc49530c8" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2abfc494c690" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc494c100" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc494c410" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2abfc496aa68" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc496a4a0" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc496a7b0" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2abfc496ec68" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2abfc496d908" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc496d698" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abfc496bcf8" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;&#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc496b750" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2abfc496ba78" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2abfc49d8a40" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2abfc49d87d0" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2abfc49d7e30" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2abfc49d7bc0" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abfc49b8d98" loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         starting or the device was off and the device is now ready to turn&#10;         on.  After receiving this return value, you should expect a&#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abfc49d7258" loc="130:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         stopping or the device was on and the device is now ready to turn&#10;         off.  After receiving this return value, you should expect a&#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Protection" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <short>&#10; Protection (Serial) Interface&#10; </short>
        <long>&#10; Protection (Serial) Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="sendLost" ref="0x2abfc49cb6f8" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="17:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered after invalid data found in protection component, following the reset&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="amTypeMismatch" ref="0x2abfc49ce858" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered if the message am_type in the sendDone event DO NOT match that used in send command&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleSendDone" ref="0x2abfc49cb020" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="13:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered when  'idle' protection component catch the sendDone event&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2abfc49d20c8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
              <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc49da790" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2abfc49daab8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc49dadc8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RestartControl" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <short>&#10; Serial Restart Interface&#10; </short>
        <long>&#10; Serial Restart Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="restart" ref="0x2abfc49cdcf8" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <interfacedef-ref qname="RestartControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2abfc4a3c7d0" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abfc4a3a020" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialReset" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <short>&#10; Reset interface for Serial Protector&#10;&#10; </short>
        <long>&#10; Reset interface for Serial Protector&#10;&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="txReset" ref="0x2abfc4a43020" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <interfacedef-ref qname="SerialReset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2abfc4a5fb98" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2abfc4a5f5f8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc4a5f918" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2abfc4a5a4e0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2abfc4a5a270" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2abfc4a592a0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2abfc4a5ac58" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc4a59020" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2abfc4a5c258" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2abfc4a58a38" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2abfc4a58160" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc4a58480" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2abfc4a587a8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2abfc4a5cad0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abfc4a5e358" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2abfc4a5da50" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abfc4a5dd70" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2abfc4a5e0c8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2abfc4a3f2a0" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc4a40b70" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2abfc4a3f020" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2abfc4a423e0" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2abfc4a402a0" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.&#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abfc4a42bf8" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abfc44d0490"/>
                <typename><typedef-ref name="message_t" ref="0x2abfc44cf9e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2abfc4a40020" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2abfc4a8c020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2abfc4a90778" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2abfc4a96710" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2abfc4a95ab0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2abfc4a92578" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.&#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abfc4a92308" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2abfc4a93328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2abfc4a95290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abfc4a95020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2abfc4a92d70" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2abfc4a93b78" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been&#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2abfc4a77ba0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2abfc4a764b8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2abfc4a772a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2abfc4a7ab98" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
          <variable name="first_byte" ref="0x2abfc4a77020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2abfc4a74020" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2abfc4a76d40" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2abfc4a79d48" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2abfc4a79ad8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2abfc4a999f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abfc4a99780" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2abfc4a984b8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2abfc4a98248" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2abfc4c774a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2abfc4c77238" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2abfc4c762a0" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2abfc4c77c98" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2abfc4c76020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2abfc4c913e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2abfc4c935b0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2abfc4c8f9f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abfc4c8f780" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2abfc4c90a38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2abfc4c64730" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2abfc4c64e50" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2abfc4c93cd0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2abfc4c91ac0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2abfc4c903a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abfc4c90138" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2abfc4c8f110" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2abfc4e45b18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2abfc4e45b18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2abfc4e3f0d8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2abfc4e45b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2abfc4e3d9a0" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2abfc4e45b18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2abfc4e3d730" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2abfc4e45b18"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2abfc3d2f488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2abfc3d2f488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2abfc4e3b870" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.&#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2abfc4e45b18"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2abfc4e3b600" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x2abfc4e41a80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2abfc4e40968" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2abfc4e3fbf8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2abfc4e45b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2abfc4e41378" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2abfc4e401d8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2abfc4e50560" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2abfc4e502f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side&#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2abfc4ea4020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2abfc4ea56f8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2abfc4ea8468" loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the&#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2abfc4eabc08" loc="25:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2abfc4ea8c48" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the&#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2abfc4ea0790" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2abfc4ea0790"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2abfc4e9d030" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2abfc4e9dcf8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2abfc4ea0790"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2abfc4e9d778" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2abfc4e9da78" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2abfc4ea0790"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2abfc4ece0d8" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2abfc4ecf178" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2abfc4ed0848" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2abfc4ecf900" loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2abfc4eceab8" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after&#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2abfc4ec1768" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch&#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch&#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can&#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions.&#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be&#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2abfc4ec2a60" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2abfc4ec2db8" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2abfc4ec1178" loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2abfc4ec14c8" loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2abfc4ebf3f0" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't&#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference&#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abfc4ec0350" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2abfc4ec0670" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2abfc4ec09a8" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2abfc4ec0d58" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2abfc4ebf140" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2abfc4ec6440" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits&#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you&#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions.&#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be&#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2abfc4ec7738" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2abfc4ec7a90" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2abfc4ec7df8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2abfc4ec61a0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2abfc4ec4c80" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2abfc4ec4408" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abfc4ec6e48" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2abfc4ec4188" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2abfc4ee2440" loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="137:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAdlarOn" ref="0x2abfc4eebd10" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns ADLAR (ADC left adjust result) status&#10; </short>
          <long>&#10; Returns ADLAR (ADC left adjust result) status&#10; @returns TRUE if ADLAR is on.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2abfc4ee0580" loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="161:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2abfc4ee0310" loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2abfc4ee2b80" loc="148:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="144:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2abfc4eed418" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the ADC channel&#10; </short>
          <long>&#10; Sets the ADC channel&#10; @param mux New channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mux" ref="0x2abfc4eed1a8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2abfc4ee6020" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdlar" ref="0x2abfc4eeb578" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; </short>
          <long>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; @param adlarOn TRUE turns on ADLAR, FALSE turns it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adlarOn" ref="0x2abfc4eeb308" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2abfc4ee6e50" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2abfc4ee1ac0" loc="159:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="154:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2abfc4ee0d18" loc="176:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="168:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled.&#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2abfc4ee6710" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRef" ref="0x2abfc4eeae28" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current reference voltage&#10; </short>
          <long>&#10; Returns the current reference voltage&#10; @returns the current reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2abfc4ee55c8" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2abfc4ee5de8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2abfc4ee4540" loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2abfc4ee1328" loc="153:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="149:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2abfc4eedb88" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current ADC channel&#10; </short>
          <long>&#10; Returns the current ADC channel&#10; @return Current channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2abfc4ee80a8" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2abfc43dfa18"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2abfc43dd178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2abfc4ee9dd0" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2abfc43dfa18"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2abfc43dd178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRef" ref="0x2abfc4eea6d0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the reference voltage&#10; </short>
          <long>&#10; Sets the reference voltage&#10; @param ref New reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ref" ref="0x2abfc4eea460" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2abfc4ee9650" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2abfc43dfa18"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2abfc43dd178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2abfc4ee4cf8" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2abfc4ee8848" loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2abfc4edf970" loc="182:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="178:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abfc4edf700" loc="182:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abfc3d34bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2abfc4eb8070" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abfc4eb8848" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2abfc4f7e878" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2abfc4f7d178" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2abfc4f7a598" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2abfc4f79608" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2abfc4f45d40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2abfc4f7ad98" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2abfc4f78020" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2abfc4f7fc40" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2abfc4f76458" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10;&#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abfc3d34160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2abfc4f6cac8" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abfc435ee08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2abfc4f75c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2abfc4f6c858" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2abfc4f75c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2abfc4f70af8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2abfc4f6d5e8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abfc432a818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2abfc4f75c98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2abfc4f6d378" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2abfc4f75c98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2abfc4f6c020" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue.&#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2abfc4f75c98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2abfc4ff4c30" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abfc500c068" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abfc500c068"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abfc500c298" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc500c298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2abfc500cd30" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc500c298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2abfc500cac0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abfc500c298"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
