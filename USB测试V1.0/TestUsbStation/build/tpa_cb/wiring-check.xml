<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestUsbStationAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b24468cc460"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b24464d5598"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b24464d5598"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b2446834198"/></to>
    </wire>
    <wire loc="10:TestUsbStationAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b24468ced70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b2446841e08"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b2446841e08"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b244692c648"/></to>
    </wire>
    <wire loc="14:TestUsbStationAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b24468d3ca0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2446f28c48"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b2446f28c48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b24465681c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestUsbStationAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b24468ea060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2446f48e18"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2446f48e18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2446f8b440"/></to>
    </wire>
    <wire loc="22:TestUsbStationAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b24468dd178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b24477bec20"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b24477bec20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b2447e4c400"/></to>
    </wire>
    <wire loc="23:TestUsbStationAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b24468ec8a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b24477bc578"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b24477bc578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2447e4bbd8"/></to>
    </wire>
    <wire loc="27:TestUsbStationAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b2446904948"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b24477b1490"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b24477b1490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b2446f43020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:TestUsbStationAppC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b24468e7060"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b2446fb0020"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b2446fb0020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b2446fe8600"/></to>
    </wire>
    <wire loc="30:TestUsbStationAppC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446914cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446f71af0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446f71af0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446f80968"/></to>
    </wire>
    <wire loc="31:TestUsbStationAppC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b24469104d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b2446fb52e8"/></to>
    </wire>
    <wire loc="231:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b2446fb52e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b2447435bd0"/></to>
    </wire>
    <wire loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b24475fab90"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b244743fb40"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b2447cbb430"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b244734a238"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2447c80de8"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2447bf8aa0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2446f5c888"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b2446db27f0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b2446dad688"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2446d2ad18"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2446b00b88"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2446f182d0"/></to>
    </wire>
    <wire loc="16:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2446587378"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b24468347d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b2446405898"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b2446405898"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b244647c2a8"/></to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b24468331d0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b24475fa0d8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b24468331d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b24464c9890"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b24464c9890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b24464d0e80"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2446833898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b24464da790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b24465148b8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b24464d1538"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2446946480"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b24464d7bd8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x2b24464d1538"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x2b24464d7578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b24464de700"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b24464de700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b24464faab0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="WDInit" scoped="" ref="0x2b24464d6318"/></from>
      <to><interface-ref name="WDInit" scoped="" ref="0x2b24465295f8"/></to>
    </wire>
    <wire loc="17:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <from><interface-ref name="WDInit" scoped="" ref="0x2b24465295f8"/></from>
      <to><interface-ref name="WDInit" scoped="" ref="0x2b2446532690"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b24464dede8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2447e73810"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b24464dede8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2447e3a810"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b24464dede8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2447b0c770"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b24464dede8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b244788ecf8"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b24464dede8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2447858848"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b24464f9858"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x2b24464dede8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x2b2446508020"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x2b24464ea470"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x2b2446508688"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x2b24464e7b80"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b24464f91f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2446514288"/></to>
    </wire>
    <wire loc="18:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b2446532c98"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b24464d5598"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <from><interface-ref name="TimerWD" scoped="" ref="0x2b24465447b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b24465527b0"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b24465527b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b24465681c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <from><interface-ref name="wd_task" scoped="" ref="0x2b2446556188"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b24465681c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b24468140c8"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b24467d7c70"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b24465619e8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b24465619e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b24477eee00"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b244682a5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b24467c2ab0"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b24477e7310"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b24477f4de0"/></to>
    </wire>
    <wire loc="17:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b24477f4de0"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x2b244657c988"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b24477e9128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446750610"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2446750610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446749270"/></to>
    </wire>
    <wire loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="ClientAlarm" scoped="" ref="0x2b244657c988"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2446587cc0"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b24465c7020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2446742e10"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2446742e10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2447814d68"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2447814d68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2447856020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447811dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446633a88"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2446633a88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446656ad0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b244780cab0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b2446640be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b24478520a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447811dd8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b244784ec28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b244780cab0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2b244664e0c8"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2b2446668e00"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b2446640be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b2446663700"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b2446640be0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b244665e988"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b2446640be0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b244666db88"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b2446675148"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b24464a61e0"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b24464b22b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b244763d760"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b24464b22b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2446e3d168"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b24464b22b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2446da94d8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b24464b22b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2446677a50"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b24467052b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b24466fedd8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b24466fedd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b244788d4f8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2446730020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446633a88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b244788a6d0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2446730020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b244675d450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b24467052b0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b24467d3cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b2446825618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b244647b1c8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b2446485668"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b2446407cb8"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b2446946480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b244692c080"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b24469447c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b2446949020"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b2446949020"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b2446974af0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b244692a958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b2446948190"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b2446948190"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2b2446973c78"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b2446929ae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b2446947338"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b2446947338"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b2446972e00"/></to>
    </wire>
    <wire loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b2446974af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c8860"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b2446973c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c8860"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b2446972e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c8860"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b244698c7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469eaa88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b2446965348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469ba020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b244697a348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469d5370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b2446992020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469cf7c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b24469864d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469eaa88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b244695ce00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469a3560"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b2446995c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469cf7c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b24469591a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c8860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b244696e348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c2b88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b24469827e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469ba020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b24469777e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469d5370"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b2446961658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469a3560"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b2446956658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c8860"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b244696b7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c2b88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b244697fc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469ba020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b244698e4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469cf7c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b24469881a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469eaa88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b244697c020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469d5370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b244695eaf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469a3560"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b244698be00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469eaa88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b2446970020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c2b88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b24469844d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469ba020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b24469794d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469d5370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b24469911a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469cf7c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b244695a020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469a3560"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b2446958348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c8860"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b244696d4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c2b88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b2446981968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469ba020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b2446976968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469d5370"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b24469607e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469a3560"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b24469557e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c8860"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b244696a968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c2b88"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b244698d658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469cf7c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b2446967c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469ba020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b244697b1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469d5370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b2446994e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469cf7c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b2446987348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469eaa88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b244695dc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469a3560"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b2446975af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469cf7c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b244696f1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c2b88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b2446983658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469ba020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b2446978658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469d5370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b2446990348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469cf7c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b2446964430"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469a3560"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b24469574d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c8860"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b244696c658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c2b88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b2446980af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469ba020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b2446989020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469eaa88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b244697ee00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469d5370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b2446968af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469c2b88"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b244695f968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b24469a3560"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b2446f170f8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b2446f0a748"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b2446f12790"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b2446edcc58"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b2446edcc58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b244794b530"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b2446f11430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2446edb888"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b2446edb888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2446a86d78"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b2446f2de58"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b2446f15898"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b2446a86d78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2446b06b98"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b2446ed9578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446a849b0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b2446a849b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446b07618"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b2446ed8bd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446aa81a0"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446aa81a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446b05888"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b244794a2c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b2446a4aa70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b244794ae80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446a849b0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b2446a4aa70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b2446a91e40"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b2446a90bd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b2446a875b0"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b2446a875b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b2446aa0310"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b2446a8f888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446a849b0"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b2446a8d020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2446a86d78"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b2446a8dc58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b2446a8c470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2446a8a5f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2446afd2e8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2446afd2e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2446d0ab88"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Protection" scoped="" ref="0x2b2446aa44c8"/></from>
      <to><interface-ref name="Protection" scoped="" ref="0x2b2446d136b8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b2446a867a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b2446b07060"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="RestartControl" scoped="" ref="0x2b2446aa7998"/></from>
      <to><interface-ref name="RestartControl" scoped="" ref="0x2b2446d20430"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b2446b00b88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2446d0a5f0"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b2446af95a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b2446aa6020"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b2446b035b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b2446aa6020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2446d21968"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2446afd2e8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b2446b04308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b2446afcce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b2446b03020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b2446afc270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b2446b16520"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b2446d39080"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b2446d39080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b2446d363d8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b2446b0b448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b2446d39848"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b2446d39848"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b2446d31498"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b2446b1bc50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b2446cfa448"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2446d0ab88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b24479ec838"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b2446afcce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b2446d09e78"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b2446d09e78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b24479e06f8"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b2446d0a5f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b24479ec2a0"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b2446afc270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b2446d097e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b2446d097e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b24479e0020"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2b2446af74f0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b2446d08a80"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2b2446d08a80"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b24479df3f0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2b2446d04740"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2b2446b19550"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b2446d071c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b2446b1bc50"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b2446d07a88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b2446af95a8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b2446d050a0"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2b2446b16520"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b2446d057c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b2446b0b448"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b24479dfb48"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b2446d071c0"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b24479e9c18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b2446d07a88"/></to>
    </wire>
    <wire loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b24479dde60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b2446d07a88"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b24479d0700"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b2446d07a88"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b24479de578"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b24479ebe20"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b24479dee20"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b24479eb3f0"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2b24479dd8c8"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b24479ea700"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b24479eacf8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b24479d26b0"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2b24479e62a8"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2b2446d04740"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b24479e72a8"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2b2446d050a0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b24479d1760"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b2446d057c0"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x2b24479db538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b24479cb660"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b24479cb660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b24465681c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b24479e40a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b24479e3120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b24479e68c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b24479e4840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b24479d64e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b24479d6c80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b2446d34b60"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b2446d36b90"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b2446d36b90"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b2446d77a88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b2446d31498"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b2446d762a8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2b2446d374a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b2446d304a0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2b2446d304a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b2446d752a8"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b2446d363d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b2446d77328"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2446d30d68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446e0c020"/></to>
    </wire>
    <wire loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2446e0c020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446e0aa98"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2446d71020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446d30d68"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b2446d758c0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b2446d85060"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b2446d85060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b2446daf020"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b2446d740a0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b2446d858b8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b2446d858b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b2446daf8b8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b2446d74840"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b2446db6158"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b2446db6158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b2446dae158"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b2446db4860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b2446daa020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b2446db56b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b2446dadd98"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b2446db4020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b2446dab6b8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2446da9b48"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b24464da790"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b2446da8950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b24464a61e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b2446da8950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b24464a61e0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2446e0aa98"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446eee270"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2446ec16d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446e04638"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2446e04638"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2446e233c0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b2446eeb450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446ec35a8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2446ec35a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2447b0b020"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b2446e2c978"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b2446e43688"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b2446e31840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b2446e1e118"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b2446e31840"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b2446e4d278"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b2446e31840"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b2446e48360"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b2446e3d828"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b24464a61e0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447b08128"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2446ec16d0"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2b2446f0b4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b2446f5b020"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b2446f2de58"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b2446f53020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b24464d5598"/></to>
    </wire>
    <wire loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b2446f53700"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2446a8a5f8"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2446f8b440"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2446fa0b78"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b2446f74a80"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b2446f86c88"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b2446f86c88"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b2446f9a498"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b2446f771c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b2446f847d8"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b2446f847d8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b2446f98020"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b2446f777a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2446f825f8"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b2446f825f8"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b2446fcf550"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b2446f45db8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b2446f883c8"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b2446f883c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b2446f9dc30"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b2446f43b68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b2446f861c8"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b2446f861c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b2446f9b968"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b2446f671d8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b2446f7f318"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b2446f7f318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b2446fb7a18"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b2446f43020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b2446f874e8"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b2446f874e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b2446f9cdc0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2446f6e020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2446fab848"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2446fab848"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2446fe0cb8"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446f80968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446fb70c0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b2446f6f020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b2446f7fdb0"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b2446f7fdb0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b2446fb65e0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b2446f75448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446f812c0"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b2446f812c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446fd1e50"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2446f90e48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2446fa4758"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2446fa4758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2446fd8bf0"/></to>
    </wire>
    <wire loc="219:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2446fa0b78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2447391988"/></to>
    </wire>
    <wire loc="332:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b2446fe8600"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b24475ce600"/></to>
    </wire>
    <wire loc="278:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2446fd8bf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2447572920"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b2446f9a498"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b244718a020"/></to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b2446f98020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b244718a6f8"/></to>
    </wire>
    <wire loc="137:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b2446fcf550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b244718d578"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b2446f9dc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b244718c388"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b2446f9b968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b244718b7e0"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b2446fb4bd8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b2446feb2d0"/></to>
    </wire>
    <wire loc="330:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b2446feb2d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b24475d12d0"/></to>
    </wire>
    <wire loc="220:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b2446fb7a18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b24473c5060"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b2446f9cdc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b244718b0c8"/></to>
    </wire>
    <wire loc="277:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2446fe0cb8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b244756e598"/></to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2446fa7430"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2446fe1890"/></to>
    </wire>
    <wire loc="334:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2446fe1890"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2447616830"/></to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b2446f7d828"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b2446fb5e40"/></to>
    </wire>
    <wire loc="331:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b2446fb5e40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b244761ad70"/></to>
    </wire>
    <wire loc="255:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446fb70c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2447491578"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b2446f833c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b2446f98be0"/></to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b2446f98be0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b244718ae10"/></to>
    </wire>
    <wire loc="198:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b2446fb65e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b244739d268"/></to>
    </wire>
    <wire loc="136:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b2446fd1e50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b244718f020"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b2446f7ebd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b2446fb52e8"/></to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b2446faa808"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b2446fe1080"/></to>
    </wire>
    <wire loc="333:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b2446fe1080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b2447616020"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b2446f82020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b2446fd1860"/></to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b2446fd1860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b2447189550"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2447391988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b24473c5b30"/></to>
    </wire>
    <wire loc="317:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b2446fdc370"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b24475e15b0"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b24475ce600"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b24475f2548"/></to>
    </wire>
    <wire loc="171:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b2446fcc218"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b2447228b50"/></to>
    </wire>
    <wire loc="159:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b2446fc6208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2447218748"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b2447218748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2447bf6dd8"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b244718a020"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b2447b7d388"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b244718a6f8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b2447b7da60"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b244718c388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b2447b7f698"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b244718b7e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b2447b7ec28"/></to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b2446fc0020"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b24472f6900"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b24472f6900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b2447c63778"/></to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b2446fbf3d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2447212b38"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b24475d12d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b24475f5208"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b24473c5060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b2447cc3458"/></to>
    </wire>
    <wire loc="316:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b2446fe5948"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b24475e33b0"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b244718d578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2447b80888"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b244718b0c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b2447b7e510"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b244756e598"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2447d5d2d0"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2447616830"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b2447738188"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b244761ad70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b2447641d70"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b2446fc7d80"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b2447229888"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b244718ae10"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b2447b7c1c0"/></to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b244739d268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b2447398470"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b2447435bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b2447cba9c8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b244718f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2447b81268"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2447572920"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2447d61688"/></to>
    </wire>
    <wire loc="170:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b2446fcdaf0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b24472285b8"/></to>
    </wire>
    <wire loc="105:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b2447616020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b244763d020"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b2447189550"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b2447b7c8d8"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b244703c858"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b24472f9980"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b24472f9980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b2447c667f8"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b2447035640"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b24470be2e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b24470398b8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b244756e598"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2b244702f810"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b24475d3020"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b24475d3020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b24475f7a50"/></to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b24470c52d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2447615ae0"/></to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2447615ae0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2447739160"/></to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b2447187a08"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b244701bda8"/></to>
    </wire>
    <wire loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b2447188a50"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b24471c1b40"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b2447187430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b2447271430"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b2447189ba8"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b2447271a08"/></to>
    </wire>
    <wire loc="148:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b24471b1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2447218748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b24471c0618"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b2447272a50"/></to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b24472272c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b24472f9980"/></to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b24472660a0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b244725fd20"/></to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b2447266988"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b2447273638"/></to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b24472682e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b2447273c10"/></to>
    </wire>
    <wire loc="180:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b2447270928"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b2447365470"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b2447365470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b2447c84d98"/></to>
    </wire>
    <wire loc="181:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b244726f2a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b244739ebd0"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b244739ebd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b244739a5b8"/></to>
    </wire>
    <wire loc="182:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b244726f880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b24472f5b98"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b24472f5b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b2447c62a10"/></to>
    </wire>
    <wire loc="187:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b244733bab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b244739de20"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b244739de20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b244739ab90"/></to>
    </wire>
    <wire loc="192:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b2447362580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b2446ff46c0"/></to>
    </wire>
    <wire loc="193:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b2447364510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b244739e2e8"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b244739e2e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b244739cc38"/></to>
    </wire>
    <wire loc="199:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2447399a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2447491578"/></to>
    </wire>
    <wire loc="200:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b244739cc38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b24473c7430"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b24473c7430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b24473c45c8"/></to>
    </wire>
    <wire loc="201:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b244739a5b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b24473c7d18"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b24473c7d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b24473c3020"/></to>
    </wire>
    <wire loc="202:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b244739ab90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b24473c62e8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b24473c62e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b24473c35f8"/></to>
    </wire>
    <wire loc="215:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b24473c5b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2447436270"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2447436270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2447cbc870"/></to>
    </wire>
    <wire loc="216:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b24473c45c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b2447436ce0"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b2447436ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b2447cbba08"/></to>
    </wire>
    <wire loc="217:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b24473c3020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b2447435638"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b2447435638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b2447cba430"/></to>
    </wire>
    <wire loc="218:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b24473c35f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b244756a020"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b244756a020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b2447d5acd8"/></to>
    </wire>
    <wire loc="228:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b24474333f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b2447478020"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b2447478020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b2447ceeb58"/></to>
    </wire>
    <wire loc="229:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b2447433c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b2447365d18"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b2447365d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b2447c806c8"/></to>
    </wire>
    <wire loc="230:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b24474345d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b244758fb10"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b244758fb10"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b2447588020"/></to>
    </wire>
    <wire loc="235:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b2447364df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b24474788c8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b24474788c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b2447cec578"/></to>
    </wire>
    <wire loc="244:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b2447476ce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b2447028af8"/></to>
    </wire>
    <wire loc="245:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b24474770c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b244746f558"/></to>
    </wire>
    <wire loc="246:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b24474779a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b24474d6020"/></to>
    </wire>
    <wire loc="247:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b24474760f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b24470be2e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b24474c2190"/></from>
      <to><interface-ref name="SoftAckAlarm" scoped="" ref="0x2b2447610020"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftAckAlarm" scoped="" ref="0x2b2447610020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2447727230"/></to>
    </wire>
    <wire loc="253:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b244748ed60"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b2447562020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="254:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b244748f060"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b24474c3180"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="256:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b244748fc58"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b2446ff9618"/></to>
    </wire>
    <wire loc="257:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b2447490020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b24474f1a10"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b24474f1a10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b24474eb020"/></to>
    </wire>
    <wire loc="258:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b2447490908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b24474f03f0"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b24474f03f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b24474eb908"/></to>
    </wire>
    <wire loc="259:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2b244748d7f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b24475d3020"/></to>
    </wire>
    <wire loc="260:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b24474d67e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b244746fe00"/></to>
    </wire>
    <wire loc="261:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b24474c9020"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b24472f9980"/></to>
    </wire>
    <wire loc="262:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b24474c6020"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b24470025f8"/></to>
    </wire>
    <wire loc="267:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b24474e85b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b24470198e0"/></to>
    </wire>
    <wire loc="268:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b24474eb020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b244758e888"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b244758e888"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b2447587020"/></to>
    </wire>
    <wire loc="269:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b24474eb908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b244758d268"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b244758d268"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b2447587908"/></to>
    </wire>
    <wire loc="270:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2b24474e90a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b24475d4798"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b24475d4798"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b24475f72c0"/></to>
    </wire>
    <wire loc="275:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2447569020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2447616830"/></to>
    </wire>
    <wire loc="276:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b2447568020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b2447562a70"/></to>
    </wire>
    <wire loc="279:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b2447568da0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b2447562020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="284:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b2447593928"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b24475e0020"/></to>
    </wire>
    <wire loc="294:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b24475855b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b24470198e0"/></to>
    </wire>
    <wire loc="295:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b2447587020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b244757d3f0"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b244757d3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b24475778c8"/></to>
    </wire>
    <wire loc="296:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b2447587908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b24475d4020"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b24475d4020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b24475f89e8"/></to>
    </wire>
    <wire loc="297:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2b2447588020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b244757e5f8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b244757e5f8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b2447579a08"/></to>
    </wire>
    <wire loc="306:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2b2447579a08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b24475d9778"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b24475d9778"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b24475f92d0"/></to>
    </wire>
    <wire loc="307:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b24475778c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b24475d55d8"/></to>
    </wire>
    <wire loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b24475d55d8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b24475f80c0"/></to>
    </wire>
    <wire loc="312:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntCtrlFlag" scoped="" ref="0x2b24475e0e00"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b2447562020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="313:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b2447604478"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b24475e15b0"/></to>
    </wire>
    <wire loc="314:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b24476072d8"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b24475e33b0"/></to>
    </wire>
    <wire loc="315:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2b2447603020"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2b24475c1aa0"/></to>
    </wire>
    <wire loc="318:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b2447065998"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b24475e15b0"/></to>
    </wire>
    <wire loc="319:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b244702c698"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b24475e33b0"/></to>
    </wire>
    <wire loc="323:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b24475de8c8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b24475d3020"/></to>
    </wire>
    <wire loc="328:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b244760c100"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b24470025f8"/></to>
    </wire>
    <wire loc="329:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b244760b5a8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b244756e598"/></to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b2447603898"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b2447562020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="337:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b24476024f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b2447562020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="338:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b24476010e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b2447562020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b24470be2e8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b2447b9eaa8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2447b9d970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b24470c52d0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b2447b9a880"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b24470d2c30"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b2447b78ce8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b24471684d8"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b2447b7b020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b2447189ba8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b2447b7bda0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b2447188a50"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b2447b79708"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b2447187430"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b2447b79de0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b2447187a08"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b2447216510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b2447bf4af8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2447216c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2447bf3268"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2447bf3b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2447215550"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b2447bf22b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b2447bf70a0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b2447bf2d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b2447c618e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b24471684d8"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b2447c60430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b244733bab0"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b2447c7d020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b2447350d70"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b2447350d70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b244734a850"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b2447c7dbd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b2447c7a140"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b2447c7a140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b2447349b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b2447c7f458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b2447364510"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b2447c7fd40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b2447364df8"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b2447c7e4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b2447362580"/></to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b2447397100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2447399a10"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b2447cb9450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b24474345d8"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b2447cb7268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b24470d2c30"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b2447cb7c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b24474333f0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b2447cb6578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b2447433c98"/></to>
    </wire>
    <wire loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b2447cb54f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b2447cb5c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b2447cb6d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b2447cecd38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b24474770c0"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b2447ce82a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b2447476ce8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b2447ceb670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b24474779a8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b2447cebd90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b24474760f0"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b2447ce99d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b2447440690"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b2447440690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b2447485568"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2b2447ce8d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b244743e668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b2447487528"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b2447444940"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b244743fb40"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b24474c3180"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b2447d825a0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2447d814d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b24474c2190"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b2447d7d528"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b24470d2c30"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b24474f4338"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b24474ee658"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b24474f0b10"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b24474e90a0"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b24474f2be0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b24474ec020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b24474ef268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b24474e9800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b24474ee020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b24474e85b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b24474f2648"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b24474eda08"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b24474f4d68"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b24474ed120"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b2447d568a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b2447568020"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2447d586d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2447569020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b2447d578c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b2447534380"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b2447534380"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b2447531ab0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b2447d59b30"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b2447568da0"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2447530c80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446750610"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2447590268"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b244758a4d0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b244758d988"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b24475860a0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b244758c0e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b2447586800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b244758ce60"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b24475855b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b244758f578"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b2447589908"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b2447590c98"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b2447589020"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2447581d08"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b244757a020"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b244757c3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b24475c8a08"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b244757cb10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b24475c72a8"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b244757b8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b24475c6060"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b244757dc98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b24475c82a8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b244757e060"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b2447579430"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b244757f780"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b244757aa90"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2447739160"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2447dd9ab0"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b24475cb990"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b24476448e8"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2447727230"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2447e17ab0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b2447738188"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b2447736560"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCalibration" scoped="" ref="0x2b24475d2a28"/></from>
      <to><interface-ref name="RadioCalibration" scoped="" ref="0x2b24475f6930"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b2447633ad0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b244760c100"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b2447632cf0"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b2447603898"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b2447631880"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b24476024f0"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b2447630518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b24476010e0"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b244762f2b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b244760b5a8"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b244763bd50"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b2447738188"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2b2447637020"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2b244664e0c8"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b2447627800"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b24470d2c30"/></to>
    </wire>
    <wire loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b24476399f8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b244773ea10"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b24476262f0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b24464a61e0"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="ExtAmpControl" scoped="" ref="0x2b24476269e8"/></from>
      <to><interface-ref name="ExtAmpControl" scoped="" ref="0x2b2447601c70"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b244762b020"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b24476072d8"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b24476281c0"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b2447604478"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2b2447628d30"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2b2447603020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2447734758"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b24467052b0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2447dd9ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2447e39020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447dd6b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446633a88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447dd1610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b2446640be0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447e350a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447dd6b18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447e31c28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447dd1610"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2447e17ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2447e72020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447e13b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2446633a88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447e0e610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b2446640be0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447e6e0a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447e13b18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447e6ac28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447e0e610"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b2447e4c400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b2447e40790"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b24477bd888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2447e4b020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b2447e4b020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2446f777a0"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b2447e4bbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446f75448"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b24477babd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b2447e492a8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b2447e492a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446f71af0"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b2447e3f450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b24477d5020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b2447e3e060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446f75448"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b24477d5020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b24477d28a8"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b24477d16f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b2446f45db8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b24477d03f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446f75448"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b24477cfa10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2446f777a0"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b24477ce780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b24477cd020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b24477b1a28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b2446f777a0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b24477b0700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b2446f75448"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc" safe="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="WatchDogC" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
        <short>&#10; internal watchdog&#10;&#10; </short>
        <long>&#10; internal watchdog&#10;&#10; @author tango&#10; @date 2014/04/23&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="WatchDogP" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
        <short>&#10; internal watchdog&#10;&#10; </short>
        <long>&#10; internal watchdog&#10;&#10; @author tango&#10; @date 2014/04/23&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WatchDogC.TimerWDC" loc="44(WatchDogC.TimerWDC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C" loc="7(TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="MuxAlarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.VirtualizeAlarmC" loc="46(MuxAlarm62khz32C_.VirtualizeAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C" loc="37(MuxAlarm62khz32C_.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24465cdd40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465db4a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC" loc="35(Counter62khz32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24466fd020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24466fd748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestUsbStationC" loc="7:TestUsbStationC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC" loc="51(SerialDispatcherC.SerialDispatcherCommonC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherCommonC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP" loc="62(SerialDispatcherC.SerialDispatcherCommonC.SerialP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <instance number="0">
        <component-ref qname="SerialP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC" loc="47(SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HdlcTranslateC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC" loc="44(SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SR" loc="1(SerialActiveMessageC.SR):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <instance number="0">
        <component-ref qname="SerialRestartControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SerialProtectorC" loc="11(SerialActiveMessageC.SerialProtectorC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DummySerialProtectorC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short>&#10; Private component of the Atmega1281 serial port HPL.</short>
        <long>&#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC" loc="35(CounterMcu32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b24464fb960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP" loc="35(CounterMcu32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24466fd020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24466fd748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b24464fb960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b24464fb960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.Timer0" loc="44(TestUsbStationAppC.Timer0):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.RadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a&#10; specific random number generator, it should wire to that component&#10; directly.&#10;&#10; @author  Barbara Hohlt&#10; @author  Phil Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative&#10;  linear congruential generator,&#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1)&#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAddressRecognitionLayerC" loc="11(RFA1RadioC.SoftwareAddressRecognitionLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SoftwareAddressRecognitionLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC" loc="37(RFA1RadioC.SoftwareAckRadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ADLayerC" loc="10(RFA1RadioC.ADLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AntennaDiversityLayerC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24465cdd40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465db4a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC" loc="37(RFA1DriverLayerC.SoftAckAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="2">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24465cdd40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465db4a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC" loc="47(TestUsbStationAppC.AMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC.SenderC" loc="47(TestUsbStationAppC.AMSenderC.SenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.AMReceiverC" loc="43(TestUsbStationAppC.AMReceiverC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeAlarmC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc" abstract="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2446589cd8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2446589cd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b2446586460" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2446586460"/></type-var>
        </typedef>
        <constant name="num_alarms" ref="0x2b2446586770" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b24465cdd40" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24465cdd40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b24465db4a0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465db4a0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b24465db7c0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2b24465dbaf8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b24465f3cd8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24465f3cd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b24465f0460" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465f0460"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b24465f0780" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2b24465f0ab8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b24466fd020" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24466fd020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b24466fd748" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24466fd748"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b24466fda68" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b244670cbe8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b244670cbe8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b2446709348" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2446709348"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b2446709668" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b244674bab8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b244674bab8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b2446748278" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b2446748278"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b2446748640" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b2446748640"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b2446748db8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b2446748db8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b24467461a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b2446746930" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b2446746930"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b244674e748" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b244674e748"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b244676e020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b244676e020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b244676e3e8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b244676e3e8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b244676eb60" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b244676eb60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b244676c020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b24467b4a88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24467b4a88"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b24467d05d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b24467d05d8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b24467d08e8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x2b24469a55f0" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b24469a5958" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b24469a5cc0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b2446a090c8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b2446a1f8c0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b2446a45db0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherCommonC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc" abstract="">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2b2446b18740" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
          <component-ref qname="SerialDispatcherCommonC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2b2446c21c88" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
          <component-ref qname="SerialDispatcherP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialRestartControlP" loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummySerialProtectorC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b2446ed6e78" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b2446ed6e78"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b2446f09200" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b24471ae998" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b24471a1e30" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAddressRecognitionLayerC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b244752f450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b244752f450"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AntennaDiversityLayerC" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="rxmode_dfl" ref="0x2b24475c0020" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
        <constant name="txmode_dfl" ref="0x2b24475c0378" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b2447790a78" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b24477895b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b24477b5398" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b24464d4aa8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b24464d4aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464d4df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b24464d5598" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b24464d5598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b24464d58e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b24464c9890" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b24464c9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464c9be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b24464da790" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b24464da790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b24464daae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b24464dac68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b24464dadf0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b24464d1020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b24464d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b24464d1538" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2b24464d1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464d1888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WDInit" ref="0x2b24464d6318" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDInit" scoped="" ref="0x2b24464d6318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464d6668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b24464d0e80" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b24464d0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464d71f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b24464d7bd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2b24464d7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464d6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x2b24464d7578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x2b24464d7578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464d78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b24464de700" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b24464de700"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464dea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2b24464ea470" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2b24464ea470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464ea7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2b24464dede8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2b24464dede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464ea170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x2b2446508688" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x2b2446508688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24465089d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b24464faab0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b24464faab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464fae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2b2446508020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2b2446508020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446508370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b24464f91f0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b24464f91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464f9540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2b24464f9858" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2b24464f9858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24464f9ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2446514288" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2446514288"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24465145d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b24465148b8" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b24465148b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b2446514c08"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b2446514d90"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b2446512020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b24465121a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b2446512330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x2b24464e7b80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x2b24464e7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446538020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WDInit" ref="0x2b24465295f8" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <component-ref qname="WatchDogC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDInit" scoped="" ref="0x2b24465295f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446529948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wd_task" ref="0x2b2446556188" loc="25:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wd_task" scoped="" ref="0x2b2446556188"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24465564d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b2446556660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WDInit" ref="0x2b2446532690" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDInit" scoped="" ref="0x2b2446532690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24465329e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b2446532c98" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2446532c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b244653f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerWD" ref="0x2b24465447b8" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerWD" scoped="" ref="0x2b24465447b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2446543a18"/>
        <function-ref name="fired" scoped="" ref="0x2b244653d158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b244653de48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b244653d9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b24465412e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b2446543e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b244653d5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b244653e370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2446543448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b244653e810"/>
        <function-ref name="stop" scoped="" ref="0x2b244653ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b24465527b0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="WatchDogC.TimerWDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b24465527b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b244683aa18"/>
        <function-ref name="fired" scoped="" ref="0x2b244681f158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b244681fe48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b244681f9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b24468392e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b244683ae68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b244681f5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2446820370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b244683a448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2446820810"/>
        <function-ref name="stop" scoped="" ref="0x2b2446820cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b24465681c8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b24465681c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24465655f0"/>
        <function-ref name="fired" scoped="" ref="0x2b2446567af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b24465668c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2446566470"/>
        <function-ref name="getdt" scoped="" ref="0x2b2446563020"/>
        <function-ref name="gett0" scoped="" ref="0x2b2446565a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2446566020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2446568d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2446565020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2446567200"/>
        <function-ref name="stop" scoped="" ref="0x2b24465676a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b24465619e8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b24465619e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b244679b088"/>
        <function-ref name="fired" scoped="" ref="0x2b244679c0f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b244679ca08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b244679c580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b244679b510"/>
        <function-ref name="start" scoped="" ref="0x2b244679d768"/>
        <function-ref name="stop" scoped="" ref="0x2b244679dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b24477f4de0" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b24477f4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24477f0628"/>
        <function-ref name="fired" scoped="" ref="0x2b24477f2580"/>
        <function-ref name="startAt" scoped="" ref="0x2b24477f0020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24477f2a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24477f0ab0"/>
        <function-ref name="start" scoped="" ref="0x2b24477f3be8"/>
        <function-ref name="stop" scoped="" ref="0x2b24477f20f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientAlarm" ref="0x2b244657c988" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <component-ref qname="MuxAlarm62khz32C_"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClientAlarm" scoped="" ref="0x2b244657c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2446579020"/>
        <function-ref name="fired" scoped="" ref="0x2b244657a0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b244657a9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b244657a548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24465794a8"/>
        <function-ref name="start" scoped="" ref="0x2b244657b730"/>
        <function-ref name="stop" scoped="" ref="0x2b244657bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2446587cc0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2446587cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24465c9470"/>
        <function-ref name="fired" scoped="" ref="0x2b24465b94c8"/>
        <function-ref name="startAt" scoped="" ref="0x2b24465b9e18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24465b9970"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24465c9918"/>
        <function-ref name="start" scoped="" ref="0x2b24465baac0"/>
        <function-ref name="stop" scoped="" ref="0x2b24465b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2446587378" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2446587378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24465876c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b24465c7020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b24465c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24465c5690"/>
        <function-ref name="fired" scoped="" ref="0x2b24465c66f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b24465c5088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24465c6b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24465c5b18"/>
        <function-ref name="start" scoped="" ref="0x2b24465c7d70"/>
        <function-ref name="stop" scoped="" ref="0x2b24465c6270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2446742e10" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2446742e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b244673f628"/>
        <function-ref name="fired" scoped="" ref="0x2b2446740580"/>
        <function-ref name="startAt" scoped="" ref="0x2b244673f020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2446740a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b244673fab0"/>
        <function-ref name="start" scoped="" ref="0x2b2446741be8"/>
        <function-ref name="stop" scoped="" ref="0x2b24467400f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b244780cab0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b244780cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447864b80"/>
        <function-ref name="test" scoped="" ref="0x2b24478094a8"/>
        <function-ref name="fired" scoped="" ref="0x2b2447809020"/>
        <function-ref name="force" scoped="" ref="0x2b2447863510"/>
        <function-ref name="get" scoped="" ref="0x2b244780a658"/>
        <function-ref name="reset" scoped="" ref="0x2b2447809930"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447863088"/>
        <function-ref name="isOn" scoped="" ref="0x2b24478646f8"/>
        <function-ref name="set" scoped="" ref="0x2b244780aae0"/>
        <function-ref name="start" scoped="" ref="0x2b2447809db8"/>
        <function-ref name="stop" scoped="" ref="0x2b2447864270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2447814d68" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447814d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447811410"/>
        <function-ref name="fired" scoped="" ref="0x2b24478124a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447812db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447812930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2447811898"/>
        <function-ref name="start" scoped="" ref="0x2b2447813af8"/>
        <function-ref name="stop" scoped="" ref="0x2b2447812020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b2447811dd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447811dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b244780c0f8"/>
        <function-ref name="test" scoped="" ref="0x2b244780e980"/>
        <function-ref name="get" scoped="" ref="0x2b244780fa18"/>
        <function-ref name="reset" scoped="" ref="0x2b244780ee08"/>
        <function-ref name="getMode" scoped="" ref="0x2b244780c5d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b244780e4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b244780dc20"/>
        <function-ref name="set" scoped="" ref="0x2b244780e020"/>
        <function-ref name="start" scoped="" ref="0x2b244780d310"/>
        <function-ref name="stop" scoped="" ref="0x2b244780d798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b244784ec28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b244784ec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b244784adb8"/>
        <function-ref name="test" scoped="" ref="0x2b244784c658"/>
        <function-ref name="fired" scoped="" ref="0x2b244784c1d0"/>
        <function-ref name="force" scoped="" ref="0x2b2447849778"/>
        <function-ref name="get" scoped="" ref="0x2b244784d820"/>
        <function-ref name="reset" scoped="" ref="0x2b244784cae0"/>
        <function-ref name="getMode" scoped="" ref="0x2b24478492f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b244784a930"/>
        <function-ref name="set" scoped="" ref="0x2b244784dca8"/>
        <function-ref name="start" scoped="" ref="0x2b244784a020"/>
        <function-ref name="stop" scoped="" ref="0x2b244784a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2447856020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447856020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447854690"/>
        <function-ref name="fired" scoped="" ref="0x2b24478556f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447854088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447855b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2447854b18"/>
        <function-ref name="start" scoped="" ref="0x2b2447856d70"/>
        <function-ref name="stop" scoped="" ref="0x2b2447855270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2447858848" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2447858848"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2447858b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b24478520a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b24478520a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b244784e270"/>
        <function-ref name="test" scoped="" ref="0x2b2447851a58"/>
        <function-ref name="get" scoped="" ref="0x2b2447852c20"/>
        <function-ref name="reset" scoped="" ref="0x2b2447850020"/>
        <function-ref name="getMode" scoped="" ref="0x2b244784e748"/>
        <function-ref name="overflow" scoped="" ref="0x2b24478515d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447850db8"/>
        <function-ref name="set" scoped="" ref="0x2b24478510f8"/>
        <function-ref name="start" scoped="" ref="0x2b24478504a8"/>
        <function-ref name="stop" scoped="" ref="0x2b2447850930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2446633a88" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446633a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446642b80"/>
        <function-ref name="test" scoped="" ref="0x2b24466434a8"/>
        <function-ref name="get" scoped="" ref="0x2b2446644658"/>
        <function-ref name="reset" scoped="" ref="0x2b2446643930"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446640088"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446643020"/>
        <function-ref name="isOn" scoped="" ref="0x2b24466426f8"/>
        <function-ref name="set" scoped="" ref="0x2b2446644ae0"/>
        <function-ref name="start" scoped="" ref="0x2b2446643db8"/>
        <function-ref name="stop" scoped="" ref="0x2b2446642270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2b244664e0c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b244664e0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446657270"/>
        <function-ref name="test" scoped="" ref="0x2b244664da58"/>
        <function-ref name="fired" scoped="" ref="0x2b244664d5d0"/>
        <function-ref name="get" scoped="" ref="0x2b244664ec48"/>
        <function-ref name="reset" scoped="" ref="0x2b2446659020"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446657748"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446659db8"/>
        <function-ref name="set" scoped="" ref="0x2b244664d0f8"/>
        <function-ref name="start" scoped="" ref="0x2b24466594a8"/>
        <function-ref name="stop" scoped="" ref="0x2b2446659930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b2446640be0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b2446640be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b244663ddb8"/>
        <function-ref name="test" scoped="" ref="0x2b244663e5b8"/>
        <function-ref name="fired" scoped="" ref="0x2b244663e130"/>
        <function-ref name="force" scoped="" ref="0x2b244664f778"/>
        <function-ref name="get" scoped="" ref="0x2b244663f7a0"/>
        <function-ref name="reset" scoped="" ref="0x2b244663ea40"/>
        <function-ref name="getMode" scoped="" ref="0x2b244664f2f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b244663d930"/>
        <function-ref name="set" scoped="" ref="0x2b244663fc28"/>
        <function-ref name="start" scoped="" ref="0x2b244663d020"/>
        <function-ref name="stop" scoped="" ref="0x2b244663d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b2446663700" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b2446663700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b244665f930"/>
        <function-ref name="test" scoped="" ref="0x2b24466601f8"/>
        <function-ref name="fired" scoped="" ref="0x2b2446662d08"/>
        <function-ref name="force" scoped="" ref="0x2b244665e310"/>
        <function-ref name="get" scoped="" ref="0x2b24466623a8"/>
        <function-ref name="reset" scoped="" ref="0x2b2446660680"/>
        <function-ref name="getMode" scoped="" ref="0x2b244665fe08"/>
        <function-ref name="isOn" scoped="" ref="0x2b244665f4a8"/>
        <function-ref name="set" scoped="" ref="0x2b2446662830"/>
        <function-ref name="start" scoped="" ref="0x2b2446660b08"/>
        <function-ref name="stop" scoped="" ref="0x2b244665f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b2446677a50" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2446677a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b2446677da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b244665e988" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b244665e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b244666eb80"/>
        <function-ref name="test" scoped="" ref="0x2b244665b4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b244665b020"/>
        <function-ref name="force" scoped="" ref="0x2b244666d510"/>
        <function-ref name="get" scoped="" ref="0x2b244665d560"/>
        <function-ref name="reset" scoped="" ref="0x2b244665b930"/>
        <function-ref name="getMode" scoped="" ref="0x2b244666d088"/>
        <function-ref name="isOn" scoped="" ref="0x2b244666e6f8"/>
        <function-ref name="set" scoped="" ref="0x2b244665d9e8"/>
        <function-ref name="start" scoped="" ref="0x2b244665bdb8"/>
        <function-ref name="stop" scoped="" ref="0x2b244666e270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2446656ad0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446656ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446664b80"/>
        <function-ref name="test" scoped="" ref="0x2b24466524a8"/>
        <function-ref name="get" scoped="" ref="0x2b2446653690"/>
        <function-ref name="reset" scoped="" ref="0x2b2446652930"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446663088"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446652020"/>
        <function-ref name="isOn" scoped="" ref="0x2b24466646f8"/>
        <function-ref name="set" scoped="" ref="0x2b2446653b18"/>
        <function-ref name="start" scoped="" ref="0x2b2446652db8"/>
        <function-ref name="stop" scoped="" ref="0x2b2446664270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b2446675148" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b2446675148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b2446675498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2b2446668e00" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b2446668e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b24466770f8"/>
        <function-ref name="test" scoped="" ref="0x2b2446665980"/>
        <function-ref name="fired" scoped="" ref="0x2b24466654f8"/>
        <function-ref name="get" scoped="" ref="0x2b2446666a18"/>
        <function-ref name="reset" scoped="" ref="0x2b2446665e08"/>
        <function-ref name="getMode" scoped="" ref="0x2b24466775d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446678c20"/>
        <function-ref name="set" scoped="" ref="0x2b2446665020"/>
        <function-ref name="start" scoped="" ref="0x2b2446678310"/>
        <function-ref name="stop" scoped="" ref="0x2b2446678798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b244666db88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b244666db88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446669db8"/>
        <function-ref name="test" scoped="" ref="0x2b244666a580"/>
        <function-ref name="fired" scoped="" ref="0x2b244666a0f8"/>
        <function-ref name="force" scoped="" ref="0x2b2446668778"/>
        <function-ref name="get" scoped="" ref="0x2b244666c760"/>
        <function-ref name="reset" scoped="" ref="0x2b244666aa08"/>
        <function-ref name="getMode" scoped="" ref="0x2b24466682f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446669930"/>
        <function-ref name="set" scoped="" ref="0x2b244666cbe8"/>
        <function-ref name="start" scoped="" ref="0x2b2446669020"/>
        <function-ref name="stop" scoped="" ref="0x2b24466694a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b24464b22b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b24464b22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b24464b2600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b24464a8468" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b24464a8468"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b24463cbe78"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b24463cbe78"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b24464a87b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b24464a8940"/>
        <function-ref name="led1On" scoped="" ref="0x2b24464a8ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b24464a8c50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b24464a8dd8"/>
        <function-ref name="get" scoped="" ref="0x2b24464b6020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b24464b61a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b24464b67c8"/>
        <function-ref name="set" scoped="" ref="0x2b24464b6330"/>
        <function-ref name="led0On" scoped="" ref="0x2b24464b64b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b24464b6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b2446407cb8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b2446407cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b24464a90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b24464a61e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b24464a61e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b24464a6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b24467052b0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b24467052b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446704088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446704998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2446704510"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446704e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b24466fedd8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b24466fedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446733be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446732548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b24467320c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b24467329d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b2446730020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2446730020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b24467440f8"/>
        <function-ref name="test" scoped="" ref="0x2b244672f9e8"/>
        <function-ref name="get" scoped="" ref="0x2b2446730ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b244672fe70"/>
        <function-ref name="getMode" scoped="" ref="0x2b24467445d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b244672f560"/>
        <function-ref name="isOn" scoped="" ref="0x2b244672ec30"/>
        <function-ref name="set" scoped="" ref="0x2b244672f088"/>
        <function-ref name="start" scoped="" ref="0x2b244672e320"/>
        <function-ref name="stop" scoped="" ref="0x2b244672e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b244788ecf8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b244788ecf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b244788d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b244788d4f8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b244788d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b244788b3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b244788bcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b244788b830"/>
        <function-ref name="overflow" scoped="" ref="0x2b244788a190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b244788a6d0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b244788a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447886930"/>
        <function-ref name="test" scoped="" ref="0x2b24478871f8"/>
        <function-ref name="get" scoped="" ref="0x2b24478893a8"/>
        <function-ref name="reset" scoped="" ref="0x2b2447887680"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447886e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b2447889d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b24478864a8"/>
        <function-ref name="set" scoped="" ref="0x2b2447889830"/>
        <function-ref name="start" scoped="" ref="0x2b2447887b08"/>
        <function-ref name="stop" scoped="" ref="0x2b2447886020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2446750610" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446750610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b244674d3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b244674dcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b244674d830"/>
        <function-ref name="overflow" scoped="" ref="0x2b244674c190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b244675d450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b244675d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b24467741d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446774ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2446774658"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446772020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2446749270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446749270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b244675e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b244675e930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b244675e4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b244675edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b24477eee00" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b24477eee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24477eb628"/>
        <function-ref name="fired" scoped="" ref="0x2b24477ec580"/>
        <function-ref name="startAt" scoped="" ref="0x2b24477eb020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24477eca08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24477ebab0"/>
        <function-ref name="start" scoped="" ref="0x2b24477edbe8"/>
        <function-ref name="stop" scoped="" ref="0x2b24477ec0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b24477e7310" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b24477e7310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24477e5928"/>
        <function-ref name="fired" scoped="" ref="0x2b24477e69e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b24477e5320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24477e6e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24477e5db0"/>
        <function-ref name="start" scoped="" ref="0x2b24477e6088"/>
        <function-ref name="stop" scoped="" ref="0x2b24477e6560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b24477e9128" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b24477e9128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b24477e9e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b24477e87b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b24477e8330"/>
        <function-ref name="overflow" scoped="" ref="0x2b24477e8c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b24467d3cf0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b24467d3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24467d20a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b24467d2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b24467d7c70" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b24467d7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24467d3410"/>
        <function-ref name="fired" scoped="" ref="0x2b24467d54a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b24467d5db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24467d5930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24467d3898"/>
        <function-ref name="start" scoped="" ref="0x2b24467d69f0"/>
        <function-ref name="stop" scoped="" ref="0x2b24467d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b24467c2ab0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b24467c2ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24467d9d60"/>
        <function-ref name="fired" scoped="" ref="0x2b24467da470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b24467d91c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b24467dad10"/>
        <function-ref name="getdt" scoped="" ref="0x2b24467d7648"/>
        <function-ref name="gett0" scoped="" ref="0x2b24467d71f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24467da8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b24467db620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b24467d9790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b24467dbac0"/>
        <function-ref name="stop" scoped="" ref="0x2b24467da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b2446825618" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b2446825618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2446825968"/>
        <function-ref name="runTask" scoped="" ref="0x2b2446825af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b244682a5a0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b244682a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24468268f0"/>
        <function-ref name="fired" scoped="" ref="0x2b2446828020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2446828d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b24468288c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b24468251c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b2446826d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2446828470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2446829118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2446826320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b24468295b8"/>
        <function-ref name="stop" scoped="" ref="0x2b2446829a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b24468140c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b24468140c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b244682c610"/>
        <function-ref name="fired" scoped="" ref="0x2b2446813a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2446811900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2446811490"/>
        <function-ref name="getdt" scoped="" ref="0x2b244682a020"/>
        <function-ref name="gett0" scoped="" ref="0x2b244682ca80"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2446811020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2446814c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b244682c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2446813118"/>
        <function-ref name="stop" scoped="" ref="0x2b24468135d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b2446833898" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b2446833898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446833be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b2446834198" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2446834198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b24468344e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b24468331d0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b24468331d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446833520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b24468347d0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b24468347d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446834b20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2446834ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2446834e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b24463c2368" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b24463c2368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24463c26b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b24463c2840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b2446405898" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b2446405898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446405be8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2446405d70"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2445dca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b244647b1c8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b244647b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b244647b518"/>
        <function-ref name="runTask" scoped="" ref="0x2b244647b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b2446485668" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b2446485668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b24464859b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b244647c2a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b244647c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b244647c5f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b244647c780"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b244647c908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b24468d3ca0" loc="9:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b24468d3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24468ce088"/>
        <function-ref name="fired" scoped="" ref="0x2b24468d15e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b24468cf470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b24468cf020"/>
        <function-ref name="getdt" scoped="" ref="0x2b24468ce928"/>
        <function-ref name="gett0" scoped="" ref="0x2b24468ce4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24468d1a38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b24468d2820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b24468cfa40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b24468d2cc0"/>
        <function-ref name="stop" scoped="" ref="0x2b24468d1198"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b24468ea060" loc="18:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2b24468ea060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b24468ea3b0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b24468ea538"/>
        <function-ref name="start" scoped="" ref="0x2b24468ea6c0"/>
        <function-ref name="stop" scoped="" ref="0x2b24468ea848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b24468cc460" loc="11:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b24468cc460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b24468cc7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b24468dd178" loc="13:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b24468dd178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24468dd4c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b24468dd650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24468dd7d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b24468dd960"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24468ddae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x2b24468e7060" loc="20:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b24468e7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446900640"/>
        <function-ref name="get" scoped="" ref="0x2b2446900130"/>
        <function-ref name="isSet" scoped="" ref="0x2b24468e7be0"/>
        <function-ref name="set" scoped="" ref="0x2b2446900b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b2446904948" loc="16:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2446904948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446904c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b24468ced70" loc="10:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b24468ced70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b24468cd0f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b24468cd278"/>
        <function-ref name="led1On" scoped="" ref="0x2b24468cd400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b24468cd588"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b24468cd710"/>
        <function-ref name="get" scoped="" ref="0x2b24468cd898"/>
        <function-ref name="led1Off" scoped="" ref="0x2b24468cda20"/>
        <function-ref name="led2Off" scoped="" ref="0x2b24468cc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b24468cdba8"/>
        <function-ref name="led0On" scoped="" ref="0x2b24468cdd30"/>
        <function-ref name="led2On" scoped="" ref="0x2b24468cc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b2446914cb0" loc="22:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446914cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b24468f90a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b24468f9228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b24468f93b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioChannel" ref="0x2b24469104d0" loc="23:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b24469104d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b2446910820"/>
        <function-ref name="setChannel" scoped="" ref="0x2b24469109a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2446910b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b24468ec8a0" loc="14:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b24468ec8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b24468ecbf0"/>
        <function-ref name="source" scoped="" ref="0x2b24468ecd78"/>
        <function-ref name="address" scoped="" ref="0x2b24468c9020"/>
        <function-ref name="destination" scoped="" ref="0x2b24468c91a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b24468c9330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b24468c94b8"/>
        <function-ref name="type" scoped="" ref="0x2b24468c9640"/>
        <function-ref name="setType" scoped="" ref="0x2b24468c97c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b24468c9950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b24468c9ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b24468c9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b2446841e08" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2446841e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b24469311a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2446931330"/>
        <function-ref name="led1On" scoped="" ref="0x2b24469314b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2446931640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b24469317c8"/>
        <function-ref name="get" scoped="" ref="0x2b2446931950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2446931ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b24469301a8"/>
        <function-ref name="set" scoped="" ref="0x2b2446931c60"/>
        <function-ref name="led0On" scoped="" ref="0x2b2446931de8"/>
        <function-ref name="led2On" scoped="" ref="0x2b2446930020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b24469447c8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b24469447c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446944b18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446944ca0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446944e28"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244692a020"/>
        <function-ref name="get" scoped="" ref="0x2b244692a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244692a330"/>
        <function-ref name="set" scoped="" ref="0x2b244692a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b244692a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b244692c080" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b244692c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b244692c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b244692a958" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b244692a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244692aca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b244692ae30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446929020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469291a8"/>
        <function-ref name="get" scoped="" ref="0x2b2446929330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469294b8"/>
        <function-ref name="set" scoped="" ref="0x2b2446929640"/>
        <function-ref name="clr" scoped="" ref="0x2b24469297c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b244692c648" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b244692c648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b244692c998"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b244692cb20"/>
        <function-ref name="led1On" scoped="" ref="0x2b244692cca8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b244692ce30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b244692b020"/>
        <function-ref name="get" scoped="" ref="0x2b244692b1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b244692b330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b244692b950"/>
        <function-ref name="set" scoped="" ref="0x2b244692b4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b244692b640"/>
        <function-ref name="led2On" scoped="" ref="0x2b244692b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b2446929ae0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b2446929ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446929e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446943020"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469431a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446943330"/>
        <function-ref name="get" scoped="" ref="0x2b24469434b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446943640"/>
        <function-ref name="set" scoped="" ref="0x2b24469437c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446943950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b2446949020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b2446949020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446949370"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469494f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446949680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446949808"/>
        <function-ref name="get" scoped="" ref="0x2b2446949990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446949b18"/>
        <function-ref name="set" scoped="" ref="0x2b2446949ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2446949e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b2446948190" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b2446948190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469484e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446948668"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469487f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446948978"/>
        <function-ref name="get" scoped="" ref="0x2b2446948b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446948c88"/>
        <function-ref name="set" scoped="" ref="0x2b2446948e10"/>
        <function-ref name="clr" scoped="" ref="0x2b2446947020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b2446946480" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2446946480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24469467d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b2446947338" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b2446947338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446947688"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446947810"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446947998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446947b20"/>
        <function-ref name="get" scoped="" ref="0x2b2446947ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446947e30"/>
        <function-ref name="set" scoped="" ref="0x2b2446946020"/>
        <function-ref name="clr" scoped="" ref="0x2b24469461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b244698c7e0" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b244698c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244698b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b244698b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b244698b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244698b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b244698b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244698b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b244698b950"/>
        <function-ref name="clr" scoped="" ref="0x2b244698bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b2446965348" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b2446965348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446965698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446965820"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469659a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446965b30"/>
        <function-ref name="get" scoped="" ref="0x2b2446965cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446965e40"/>
        <function-ref name="set" scoped="" ref="0x2b2446984020"/>
        <function-ref name="clr" scoped="" ref="0x2b24469841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b244697a348" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b244697a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244697a698"/>
        <function-ref name="isInput" scoped="" ref="0x2b244697a820"/>
        <function-ref name="toggle" scoped="" ref="0x2b244697a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244697ab30"/>
        <function-ref name="get" scoped="" ref="0x2b244697acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244697ae40"/>
        <function-ref name="set" scoped="" ref="0x2b2446979020"/>
        <function-ref name="clr" scoped="" ref="0x2b24469791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b2446992020" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b2446992020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446992370"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469924f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446992680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446992808"/>
        <function-ref name="get" scoped="" ref="0x2b2446992990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446992b18"/>
        <function-ref name="set" scoped="" ref="0x2b2446992ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2446992e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b24469864d0" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b24469864d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446986820"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469869a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446986b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446986cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2446986e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446985020"/>
        <function-ref name="set" scoped="" ref="0x2b24469851a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446985330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b244695ce00" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b244695ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244695b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b244695b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b244695b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244695b640"/>
        <function-ref name="get" scoped="" ref="0x2b244695b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244695b950"/>
        <function-ref name="set" scoped="" ref="0x2b244695bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b244695bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b2446995c78" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b2446995c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446994020"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469941a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446994330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469944b8"/>
        <function-ref name="get" scoped="" ref="0x2b2446994640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469947c8"/>
        <function-ref name="set" scoped="" ref="0x2b2446994950"/>
        <function-ref name="clr" scoped="" ref="0x2b2446994ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b24469591a0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b24469591a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469594f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446959678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446959800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446959988"/>
        <function-ref name="get" scoped="" ref="0x2b2446959b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446959c98"/>
        <function-ref name="set" scoped="" ref="0x2b2446959e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2446958020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b244696e348" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b244696e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244696e698"/>
        <function-ref name="isInput" scoped="" ref="0x2b244696e820"/>
        <function-ref name="toggle" scoped="" ref="0x2b244696e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244696eb30"/>
        <function-ref name="get" scoped="" ref="0x2b244696ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244696ee40"/>
        <function-ref name="set" scoped="" ref="0x2b244696d020"/>
        <function-ref name="clr" scoped="" ref="0x2b244696d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b24469827e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b24469827e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446982b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446982cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446982e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446981020"/>
        <function-ref name="get" scoped="" ref="0x2b24469811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446981330"/>
        <function-ref name="set" scoped="" ref="0x2b24469814b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446981640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b24469777e0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b24469777e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446977b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446977cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446977e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446976020"/>
        <function-ref name="get" scoped="" ref="0x2b24469761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446976330"/>
        <function-ref name="set" scoped="" ref="0x2b24469764b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446976640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b2446961658" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b2446961658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469619a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446961b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446961cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446961e40"/>
        <function-ref name="get" scoped="" ref="0x2b2446960020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469601a8"/>
        <function-ref name="set" scoped="" ref="0x2b2446960330"/>
        <function-ref name="clr" scoped="" ref="0x2b24469604b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b2446956658" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b2446956658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469569a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446956b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446956cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446956e40"/>
        <function-ref name="get" scoped="" ref="0x2b2446955020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469551a8"/>
        <function-ref name="set" scoped="" ref="0x2b2446955330"/>
        <function-ref name="clr" scoped="" ref="0x2b24469554b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b244696b7e0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b244696b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244696bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b244696bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b244696be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244696a020"/>
        <function-ref name="get" scoped="" ref="0x2b244696a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244696a330"/>
        <function-ref name="set" scoped="" ref="0x2b244696a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b244696a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b244697fc78" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b244697fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244697e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b244697e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b244697e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244697e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b244697e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244697e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b244697e950"/>
        <function-ref name="clr" scoped="" ref="0x2b244697ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b244698e4d0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b244698e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244698e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b244698e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b244698eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244698ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b244698ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244698d020"/>
        <function-ref name="set" scoped="" ref="0x2b244698d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b244698d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b24469881a0" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b24469881a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469884f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446988678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446988800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446988988"/>
        <function-ref name="get" scoped="" ref="0x2b2446988b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446988c98"/>
        <function-ref name="set" scoped="" ref="0x2b2446988e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2446987020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b244697c020" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b244697c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244697c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b244697c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b244697c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244697c808"/>
        <function-ref name="get" scoped="" ref="0x2b244697c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244697cb18"/>
        <function-ref name="set" scoped="" ref="0x2b244697cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b244697ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b244695eaf0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b244695eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244695ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b244695d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b244695d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244695d330"/>
        <function-ref name="get" scoped="" ref="0x2b244695d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244695d640"/>
        <function-ref name="set" scoped="" ref="0x2b244695d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b244695d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b2446973c78" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b2446973c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446972020"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469721a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446972330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469724b8"/>
        <function-ref name="get" scoped="" ref="0x2b2446972640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469727c8"/>
        <function-ref name="set" scoped="" ref="0x2b2446972950"/>
        <function-ref name="clr" scoped="" ref="0x2b2446972ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b244698be00" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b244698be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244698a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b244698a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b244698a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244698a640"/>
        <function-ref name="get" scoped="" ref="0x2b244698a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244698a950"/>
        <function-ref name="set" scoped="" ref="0x2b244698aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b244698ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b2446970020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b2446970020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446970370"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469704f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446970680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446970808"/>
        <function-ref name="get" scoped="" ref="0x2b2446970990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446970b18"/>
        <function-ref name="set" scoped="" ref="0x2b2446970ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2446970e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b24469844d0" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b24469844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446984820"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469849a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446984b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446984cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2446984e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446983020"/>
        <function-ref name="set" scoped="" ref="0x2b24469831a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446983330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b24469794d0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b24469794d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446979820"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469799a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446979b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446979cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2446979e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446978020"/>
        <function-ref name="set" scoped="" ref="0x2b24469781a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446978330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b24469911a0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b24469911a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469914f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446991678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446991800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446991988"/>
        <function-ref name="get" scoped="" ref="0x2b2446991b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446991c98"/>
        <function-ref name="set" scoped="" ref="0x2b2446991e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2446990020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b244695a020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b244695a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244695a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b244695a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b244695a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244695a808"/>
        <function-ref name="get" scoped="" ref="0x2b244695a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244695ab18"/>
        <function-ref name="set" scoped="" ref="0x2b244695aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b244695ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b2446958348" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b2446958348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446958698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446958820"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469589a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446958b30"/>
        <function-ref name="get" scoped="" ref="0x2b2446958cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446958e40"/>
        <function-ref name="set" scoped="" ref="0x2b2446957020"/>
        <function-ref name="clr" scoped="" ref="0x2b24469571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b244696d4d0" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b244696d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244696d820"/>
        <function-ref name="isInput" scoped="" ref="0x2b244696d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b244696db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244696dcb8"/>
        <function-ref name="get" scoped="" ref="0x2b244696de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244696c020"/>
        <function-ref name="set" scoped="" ref="0x2b244696c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b244696c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b2446981968" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b2446981968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446981cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446981e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446980020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469801a8"/>
        <function-ref name="get" scoped="" ref="0x2b2446980330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469804b8"/>
        <function-ref name="set" scoped="" ref="0x2b2446980640"/>
        <function-ref name="clr" scoped="" ref="0x2b24469807c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b2446976968" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b2446976968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446976cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446976e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446975020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469751a8"/>
        <function-ref name="get" scoped="" ref="0x2b2446975330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469754b8"/>
        <function-ref name="set" scoped="" ref="0x2b2446975640"/>
        <function-ref name="clr" scoped="" ref="0x2b24469757c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b24469607e0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b24469607e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446960b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446960cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446960e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244695f020"/>
        <function-ref name="get" scoped="" ref="0x2b244695f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244695f330"/>
        <function-ref name="set" scoped="" ref="0x2b244695f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b244695f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b24469557e0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b24469557e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446955c30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446955db8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446974020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469741a8"/>
        <function-ref name="get" scoped="" ref="0x2b2446974330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469744b8"/>
        <function-ref name="set" scoped="" ref="0x2b2446974640"/>
        <function-ref name="clr" scoped="" ref="0x2b24469747c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b244696a968" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b244696a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244696acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b244696ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446968020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469681a8"/>
        <function-ref name="get" scoped="" ref="0x2b2446968330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469684b8"/>
        <function-ref name="set" scoped="" ref="0x2b2446968640"/>
        <function-ref name="clr" scoped="" ref="0x2b24469687c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b244698d658" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b244698d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244698d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b244698db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b244698dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244698de40"/>
        <function-ref name="get" scoped="" ref="0x2b244698c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244698c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b244698c330"/>
        <function-ref name="clr" scoped="" ref="0x2b244698c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b2446967c78" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b2446967c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469663e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446966570"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469666f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446966880"/>
        <function-ref name="get" scoped="" ref="0x2b2446966a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446966b90"/>
        <function-ref name="set" scoped="" ref="0x2b2446966d18"/>
        <function-ref name="clr" scoped="" ref="0x2b2446965020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b244697b1a0" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b244697b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244697b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b244697b678"/>
        <function-ref name="toggle" scoped="" ref="0x2b244697b800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244697b988"/>
        <function-ref name="get" scoped="" ref="0x2b244697bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244697bc98"/>
        <function-ref name="set" scoped="" ref="0x2b244697be20"/>
        <function-ref name="clr" scoped="" ref="0x2b244697a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b2446994e00" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b2446994e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469931a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446993330"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469934b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446993640"/>
        <function-ref name="get" scoped="" ref="0x2b24469937c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446993950"/>
        <function-ref name="set" scoped="" ref="0x2b2446993ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446993c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b2446987348" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b2446987348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446987698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446987820"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469879a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446987b30"/>
        <function-ref name="get" scoped="" ref="0x2b2446987cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446987e40"/>
        <function-ref name="set" scoped="" ref="0x2b2446986020"/>
        <function-ref name="clr" scoped="" ref="0x2b24469861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b244695dc78" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b244695dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244695c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b244695c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b244695c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244695c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b244695c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244695c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b244695c950"/>
        <function-ref name="clr" scoped="" ref="0x2b244695cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b2446972e00" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b2446972e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469711a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446971330"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469714b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446971640"/>
        <function-ref name="get" scoped="" ref="0x2b24469717c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446971950"/>
        <function-ref name="set" scoped="" ref="0x2b2446971ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446971c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b2446975af0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b2446975af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446975e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446995020"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469951a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446995330"/>
        <function-ref name="get" scoped="" ref="0x2b24469954b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446995640"/>
        <function-ref name="set" scoped="" ref="0x2b24469957c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446995950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b244696f1a0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b244696f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244696f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b244696f678"/>
        <function-ref name="toggle" scoped="" ref="0x2b244696f800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244696f988"/>
        <function-ref name="get" scoped="" ref="0x2b244696fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244696fc98"/>
        <function-ref name="set" scoped="" ref="0x2b244696fe20"/>
        <function-ref name="clr" scoped="" ref="0x2b244696e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b2446983658" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b2446983658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469839a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446983b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446983cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446983e40"/>
        <function-ref name="get" scoped="" ref="0x2b2446982020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469821a8"/>
        <function-ref name="set" scoped="" ref="0x2b2446982330"/>
        <function-ref name="clr" scoped="" ref="0x2b24469824b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b2446978658" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b2446978658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469789a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446978b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446978cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446978e40"/>
        <function-ref name="get" scoped="" ref="0x2b2446977020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469771a8"/>
        <function-ref name="set" scoped="" ref="0x2b2446977330"/>
        <function-ref name="clr" scoped="" ref="0x2b24469774b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b2446990348" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b2446990348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446990698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446990820"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469909a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446990b30"/>
        <function-ref name="get" scoped="" ref="0x2b2446990cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446990e40"/>
        <function-ref name="set" scoped="" ref="0x2b244698e020"/>
        <function-ref name="clr" scoped="" ref="0x2b244698e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b2446964430" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b2446964430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446964780"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446964908"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446964a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446964c18"/>
        <function-ref name="get" scoped="" ref="0x2b2446964da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446961020"/>
        <function-ref name="set" scoped="" ref="0x2b24469611a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446961330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b24469574d0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b24469574d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446957820"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469579a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446957b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446957cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2446957e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446956020"/>
        <function-ref name="set" scoped="" ref="0x2b24469561a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446956330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b244696c658" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b244696c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244696c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b244696cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b244696ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244696ce40"/>
        <function-ref name="get" scoped="" ref="0x2b244696b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244696b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b244696b330"/>
        <function-ref name="clr" scoped="" ref="0x2b244696b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b2446980af0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b2446980af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446980e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b244697f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b244697f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244697f330"/>
        <function-ref name="get" scoped="" ref="0x2b244697f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244697f640"/>
        <function-ref name="set" scoped="" ref="0x2b244697f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b244697f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b2446989020" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b2446989020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446989370"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469894f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2446989680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446989808"/>
        <function-ref name="get" scoped="" ref="0x2b2446989990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446989b18"/>
        <function-ref name="set" scoped="" ref="0x2b2446989ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2446989e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b244697ee00" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b244697ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244697d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b244697d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b244697d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244697d640"/>
        <function-ref name="get" scoped="" ref="0x2b244697d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244697d950"/>
        <function-ref name="set" scoped="" ref="0x2b244697dad8"/>
        <function-ref name="clr" scoped="" ref="0x2b244697dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b2446968af0" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b2446968af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446968e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446967020"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469671a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446967330"/>
        <function-ref name="get" scoped="" ref="0x2b24469674b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446967640"/>
        <function-ref name="set" scoped="" ref="0x2b24469677c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446967950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b244695f968" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b244695f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b244695fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b244695fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b244695e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b244695e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b244695e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b244695e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b244695e640"/>
        <function-ref name="clr" scoped="" ref="0x2b244695e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b2446974af0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b2446974af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2446974e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2446973020"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469731a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2446973330"/>
        <function-ref name="get" scoped="" ref="0x2b24469734b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2446973640"/>
        <function-ref name="set" scoped="" ref="0x2b24469737c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2446973950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b24469a3560" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b24469a3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469a38d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469a3a58"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469a3be0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469a3d68"/>
        <function-ref name="get" scoped="" ref="0x2b24469ac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469ac1a8"/>
        <function-ref name="set" scoped="" ref="0x2b24469ac330"/>
        <function-ref name="clr" scoped="" ref="0x2b24469ac4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b24469c8860" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b24469c8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469c8bd0"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469c8d58"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469c7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469c71a8"/>
        <function-ref name="get" scoped="" ref="0x2b24469c7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469c74b8"/>
        <function-ref name="set" scoped="" ref="0x2b24469c7640"/>
        <function-ref name="clr" scoped="" ref="0x2b24469c77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b24469c2b88" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b24469c2b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469c0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469c01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469c0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469c04b8"/>
        <function-ref name="get" scoped="" ref="0x2b24469c0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469c07c8"/>
        <function-ref name="set" scoped="" ref="0x2b24469c0950"/>
        <function-ref name="clr" scoped="" ref="0x2b24469c0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b24469ba020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b24469ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469ba390"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469ba518"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469ba6a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469ba828"/>
        <function-ref name="get" scoped="" ref="0x2b24469ba9b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469bab38"/>
        <function-ref name="set" scoped="" ref="0x2b24469bacc0"/>
        <function-ref name="clr" scoped="" ref="0x2b24469bae48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b24469d5370" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b24469d5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469d56e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469d5868"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469d59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469d5b78"/>
        <function-ref name="get" scoped="" ref="0x2b24469d5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469d4020"/>
        <function-ref name="set" scoped="" ref="0x2b24469d41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b24469d4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b24469cf7c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b24469cf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469cfb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469cfcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469cfe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469cd020"/>
        <function-ref name="get" scoped="" ref="0x2b24469cd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469cd330"/>
        <function-ref name="set" scoped="" ref="0x2b24469cd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b24469cd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b24469eaa88" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b24469eaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b24469eadf8"/>
        <function-ref name="isInput" scoped="" ref="0x2b24469e9020"/>
        <function-ref name="toggle" scoped="" ref="0x2b24469e91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b24469e9330"/>
        <function-ref name="get" scoped="" ref="0x2b24469e94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b24469e9640"/>
        <function-ref name="set" scoped="" ref="0x2b24469e97c8"/>
        <function-ref name="clr" scoped="" ref="0x2b24469e9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b2446edcc58" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2446edcc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446edb020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446edb1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446edb330"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446edb4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446edb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b2446edb888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2446edb888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446edbbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2446edbd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446ed9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446ed91a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2446ed9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b2446ed9578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2446ed9578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2446ed98c8"/>
        <function-ref name="source" scoped="" ref="0x2b2446ed9a50"/>
        <function-ref name="address" scoped="" ref="0x2b2446ed9bd8"/>
        <function-ref name="destination" scoped="" ref="0x2b2446ed9d60"/>
        <function-ref name="setSource" scoped="" ref="0x2b2446ed8020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2446ed81a8"/>
        <function-ref name="type" scoped="" ref="0x2b2446ed8330"/>
        <function-ref name="setType" scoped="" ref="0x2b2446ed84b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2446ed8640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2446ed87c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2446ed8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b2446ed8bd8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b2446ed8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b2446ed7020"/>
        <function-ref name="noAck" scoped="" ref="0x2b2446ed71a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b2446ed7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b244794b530" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b244794b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244794b880"/>
        <function-ref name="getPayload" scoped="" ref="0x2b244794ba08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244794bb90"/>
        <function-ref name="cancel" scoped="" ref="0x2b244794bd18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244794a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b244794a2c8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b244794a2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244794a618"/>
        <function-ref name="getPayload" scoped="" ref="0x2b244794a7a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244794a928"/>
        <function-ref name="cancel" scoped="" ref="0x2b244794aab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244794ac38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b244794ae80" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b244794ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b24479491f8"/>
        <function-ref name="source" scoped="" ref="0x2b2447949380"/>
        <function-ref name="address" scoped="" ref="0x2b2447949508"/>
        <function-ref name="destination" scoped="" ref="0x2b2447949690"/>
        <function-ref name="setSource" scoped="" ref="0x2b2447949818"/>
        <function-ref name="setDestination" scoped="" ref="0x2b24479499a0"/>
        <function-ref name="type" scoped="" ref="0x2b2447949b28"/>
        <function-ref name="setType" scoped="" ref="0x2b2447949cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2447949e38"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2447948020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b24479481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b2446a4aa70" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b2446a4aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446a4adc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446a47020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446a471a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446a47330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446a474b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b2446a90bd0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2446a90bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446a8f020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446a8f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446a8f330"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446a8f4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446a8f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b2446a91e40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b2446a91e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446a901e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446a90370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446a904f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446a90680"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446a90808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b2446a8d020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2446a8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446a8d370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2446a8d4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446a8d680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446a8d808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2446a8d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b2446a8dc58" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b2446a8dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2446a8c020"/>
        <function-ref name="runTask" scoped="" ref="0x2b2446a8c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b2446a8c470" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b2446a8c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2446a8c7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b2446a8c948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b2446a8f888" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2446a8f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2446a8fbd8"/>
        <function-ref name="source" scoped="" ref="0x2b2446a8fd60"/>
        <function-ref name="address" scoped="" ref="0x2b2446a8e020"/>
        <function-ref name="destination" scoped="" ref="0x2b2446a8e1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b2446a8e330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2446a8e4b8"/>
        <function-ref name="type" scoped="" ref="0x2b2446a8e640"/>
        <function-ref name="setType" scoped="" ref="0x2b2446a8e7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2446a8e950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2446a8ead8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2446a8ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2446a8a5f8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2446a8a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2446a8a948"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2446a8aad0"/>
        <function-ref name="start" scoped="" ref="0x2b2446a8ac58"/>
        <function-ref name="stop" scoped="" ref="0x2b2446a8ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b2446a875b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2446a875b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446a87900"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446a87a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446a87c10"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446a87d98"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446a86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b2446a86d78" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2446a86d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446a840f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2446a84278"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446a84400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446a84588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2446a84710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2b2446aa44c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2b2446aa44c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2b2446aa4818"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2b2446aa49a0"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2b2446aa4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2446a867a0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2446a867a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446a86af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2b2446aa7998" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2b2446aa7998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2b2446aa7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b2446aa6020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2446aa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b2446aa6370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2446aa64f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b2446aa6680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2446aa6808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b2446aa6990"/>
        <function-ref name="get" scoped="" ref="0x2b2446aa6b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2446aa6ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b2446aa3330"/>
        <function-ref name="set" scoped="" ref="0x2b2446aa6e28"/>
        <function-ref name="led0On" scoped="" ref="0x2b2446aa3020"/>
        <function-ref name="led2On" scoped="" ref="0x2b2446aa31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b2446aa81a0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446aa81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b2446aa84f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b2446aa8678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b2446aa8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b2446a849b0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2446a849b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2446a84d00"/>
        <function-ref name="source" scoped="" ref="0x2b2446aa9020"/>
        <function-ref name="address" scoped="" ref="0x2b2446aa91a8"/>
        <function-ref name="destination" scoped="" ref="0x2b2446aa9330"/>
        <function-ref name="setSource" scoped="" ref="0x2b2446aa94b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2446aa9640"/>
        <function-ref name="type" scoped="" ref="0x2b2446aa97c8"/>
        <function-ref name="setType" scoped="" ref="0x2b2446aa9950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2446aa9ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2446aa9c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2446aa9de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b2446b04308" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b2446b04308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446b04658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446b047e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446b04968"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446b04af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446b04c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b2446b03020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b2446b03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446b03370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b2446aa0310" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2446aa0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446aa0680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446aa0808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446aa0990"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446aa0b18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446aa0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b2446b06b98" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2446b06b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446b05020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2446b051a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446b05330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446b054b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2446b05640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2446b07060" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2446b07060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446b073d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b2446b035b8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2446b035b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b2446b03908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2446b03a90"/>
        <function-ref name="led1On" scoped="" ref="0x2b2446b03c18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2446b03da0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b2446b02020"/>
        <function-ref name="get" scoped="" ref="0x2b2446b021a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2446b02330"/>
        <function-ref name="led2On" scoped="" ref="0x2b2446b02950"/>
        <function-ref name="set" scoped="" ref="0x2b2446b02640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b2446b024b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b2446b027c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b2446b05888" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446b05888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b2446b05bd8"/>
        <function-ref name="noAck" scoped="" ref="0x2b2446b05d60"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b2446b04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b2446b07618" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2446b07618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2446b07968"/>
        <function-ref name="source" scoped="" ref="0x2b2446b07af0"/>
        <function-ref name="address" scoped="" ref="0x2b2446b07c78"/>
        <function-ref name="destination" scoped="" ref="0x2b2446b07e00"/>
        <function-ref name="setSource" scoped="" ref="0x2b2446b06020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2446b061a8"/>
        <function-ref name="type" scoped="" ref="0x2b2446b06330"/>
        <function-ref name="setType" scoped="" ref="0x2b2446b064b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2446b06640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2446b067c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2446b06950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2446afd2e8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2446afd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2446afd638"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2446afd7c0"/>
        <function-ref name="start" scoped="" ref="0x2b2446afd948"/>
        <function-ref name="stop" scoped="" ref="0x2b2446afdad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b2446b16520" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b2446b16520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446b16870"/>
        <function-ref name="stop" scoped="" ref="0x2b2446b169f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b2446afcce8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b2446afcce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b24468c85b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446afb0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446afb228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446afb3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446afb538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446afb6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2446b00b88" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2446b00b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446afd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2446afc270" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2446afc270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b24468c85b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446afc5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b2446af74f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b2446af74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b2446af7840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b2446af95a8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2446af95a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b2446af98f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2446af9a80"/>
        <function-ref name="led1On" scoped="" ref="0x2b2446af9c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2446af9d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b2446af8020"/>
        <function-ref name="get" scoped="" ref="0x2b2446af81a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2446af8330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b2446af8950"/>
        <function-ref name="set" scoped="" ref="0x2b2446af84b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b2446af8640"/>
        <function-ref name="led2On" scoped="" ref="0x2b2446af87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b2446b0b448" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b2446b0b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446b0b798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b2446b0b920"/>
        <function-ref name="receive" scoped="" ref="0x2b2446b0baa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b2446b0bc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b2446b0bdb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b2446b19020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446b191a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2b2446b19550" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2b2446b19550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b2446b198a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b2446b1bc50" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b2446b1bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b24468c85b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b2446af9020"/>
        <function-ref name="offset" scoped="" ref="0x2b2446af91a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b2446af9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2446d0ab88" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2446d0ab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2446d09020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2446d091a8"/>
        <function-ref name="start" scoped="" ref="0x2b2446d09330"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d094b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b2446d050a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b2446d050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446d053f0"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d05578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b2446d09e78" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b2446d09e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b24468c85b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446d08218"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446d083a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446d08528"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446d086b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446d08838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2446d0a5f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2446d0a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446d0a940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2446d097e0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2446d097e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b24468c85b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446d09b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b2446d08a80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b2446d08a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b2446d08dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b2446d07a88" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2446d07a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b2446d07dd8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2446d06020"/>
        <function-ref name="led1On" scoped="" ref="0x2b2446d061a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2446d06330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b2446d064b8"/>
        <function-ref name="get" scoped="" ref="0x2b2446d06640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2446d067c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b2446d06de8"/>
        <function-ref name="set" scoped="" ref="0x2b2446d06ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b2446d06950"/>
        <function-ref name="led0On" scoped="" ref="0x2b2446d06c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b2446d057c0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b2446d057c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446d05b10"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b2446d05c98"/>
        <function-ref name="receive" scoped="" ref="0x2b2446d05e20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b2446d04020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b2446d041a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b2446d04330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446d044b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2b2446d04740" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2b2446d04740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b2446d04a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b2446d071c0" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b2446d071c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b24468c85b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b2446d07530"/>
        <function-ref name="offset" scoped="" ref="0x2b2446d076b8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b2446d07840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b24479ec838" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b24479ec838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b24479ecb88"/>
        <function-ref name="stopDone" scoped="" ref="0x2b24479ecd10"/>
        <function-ref name="start" scoped="" ref="0x2b24479eb020"/>
        <function-ref name="stop" scoped="" ref="0x2b24479eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b24479e40a0" loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b24479e40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24479e43f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b24479e4578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b24479e72a8" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b24479e72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b24479e75f8"/>
        <function-ref name="stop" scoped="" ref="0x2b24479e7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b24479e3120" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b24479e3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24479e3470"/>
        <function-ref name="runTask" scoped="" ref="0x2b24479e35f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b24479ec2a0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b24479ec2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24479ec5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b24479e79c8" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b24479e79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b24479e7d18"/>
        <function-ref name="flush" scoped="" ref="0x2b24479e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b24479ea700" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b24479ea700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b24479eaa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b24479e68c0" loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b24479e68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24479e6c10"/>
        <function-ref name="runTask" scoped="" ref="0x2b24479e6d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b24479eacf8" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b24479eacf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b24479e90a0"/>
        <function-ref name="resetSend" scoped="" ref="0x2b24479e9228"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b24479e93b0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b24479e9538"/>
        <function-ref name="putData" scoped="" ref="0x2b24479e96c0"/>
        <function-ref name="putDone" scoped="" ref="0x2b24479e9848"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b24479e99d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b24479e9c18" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b24479e9c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b24479e8020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b24479e81a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b24479e8330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b24479e84b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b24479e8640"/>
        <function-ref name="get" scoped="" ref="0x2b24479e87c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b24479e8950"/>
        <function-ref name="led0On" scoped="" ref="0x2b24479e7020"/>
        <function-ref name="set" scoped="" ref="0x2b24479e8c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b24479e8ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b24479e8de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b24479e4840" loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b24479e4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24479e4c90"/>
        <function-ref name="runTask" scoped="" ref="0x2b24479e4e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2b24479e62a8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2b24479e62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b24479e65f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b24479eb3f0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b24479eb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b24479eb740"/>
        <function-ref name="nextByte" scoped="" ref="0x2b24479eb8c8"/>
        <function-ref name="startSend" scoped="" ref="0x2b24479eba50"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b24479ebbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b24479ebe20" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b24479ebe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b24479ea1a8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b24479ea330"/>
        <function-ref name="endPacket" scoped="" ref="0x2b24479ea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b24479d64e0" loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b24479d64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24479d6830"/>
        <function-ref name="runTask" scoped="" ref="0x2b24479d69b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b24479e06f8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b24479e06f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b24468c85b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24479e0a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b24479e0bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24479e0d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b24479df020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24479df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b24479d6c80" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b24479d6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24479d4020"/>
        <function-ref name="runTask" scoped="" ref="0x2b24479d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b24479e0020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b24479e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b24468c85b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24479e0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b24479df3f0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b24479df3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b24479df740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b24479dfb48" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b24479dfb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b24468c85b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b24479de020"/>
        <function-ref name="offset" scoped="" ref="0x2b24479de1a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b24479de330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b24479dde60" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b24479dde60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b24479dc1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b24479dc370"/>
        <function-ref name="led1On" scoped="" ref="0x2b24479dc4f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b24479dc680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b24479dc808"/>
        <function-ref name="get" scoped="" ref="0x2b24479dc990"/>
        <function-ref name="led1Off" scoped="" ref="0x2b24479dcb18"/>
        <function-ref name="led0On" scoped="" ref="0x2b24479db1a8"/>
        <function-ref name="set" scoped="" ref="0x2b24479dce28"/>
        <function-ref name="led2On" scoped="" ref="0x2b24479dcca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b24479db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2b24479dd8c8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2b24479dd8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b24479ddc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x2b24479db538" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x2b24479db538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24479d7768"/>
        <function-ref name="fired" scoped="" ref="0x2b24479d9e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b24479d8b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b24479d8728"/>
        <function-ref name="getdt" scoped="" ref="0x2b24479d6088"/>
        <function-ref name="gett0" scoped="" ref="0x2b24479d7bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24479d82d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b24479d90c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b24479d7198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b24479d9560"/>
        <function-ref name="stop" scoped="" ref="0x2b24479d9a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b24479dee20" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b24479dee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b24479dd1a8"/>
        <function-ref name="nextByte" scoped="" ref="0x2b24479dd330"/>
        <function-ref name="startSend" scoped="" ref="0x2b24479dd4b8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b24479dd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b24479de578" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b24479de578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b24479de8c8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b24479dea50"/>
        <function-ref name="endPacket" scoped="" ref="0x2b24479debd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b24479d1760" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b24479d1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24479d1ab0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b24479d1c38"/>
        <function-ref name="receive" scoped="" ref="0x2b24479d1dc0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b24479d0020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b24479d01a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b24479d0330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24479d04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b24479d26b0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b24479d26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b24479d2a00"/>
        <function-ref name="resetSend" scoped="" ref="0x2b24479d2b88"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b24479d2d10"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b24479d1020"/>
        <function-ref name="putData" scoped="" ref="0x2b24479d11a8"/>
        <function-ref name="putDone" scoped="" ref="0x2b24479d1330"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b24479d14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b24479d0700" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b24479d0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b24479d0a50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b24479d0bd8"/>
        <function-ref name="led1On" scoped="" ref="0x2b24479d0d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b24479cf020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b24479cf1a8"/>
        <function-ref name="get" scoped="" ref="0x2b24479cf330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b24479cf4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b24479cfad8"/>
        <function-ref name="set" scoped="" ref="0x2b24479cf7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b24479cf640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b24479cf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b24479cb660" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b24479cb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24479c78f0"/>
        <function-ref name="fired" scoped="" ref="0x2b24479c9020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b24479c9d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b24479c98c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b24479c61c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b24479c7d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24479c9470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b24479ca1e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b24479c7320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b24479ca688"/>
        <function-ref name="stop" scoped="" ref="0x2b24479cab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b2446cfa448" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b2446cfa448"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b2446cfa798"/>
        <function-ref name="offset" scoped="" ref="0x2b2446cfa920"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b2446cfaaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b2446d21968" loc="2:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2446d21968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2446d21cb8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2446d21e40"/>
        <function-ref name="start" scoped="" ref="0x2b2446d20020"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2b2446d20430" loc="3:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2b2446d20430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2b2446d20780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2b2446d136b8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <component-ref qname="SerialActiveMessageC.SerialProtectorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2b2446d136b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2b2446d13a08"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2b2446d13b90"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2b2446d13d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b2446d34b60" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b2446d34b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446d37020"/>
        <function-ref name="receive" scoped="" ref="0x2b2446d371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b2446d39848" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b2446d39848"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446d39b98"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b2446d39d20"/>
        <function-ref name="receive" scoped="" ref="0x2b2446d38020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b2446d381a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b2446d38330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b2446d384b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446d38640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b2446d374a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b2446d374a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b2446d377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b2446d39080" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b2446d39080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446d393d0"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d39558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b2446d36b90" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b2446d36b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446d31020"/>
        <function-ref name="receive" scoped="" ref="0x2b2446d311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b2446d31498" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b2446d31498"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446d317e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b2446d31970"/>
        <function-ref name="receive" scoped="" ref="0x2b2446d31af8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b2446d31c80"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b2446d31e08"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b2446d30020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446d301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b2446d304a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b2446d304a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b2446d307f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b2446d30d68" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446d30d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b24464fec50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446d2eaf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446d2d4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2446d2d020"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446d2d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b2446d363d8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b2446d363d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446d36728"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d368b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b2446d77a88" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b2446d77a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446d77dd8"/>
        <function-ref name="receive" scoped="" ref="0x2b2446d76020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b2446d758c0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b2446d758c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446d75c10"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d75d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2446d2ad18" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2446d2ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446d770a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b2446d762a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b2446d762a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446d765f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b2446d76780"/>
        <function-ref name="receive" scoped="" ref="0x2b2446d76908"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b2446d76a90"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b2446d76c18"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b2446d76da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446d75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b2446d752a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b2446d752a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b2446d755f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b2446d74840" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b2446d74840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b2446d74b90"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b2446d74d18"/>
        <function-ref name="rxDone" scoped="" ref="0x2b2446d72020"/>
        <function-ref name="txDone" scoped="" ref="0x2b2446d721a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b2446d72330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b2446d724b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b2446d72640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b2446d727c8"/>
        <function-ref name="tx" scoped="" ref="0x2b2446d72950"/>
        <function-ref name="rx" scoped="" ref="0x2b2446d72ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b2446d71020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446d71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b24464fec50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446d71d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446d706b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2446d70230"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446d70b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b2446d77328" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b2446d77328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446d77678"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d77800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b2446d740a0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b2446d740a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446d743f0"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d74578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b2446db6158" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b2446db6158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b2446db64a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b2446db6630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b2446db67b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b2446db6940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b2446db6ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b2446db6c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b2446db6dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b2446db5020"/>
        <function-ref name="tx" scoped="" ref="0x2b2446db51a8"/>
        <function-ref name="rx" scoped="" ref="0x2b2446db5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b2446db4860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b2446db4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b2446db4bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b2446db4d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b2446db3020"/>
        <function-ref name="txDone" scoped="" ref="0x2b2446db31a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b2446db3330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b2446db34b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b2446db3640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b2446db37c8"/>
        <function-ref name="tx" scoped="" ref="0x2b2446db3950"/>
        <function-ref name="rx" scoped="" ref="0x2b2446db3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b2446d858b8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b2446d858b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446d85c08"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d85d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b2446db56b0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b2446db56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446db5a00"/>
        <function-ref name="stop" scoped="" ref="0x2b2446db5b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b2446db4020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b2446db4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446db4370"/>
        <function-ref name="stop" scoped="" ref="0x2b2446db44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b2446d85060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b2446d85060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446d853b0"/>
        <function-ref name="stop" scoped="" ref="0x2b2446d85538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b2446db27f0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b2446db27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446db2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b2446dae158" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b2446dae158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b2446dae4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b2446dae630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b2446dae7b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b2446dae940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b2446daeac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b2446daec50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b2446daedd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b2446dad020"/>
        <function-ref name="tx" scoped="" ref="0x2b2446dad1a8"/>
        <function-ref name="rx" scoped="" ref="0x2b2446dad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b2446da94d8" loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2446da94d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b2446da9828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b2446dad688" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b2446dad688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446dad9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b2446daa020" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b2446daa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b2446daa370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b2446daa4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b2446daa680"/>
        <function-ref name="txDone" scoped="" ref="0x2b2446daa808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b2446daa990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b2446daab18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b2446daaca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b2446daae28"/>
        <function-ref name="tx" scoped="" ref="0x2b2446da9020"/>
        <function-ref name="rx" scoped="" ref="0x2b2446da91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b2446daf8b8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b2446daf8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446dafc08"/>
        <function-ref name="stop" scoped="" ref="0x2b2446dafd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b2446dadd98" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b2446dadd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446dab170"/>
        <function-ref name="stop" scoped="" ref="0x2b2446dab2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b2446dab6b8" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b2446dab6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446daba08"/>
        <function-ref name="stop" scoped="" ref="0x2b2446dabb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b2446da9b48" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2446da9b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b2446da8020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b2446da81a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b2446da8330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b2446da84b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b2446da8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b2446da8950" loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b2446da8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b2446da8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b2446daf020" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b2446daf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2446daf370"/>
        <function-ref name="stop" scoped="" ref="0x2b2446daf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2446e0c020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446e0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b24464fec50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446e0cd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446e0b6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2446e0b230"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446e0bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2446e0aa98" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446e0aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b24464fb960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446e07828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446e05190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2446e07cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446e05618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b2446e2c978" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b2446e2c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446e28b80"/>
        <function-ref name="test" scoped="" ref="0x2b2446e294a8"/>
        <function-ref name="fired" scoped="" ref="0x2b2446e29020"/>
        <function-ref name="get" scoped="" ref="0x2b2446e2a560"/>
        <function-ref name="reset" scoped="" ref="0x2b2446e29930"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446e26088"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446e286f8"/>
        <function-ref name="set" scoped="" ref="0x2b2446e2a9e8"/>
        <function-ref name="start" scoped="" ref="0x2b2446e29db8"/>
        <function-ref name="stop" scoped="" ref="0x2b2446e28270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2446e04638" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446e04638"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446e32798"/>
        <function-ref name="test" scoped="" ref="0x2b2446e34088"/>
        <function-ref name="get" scoped="" ref="0x2b2446e35220"/>
        <function-ref name="reset" scoped="" ref="0x2b2446e34510"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446e32c70"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446e35b80"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446e32310"/>
        <function-ref name="set" scoped="" ref="0x2b2446e356a8"/>
        <function-ref name="start" scoped="" ref="0x2b2446e34998"/>
        <function-ref name="stop" scoped="" ref="0x2b2446e34e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b2446e31840" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b2446e31840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446e2d930"/>
        <function-ref name="test" scoped="" ref="0x2b2446e2e230"/>
        <function-ref name="fired" scoped="" ref="0x2b2446e30d70"/>
        <function-ref name="force" scoped="" ref="0x2b2446e2c310"/>
        <function-ref name="get" scoped="" ref="0x2b2446e30410"/>
        <function-ref name="reset" scoped="" ref="0x2b2446e2e6b8"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446e2de08"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446e2d4a8"/>
        <function-ref name="set" scoped="" ref="0x2b2446e30898"/>
        <function-ref name="start" scoped="" ref="0x2b2446e2eb40"/>
        <function-ref name="stop" scoped="" ref="0x2b2446e2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b2446e1e118" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b2446e1e118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446e4e270"/>
        <function-ref name="test" scoped="" ref="0x2b2446e1dab0"/>
        <function-ref name="fired" scoped="" ref="0x2b2446e1d628"/>
        <function-ref name="force" scoped="" ref="0x2b2446e4ebd0"/>
        <function-ref name="get" scoped="" ref="0x2b2446e1ec98"/>
        <function-ref name="reset" scoped="" ref="0x2b2446e1c020"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446e4e748"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446e1cdb8"/>
        <function-ref name="set" scoped="" ref="0x2b2446e1d150"/>
        <function-ref name="start" scoped="" ref="0x2b2446e1c4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b2446e1c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b2446e43688" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b2446e43688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446e3f798"/>
        <function-ref name="test" scoped="" ref="0x2b2446e40088"/>
        <function-ref name="fired" scoped="" ref="0x2b2446e41b90"/>
        <function-ref name="get" scoped="" ref="0x2b2446e41230"/>
        <function-ref name="reset" scoped="" ref="0x2b2446e40510"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446e3fc70"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446e3f310"/>
        <function-ref name="set" scoped="" ref="0x2b2446e416b8"/>
        <function-ref name="start" scoped="" ref="0x2b2446e40998"/>
        <function-ref name="stop" scoped="" ref="0x2b2446e40e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b2446e3d168" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2446e3d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b2446e3d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b2446e4d278" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b2446e4d278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446e49310"/>
        <function-ref name="test" scoped="" ref="0x2b2446e4cc10"/>
        <function-ref name="fired" scoped="" ref="0x2b2446e4c788"/>
        <function-ref name="force" scoped="" ref="0x2b2446e49c70"/>
        <function-ref name="get" scoped="" ref="0x2b2446e4ddf8"/>
        <function-ref name="reset" scoped="" ref="0x2b2446e4a0c0"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446e497e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446e4ae58"/>
        <function-ref name="set" scoped="" ref="0x2b2446e4c2b0"/>
        <function-ref name="start" scoped="" ref="0x2b2446e4a548"/>
        <function-ref name="stop" scoped="" ref="0x2b2446e4a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b2446e3d828" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b2446e3d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b2446e3db78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b2446e48360" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b2446e48360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446e44580"/>
        <function-ref name="test" scoped="" ref="0x2b2446e47e08"/>
        <function-ref name="fired" scoped="" ref="0x2b2446e47980"/>
        <function-ref name="force" scoped="" ref="0x2b2446e43020"/>
        <function-ref name="get" scoped="" ref="0x2b2446e47020"/>
        <function-ref name="reset" scoped="" ref="0x2b2446e45310"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446e44a58"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446e440f8"/>
        <function-ref name="set" scoped="" ref="0x2b2446e474a8"/>
        <function-ref name="start" scoped="" ref="0x2b2446e45798"/>
        <function-ref name="stop" scoped="" ref="0x2b2446e45c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2446e233c0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2446e233c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446e1f580"/>
        <function-ref name="test" scoped="" ref="0x2b2446e22e08"/>
        <function-ref name="get" scoped="" ref="0x2b2446e22020"/>
        <function-ref name="reset" scoped="" ref="0x2b2446e21310"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446e1fa58"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446e22980"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446e1f0f8"/>
        <function-ref name="set" scoped="" ref="0x2b2446e224a8"/>
        <function-ref name="start" scoped="" ref="0x2b2446e21798"/>
        <function-ref name="stop" scoped="" ref="0x2b2446e21c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2446ec35a8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446ec35a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b24464fb960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446ec23a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446ec2cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2446ec2830"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446ec1190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b2446ec16d0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2446ec16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2446ebd930"/>
        <function-ref name="test" scoped="" ref="0x2b2446ebe1f8"/>
        <function-ref name="get" scoped="" ref="0x2b2446ebf3a8"/>
        <function-ref name="reset" scoped="" ref="0x2b2446ebe680"/>
        <function-ref name="getMode" scoped="" ref="0x2b2446ebde08"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446ebfd08"/>
        <function-ref name="isOn" scoped="" ref="0x2b2446ebd4a8"/>
        <function-ref name="set" scoped="" ref="0x2b2446ebf830"/>
        <function-ref name="start" scoped="" ref="0x2b2446ebeb08"/>
        <function-ref name="stop" scoped="" ref="0x2b2446ebd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2447b0c770" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2447b0c770"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2447b0cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2447b0b020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2447b0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b24464fb960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447b0bd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2447b0a6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2447b0a230"/>
        <function-ref name="overflow" scoped="" ref="0x2b2447b0ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b2447b08128" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447b08128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447b04270"/>
        <function-ref name="test" scoped="" ref="0x2b2447b07af0"/>
        <function-ref name="get" scoped="" ref="0x2b2447b08ca8"/>
        <function-ref name="reset" scoped="" ref="0x2b2447b06020"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447b04748"/>
        <function-ref name="overflow" scoped="" ref="0x2b2447b07668"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447b06db8"/>
        <function-ref name="set" scoped="" ref="0x2b2447b07190"/>
        <function-ref name="start" scoped="" ref="0x2b2447b064a8"/>
        <function-ref name="stop" scoped="" ref="0x2b2447b06930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b2446eeb450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b2446eeb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b24464fb960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446eea1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446eeaae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2446eea658"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446ee8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2446eee270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2446eee270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b24464fb960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446eec020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2446eec930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2446eec4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b2446eecdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b2446f0a748" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b2446f0a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b2446f1e4d8"/>
        <function-ref name="enqueue" scoped="" ref="0x2b2446f1d240"/>
        <function-ref name="element" scoped="" ref="0x2b2446f1d870"/>
        <function-ref name="full" scoped="" ref="0x2b2446f1f7c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2b2446f1e088"/>
        <function-ref name="dequeue" scoped="" ref="0x2b2446f1eb38"/>
        <function-ref name="empty" scoped="" ref="0x2b2446f1f370"/>
        <function-ref name="size" scoped="" ref="0x2b2446f1fc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b2446f170f8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b2446f170f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b2446f16db0"/>
        <function-ref name="enqueue" scoped="" ref="0x2b2446f13aa8"/>
        <function-ref name="element" scoped="" ref="0x2b2446f12118"/>
        <function-ref name="full" scoped="" ref="0x2b2446f160c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2b2446f16960"/>
        <function-ref name="dequeue" scoped="" ref="0x2b2446f13448"/>
        <function-ref name="empty" scoped="" ref="0x2b2446f17c40"/>
        <function-ref name="size" scoped="" ref="0x2b2446f16510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b2446f12790" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2446f12790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446f12ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446f12c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446f12df0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446f11020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446f111a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b2446f11430" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2446f11430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446f11780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2446f11908"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446f11a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446f11c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2446f11da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2b2446f0b4d8" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2b2446f0b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2446f0b828"/>
        <function-ref name="runTask" scoped="" ref="0x2b2446f0b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2446f182d0" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2446f182d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446f18620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b2446f10080" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2446f10080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b2446f103d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2446f10558"/>
        <function-ref name="led1On" scoped="" ref="0x2b2446f106e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2446f10868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b2446f109f0"/>
        <function-ref name="get" scoped="" ref="0x2b2446f10b78"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2446f10d00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b2446f0f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2446f0f020"/>
        <function-ref name="led0On" scoped="" ref="0x2b2446f0f1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b2446f0f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b2446f15898" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b2446f15898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b2446f15be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b2446f2de58" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b2446f2de58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b2446f2a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2446f5c888" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2446f5c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2446f5cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b2446f5b020" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b2446f5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b2446f5b370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b2446f53020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2446f53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b2446f53370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b2446f53700" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b2446f53700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2446f53a50"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2446f53bd8"/>
        <function-ref name="start" scoped="" ref="0x2b2446f53d60"/>
        <function-ref name="stop" scoped="" ref="0x2b2446f52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2446f28c48" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="TestUsbStationAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2446f28c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2446f4ae78"/>
        <function-ref name="fired" scoped="" ref="0x2b2446f4c5a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2446f4a2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2446f4ce48"/>
        <function-ref name="getdt" scoped="" ref="0x2b2446f49748"/>
        <function-ref name="gett0" scoped="" ref="0x2b2446f492f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2446f4c9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2446f547e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2446f4a8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2446f54c88"/>
        <function-ref name="stop" scoped="" ref="0x2b2446f4c158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2446f48e18" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2446f48e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2446f451a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2446f45330"/>
        <function-ref name="start" scoped="" ref="0x2b2446f454b8"/>
        <function-ref name="stop" scoped="" ref="0x2b2446f45640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b2446f74a80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b2446f74a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b2446f74dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b2446f771c8" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b2446f771c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b2446f77518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b2446f777a0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2446f777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446f77af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2446f77c78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446f77e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446f75020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2446f751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b2446f45db8" loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2446f45db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446f44170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446f442f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446f44480"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446f44608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446f44790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b2446f43b68" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b2446f43b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446f79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b2446f671d8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b2446f671d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b2446f67528"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b2446f676b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b2446f67838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b2446f679c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2446f43020" loc="33:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2446f43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446f43370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b2446f6e020" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2446f6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2446f60478"/>
        <function-ref name="clear" scoped="" ref="0x2b2446f60b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b2446f6ed70"/>
        <function-ref name="set" scoped="" ref="0x2b2446f90278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b2446f71af0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446f71af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b2446f71e40"/>
        <function-ref name="noAck" scoped="" ref="0x2b2446f70020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b2446f701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b2446f6f020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b2446f6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b2446f6f370"/>
        <function-ref name="setRetries" scoped="" ref="0x2b2446f6f4f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b2446f6f680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b2446f6f808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b2446f6f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b2446f75448" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2446f75448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2446f75798"/>
        <function-ref name="source" scoped="" ref="0x2b2446f75920"/>
        <function-ref name="address" scoped="" ref="0x2b2446f75aa8"/>
        <function-ref name="destination" scoped="" ref="0x2b2446f75c30"/>
        <function-ref name="setSource" scoped="" ref="0x2b2446f75db8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2446f71020"/>
        <function-ref name="type" scoped="" ref="0x2b2446f711a8"/>
        <function-ref name="setType" scoped="" ref="0x2b2446f71330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2446f714b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2446f71640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2446f717c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b2446f90e48" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2446f90e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2446f8e420"/>
        <function-ref name="clear" scoped="" ref="0x2b2446f8eb00"/>
        <function-ref name="isValid" scoped="" ref="0x2b2446f8fce8"/>
        <function-ref name="set" scoped="" ref="0x2b2446f8c278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2446f8b440" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2446f8b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2446f8b790"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2446f8b918"/>
        <function-ref name="start" scoped="" ref="0x2b2446f8baa0"/>
        <function-ref name="stop" scoped="" ref="0x2b2446f8bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b2446fb0020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b2446fb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446faf608"/>
        <function-ref name="get" scoped="" ref="0x2b2446faf0f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b2446fb0ba0"/>
        <function-ref name="set" scoped="" ref="0x2b2446fafb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b2446fa4758" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2446fa4758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2446fa3c58"/>
        <function-ref name="clear" scoped="" ref="0x2b2446fa2380"/>
        <function-ref name="isValid" scoped="" ref="0x2b2446fa3578"/>
        <function-ref name="set" scoped="" ref="0x2b2446fa2a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b2446f86c88" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b2446f86c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b2446f84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b2446f847d8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b2446f847d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b2446f84b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b2446f825f8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2446f825f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446f82948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2446f82ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446f82c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446f82de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2446f81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b2446f883c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2446f883c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446f88718"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446f888a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446f88a28"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446f88bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446f88d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b2446f861c8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b2446f861c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446f86518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b2446fb4bd8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b2446fb4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446fb1208"/>
        <function-ref name="get" scoped="" ref="0x2b2446fb3cb0"/>
        <function-ref name="isSet" scoped="" ref="0x2b2446fb37a0"/>
        <function-ref name="set" scoped="" ref="0x2b2446fb1718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b2446f7f318" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b2446f7f318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b2446f7f668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b2446f7f7f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b2446f7f978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b2446f7fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2446f874e8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2446f874e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446f87838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b2446fab848" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2446fab848"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2446fa9cc0"/>
        <function-ref name="clear" scoped="" ref="0x2b2446fa6420"/>
        <function-ref name="isValid" scoped="" ref="0x2b2446fa95e0"/>
        <function-ref name="set" scoped="" ref="0x2b2446fa6b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b2446fa7430" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2446fa7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446fab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b2446f7d828" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b2446f7d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446f7ce30"/>
        <function-ref name="get" scoped="" ref="0x2b2446f7c920"/>
        <function-ref name="isSet" scoped="" ref="0x2b2446f7c410"/>
        <function-ref name="set" scoped="" ref="0x2b2446fb4388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b2446f80968" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446f80968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b2446f80cb8"/>
        <function-ref name="noAck" scoped="" ref="0x2b2446f80e40"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b2446f7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b2446f833c8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b2446f833c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446f83718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b2446f7fdb0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b2446f7fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b2446f7e2e8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b2446f7e470"/>
        <function-ref name="getRetries" scoped="" ref="0x2b2446f7e5f8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b2446f7e780"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b2446f7e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b2446f812c0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2446f812c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2446f81610"/>
        <function-ref name="source" scoped="" ref="0x2b2446f81798"/>
        <function-ref name="address" scoped="" ref="0x2b2446f81920"/>
        <function-ref name="destination" scoped="" ref="0x2b2446f81aa8"/>
        <function-ref name="setSource" scoped="" ref="0x2b2446f81c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2446f81db8"/>
        <function-ref name="type" scoped="" ref="0x2b2446f80020"/>
        <function-ref name="setType" scoped="" ref="0x2b2446f801a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2446f80330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2446f804b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2446f80640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b2446f7ebd0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b2446f7ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b2446f7d020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b2446f7d1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2446f7d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b2446faa808" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b2446faa808"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b2446faab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b2446f82020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b2446f82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446f82370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2446fa0b78" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2446fa0b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2446f9d020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2446f9d1a8"/>
        <function-ref name="start" scoped="" ref="0x2b2446f9d330"/>
        <function-ref name="stop" scoped="" ref="0x2b2446f9d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2b2446fdc370" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b2446fdc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b2446fdc8c0"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b2446fdca48"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b2446fdcbd0"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b2446fdcd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b2446fe8600" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b2446fe8600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446fe7bf0"/>
        <function-ref name="get" scoped="" ref="0x2b2446fe76e0"/>
        <function-ref name="isSet" scoped="" ref="0x2b2446fe71d0"/>
        <function-ref name="set" scoped="" ref="0x2b2446fe5130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b2446fcc218" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b2446fcc218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b2446fcc668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b2446fc6208" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b2446fc6208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2446fc6558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2446fc66e0"/>
        <function-ref name="request" scoped="" ref="0x2b2446fc6868"/>
        <function-ref name="granted" scoped="" ref="0x2b2446fc69f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2446fc6b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b2446f9a498" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b2446f9a498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b2446f9a7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b2446f98020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b2446f98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b2446f98370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b2446f9dc30" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2446f9dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446f9c020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446f9c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446f9c330"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446f9c4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446f9c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b2446f9b968" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b2446f9b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446f9bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b2446fc0020" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b2446fc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b2446fc0370"/>
        <function-ref name="address" scoped="" ref="0x2b2446fc04f8"/>
        <function-ref name="destination" scoped="" ref="0x2b2446fc0680"/>
        <function-ref name="setSource" scoped="" ref="0x2b2446fc0808"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2446fc0990"/>
        <function-ref name="pan" scoped="" ref="0x2b2446fc0b18"/>
        <function-ref name="setPan" scoped="" ref="0x2b2446fc0ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2446fc0e28"/>
        <function-ref name="localPan" scoped="" ref="0x2b2446fbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b2446fbf3d0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b2446fbf3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446fbf720"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2446fbf8a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446fbfa30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446fbfbb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2446fbfd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b2446feb2d0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b2446feb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446fe9898"/>
        <function-ref name="get" scoped="" ref="0x2b2446fe9388"/>
        <function-ref name="isSet" scoped="" ref="0x2b2446febe50"/>
        <function-ref name="set" scoped="" ref="0x2b2446fe9da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b2446fb7a18" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b2446fb7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b2446fb7d68"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b2446fb6020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b2446fb61a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b2446fb6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2b2446fe5948" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b2446fe5948"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446fe2020"/>
        <function-ref name="get" scoped="" ref="0x2b2446fe4a70"/>
        <function-ref name="isSet" scoped="" ref="0x2b2446fe4560"/>
        <function-ref name="set" scoped="" ref="0x2b2446fe2530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b2446fcf550" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b2446fcf550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446fcf8a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2446fcfa28"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446fcfbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446fcfd38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2446fce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2446f9cdc0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2446f9cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446f9b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b2446fe0cb8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2446fe0cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2446fda150"/>
        <function-ref name="clear" scoped="" ref="0x2b2446fda830"/>
        <function-ref name="isValid" scoped="" ref="0x2b2446fdba40"/>
        <function-ref name="set" scoped="" ref="0x2b2446fd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b2446fe1890" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2446fe1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2446fe0490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b2446fb5e40" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b2446fb5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2446fec530"/>
        <function-ref name="get" scoped="" ref="0x2b2446fec020"/>
        <function-ref name="isSet" scoped="" ref="0x2b2446feda18"/>
        <function-ref name="set" scoped="" ref="0x2b2446feca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b2446fb70c0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2446fb70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b2446fb7410"/>
        <function-ref name="noAck" scoped="" ref="0x2b2446fb7598"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b2446fb7720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b2446fc7d80" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b2446fc7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2446fcd170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2446fcd2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2446fcd480"/>
        <function-ref name="cancel" scoped="" ref="0x2b2446fcd608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2446fcd790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b2446f98be0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b2446f98be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446fd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b2446fb65e0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b2446fb65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b2446fb6930"/>
        <function-ref name="setRetries" scoped="" ref="0x2b2446fb6ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b2446fb6c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b2446fb6dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b2446fb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b2446fb52e8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b2446fb52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b2446fb5638"/>
        <function-ref name="setChannel" scoped="" ref="0x2b2446fb57c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2446fb5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b2446fd1e50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2446fd1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2446fd01e8"/>
        <function-ref name="source" scoped="" ref="0x2b2446fd0370"/>
        <function-ref name="address" scoped="" ref="0x2b2446fd04f8"/>
        <function-ref name="destination" scoped="" ref="0x2b2446fd0680"/>
        <function-ref name="setSource" scoped="" ref="0x2b2446fd0808"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2446fd0990"/>
        <function-ref name="type" scoped="" ref="0x2b2446fd0b18"/>
        <function-ref name="setType" scoped="" ref="0x2b2446fd0ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2446fd0e28"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2446fcf020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2446fcf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b2446fd8bf0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2446fd8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2446fd6088"/>
        <function-ref name="clear" scoped="" ref="0x2b2446fd6768"/>
        <function-ref name="isValid" scoped="" ref="0x2b2446fd7970"/>
        <function-ref name="set" scoped="" ref="0x2b2446fd6e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b2446fcdaf0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b2446fcdaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446fcde40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b2446fe1080" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b2446fe1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b2446fe13d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b2446fd1860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b2446fd1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2446fd1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2b2447065998" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b2447065998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b2447065ce8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b2447065e70"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b2447064020"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b24470641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b24470198e0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b24470198e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b2447019c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b2446ff0730" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b2446ff0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b2446ff0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b244701bda8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b244701bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2447026170"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b24470262f8"/>
        <function-ref name="source" scoped="" ref="0x2b2447026480"/>
        <function-ref name="destination" scoped="" ref="0x2b2447026608"/>
        <function-ref name="setSource" scoped="" ref="0x2b2447026790"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2447026918"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2447026aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b2447023c60" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b2447023c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b2446fef020"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b2446fef1a8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b2446fef330"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b2446fef4b8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b2446fef640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b2447035640" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b2447035640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b2447035990"/>
        <function-ref name="wait" scoped="" ref="0x2b2447035b18"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447035ca0"/>
        <function-ref name="isFree" scoped="" ref="0x2b2447035e28"/>
        <function-ref name="getNow" scoped="" ref="0x2b244703a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b24470398b8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b24470398b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2447034e10"/>
        <function-ref name="clear" scoped="" ref="0x2b244702d558"/>
        <function-ref name="isValid" scoped="" ref="0x2b2447034730"/>
        <function-ref name="set" scoped="" ref="0x2b244702dc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b2446ff11b8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b2446ff11b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b2446ff1508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b2446ff9618" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b2446ff9618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b2446ff9968"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b2446ff9af0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b2446ff9c78"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b2446ff9e00"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b2447008020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b24470081a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b2447008330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b24470084b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b244703c858" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b244703c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b244703cba8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b244703cd30"/>
        <function-ref name="setFCF" scoped="" ref="0x2b2447018020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b24470181a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b2447018330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b24470184b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b2447018640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b24470187c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b2447018950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b2447018ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b2447018c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b2447018de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b2447017020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b24470172a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b2447017430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b24470175b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b2447017740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b24470178c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b2447017a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2447017bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b2447017d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b244703b020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b244703b1a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b244703b330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b244703b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2b244702c698" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b244702c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244702bdc8"/>
        <function-ref name="get" scoped="" ref="0x2b244702b8b8"/>
        <function-ref name="isSet" scoped="" ref="0x2b244702b3a8"/>
        <function-ref name="set" scoped="" ref="0x2b2447065328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b2446ff46c0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b2446ff46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b2446ff4a10"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b2446ff4b98"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b2446ff4d20"/>
        <function-ref name="getSender" scoped="" ref="0x2b2447000020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b2447028af8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b2447028af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b2447028e48"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b2446ff3020"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b2446ff31a8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b2446ff3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2b244702f810" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2b244702f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244702fb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244702fce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244702fe70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447039020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24470391a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447039330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x2b24470025f8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b24470025f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b2447002948"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b2447002ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447002c58"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b2447002de0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244700a020"/>
        <function-ref name="setAck" scoped="" ref="0x2b244700a1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244700a330"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b244700a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b24470be2e8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b24470be2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b24470be658"/>
        <function-ref name="wait" scoped="" ref="0x2b24470be7e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b24470be968"/>
        <function-ref name="isFree" scoped="" ref="0x2b24470beaf0"/>
        <function-ref name="getNow" scoped="" ref="0x2b24470bec78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b24470c52d0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b24470c52d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b244688f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24470c3928"/>
        <function-ref name="fired" scoped="" ref="0x2b24470c49e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b24470c3320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24470c4e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24470c3db0"/>
        <function-ref name="start" scoped="" ref="0x2b24470c4088"/>
        <function-ref name="stop" scoped="" ref="0x2b24470c4560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b2447b9eaa8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b2447b9eaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b2447b9ee18"/>
        <function-ref name="wait" scoped="" ref="0x2b2447b9d020"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447b9d1a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b2447b9d330"/>
        <function-ref name="getNow" scoped="" ref="0x2b2447b9d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b2447b9d970" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447b9d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b244688f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447b9a020"/>
        <function-ref name="fired" scoped="" ref="0x2b2447b9b0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447b9b9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447b9b548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2447b9a4a8"/>
        <function-ref name="start" scoped="" ref="0x2b2447b9c730"/>
        <function-ref name="stop" scoped="" ref="0x2b2447b9cc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b2447b9a880" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b2447b9a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b2447b9abd0"/>
        <function-ref name="suspend" scoped="" ref="0x2b2447b9ad58"/>
        <function-ref name="resume" scoped="" ref="0x2b2447b99020"/>
        <function-ref name="run" scoped="" ref="0x2b2447b991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b24470d2c30" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b24470d2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b24470cf020"/>
        <function-ref name="suspend" scoped="" ref="0x2b24470cf1a8"/>
        <function-ref name="resume" scoped="" ref="0x2b24470cf330"/>
        <function-ref name="run" scoped="" ref="0x2b24470cf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b2447187430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b2447187430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447187780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b2447188a50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b2447188a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447188da0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447187020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24471871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b244718a020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b244718a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b244718a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b244718a6f8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b244718a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b244718aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b244718d578" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b244718d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244718d8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244718da50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b244718dbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244718dd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b244718c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b244718c388" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b244718c388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244718c6f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b244718c880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244718ca08"/>
        <function-ref name="cancel" scoped="" ref="0x2b244718cb90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244718cd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b244718b7e0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b244718b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b244718bb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b2447187a08" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b2447187a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2447187e58"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b2447185020"/>
        <function-ref name="source" scoped="" ref="0x2b24471851a8"/>
        <function-ref name="destination" scoped="" ref="0x2b2447185330"/>
        <function-ref name="setSource" scoped="" ref="0x2b24471854b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2447185640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b24471857c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b2447189ba8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b2447189ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447188020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24471881a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447188330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24471884b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447188640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24471887c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b244718b0c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b244718b0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b244718b438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b244718ae10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b244718ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24471891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b244718f020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b244718f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b244718f370"/>
        <function-ref name="source" scoped="" ref="0x2b244718f4f8"/>
        <function-ref name="address" scoped="" ref="0x2b244718f680"/>
        <function-ref name="destination" scoped="" ref="0x2b244718f808"/>
        <function-ref name="setSource" scoped="" ref="0x2b244718f990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b244718fb18"/>
        <function-ref name="type" scoped="" ref="0x2b244718fca0"/>
        <function-ref name="setType" scoped="" ref="0x2b244718fe28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b244718d020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b244718d1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b244718d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b2447189550" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b2447189550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24471898c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b2447b79708" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b2447b79708"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447b79b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b2447b7bda0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b2447b7bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447b79170"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447b792f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447b79480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b2447b7d388" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b2447b7d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b2447b7d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b2447b7da60" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b2447b7da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b2447b7ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b2447b80888" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2447b80888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447b80bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447b80d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2447b7f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447b7f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447b7f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b2447b7f698" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2447b7f698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447b7fa08"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2447b7fb90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447b7fd18"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447b7e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447b7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b2447b7ec28" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b2447b7ec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447b7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b2447b82438" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b2447b82438"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447b82788"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447b82910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447b82a98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447b82c20"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447b82da8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447b81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b2447b79de0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b2447b79de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2447b78170"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b2447b782f8"/>
        <function-ref name="source" scoped="" ref="0x2b2447b78480"/>
        <function-ref name="destination" scoped="" ref="0x2b2447b78608"/>
        <function-ref name="setSource" scoped="" ref="0x2b2447b78790"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2447b78918"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2447b78aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b2447b78ce8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b2447b78ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b2447b770a0"/>
        <function-ref name="changed" scoped="" ref="0x2b2447b77228"/>
        <function-ref name="amGroup" scoped="" ref="0x2b2447b773b0"/>
        <function-ref name="setAddress" scoped="" ref="0x2b2447b77538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b2447b7b020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b2447b7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447b7b370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447b7b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447b7b680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447b7b808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447b7b990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447b7bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2447b7e510" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2447b7e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447b7e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b2447b7c1c0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b2447b7c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447b7c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b2447b81268" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2447b81268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2447b815b8"/>
        <function-ref name="source" scoped="" ref="0x2b2447b81740"/>
        <function-ref name="address" scoped="" ref="0x2b2447b818c8"/>
        <function-ref name="destination" scoped="" ref="0x2b2447b81a50"/>
        <function-ref name="setSource" scoped="" ref="0x2b2447b81bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2447b81d60"/>
        <function-ref name="type" scoped="" ref="0x2b2447b80020"/>
        <function-ref name="setType" scoped="" ref="0x2b2447b801a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2447b80330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2447b804b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2447b80640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b2447b7c8d8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b2447b7c8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447b7cc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b24471684d8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b24471684d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b2447168828"/>
        <function-ref name="changed" scoped="" ref="0x2b24471689b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b2447168b38"/>
        <function-ref name="setAddress" scoped="" ref="0x2b2447168cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b24471c0618" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b24471c0618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24471c0968"/>
        <function-ref name="cancel" scoped="" ref="0x2b24471c0af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24471c0c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b24471b1020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b24471b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b24471b1370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b24471b14f8"/>
        <function-ref name="request" scoped="" ref="0x2b24471b1680"/>
        <function-ref name="granted" scoped="" ref="0x2b24471b1808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b24471b1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b24471c1b40" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b24471c1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24471c0020"/>
        <function-ref name="cancel" scoped="" ref="0x2b24471c01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24471c0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b2447216510" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b2447216510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b2447216880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2447216a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2447215550" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2447215550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b24472158c0"/>
        <function-ref name="configure" scoped="" ref="0x2b2447215a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2447218748" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2447218748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2447218ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2447218c40"/>
        <function-ref name="request" scoped="" ref="0x2b2447218dc8"/>
        <function-ref name="granted" scoped="" ref="0x2b2447216020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b24472161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b2447216c50" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2447216c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b2447215020"/>
        <function-ref name="userId" scoped="" ref="0x2b24472151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2447bf8aa0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2447bf8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2447bf8df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b2447bf70a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b2447bf70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b2447bf73f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b2447bf7578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b2447bf7700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b2447bf7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b2447bf4af8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b2447bf4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b2447bf4e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2447bf3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2447bf3b08" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2447bf3b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2447bf3e78"/>
        <function-ref name="configure" scoped="" ref="0x2b2447bf2030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b2447bf22b8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b2447bf22b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b2447bf2608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b2447bf2790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b2447bf2918"/>
        <function-ref name="dequeue" scoped="" ref="0x2b2447bf2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2447bf6dd8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2447bf6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2447bf4170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2447bf42f8"/>
        <function-ref name="request" scoped="" ref="0x2b2447bf4480"/>
        <function-ref name="granted" scoped="" ref="0x2b2447bf4608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2447bf4790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b2447bf3268" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2447bf3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b2447bf35b8"/>
        <function-ref name="userId" scoped="" ref="0x2b2447bf3740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b2447bf2d68" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b2447bf2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2447bf10f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b2447bf1278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b24472660a0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b24472660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24472663f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447266578"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447266700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b2447266988" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b2447266988"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447266cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b2447228b50" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b2447228b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b2447227020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b2447212b38" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2447212b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447229020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24472291a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2447229330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24472294b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447229640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b24472682e0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b24472682e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447268630"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24472687b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447268940"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447268ac8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447268c50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447268dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b24472272c8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b24472272c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b2447227618"/>
        <function-ref name="getDSN" scoped="" ref="0x2b24472277a0"/>
        <function-ref name="setFCF" scoped="" ref="0x2b2447227928"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b2447227ab0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b2447227c38"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b2447227dc0"/>
        <function-ref name="setDSN" scoped="" ref="0x2b2447226020"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b24472261a8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b2447226330"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b24472264b8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b2447226640"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b24472267c8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b2447226950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b2447226bd8"/>
        <function-ref name="localPan" scoped="" ref="0x2b2447226d60"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b2447269020"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b24472691a8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b2447269330"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b24472694b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2447269640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b24472697c8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b2447269950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b2447269ad8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b2447269c60"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b2447269de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b2447229888" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b2447229888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447229bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2447229d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447228020"/>
        <function-ref name="cancel" scoped="" ref="0x2b24472281a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447228330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b24472285b8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b24472285b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447228908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b2447270928" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b2447270928"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447270c78"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447270e00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244726f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b244726f2a8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b244726f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b244726f5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b2447273c10" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b2447273c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447272020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24472721a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447272330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24472724b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447272640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24472727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b2447271430" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b2447271430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447271780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b244726f880" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b244726f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244726fbd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244726fd58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244726e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b244726e1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244726e330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244726e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b2447272a50" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b2447272a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447272da0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447271020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24472711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b244725fd20" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b244725fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24472730a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447273228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24472733b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b2447273638" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b2447273638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447273988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b2447271a08" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b2447271a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447271d58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447270020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24472701a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447270330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24472704b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447270640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b24472f6900" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b24472f6900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b24472f6c50"/>
        <function-ref name="address" scoped="" ref="0x2b24472f6dd8"/>
        <function-ref name="destination" scoped="" ref="0x2b24472f5020"/>
        <function-ref name="setSource" scoped="" ref="0x2b24472f51a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b24472f5330"/>
        <function-ref name="pan" scoped="" ref="0x2b24472f54b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b24472f5640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b24472f57c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b24472f5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b24472f5b98" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b24472f5b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244733b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244733b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244733b330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b244733b4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244733b640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244733b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b24472f9980" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b24472f9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b24472f9cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b24472f9e58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b24472f8020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b24472f81a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b24472f8330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b24472f84b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b24472f8640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b24472f87c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b24472f8950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b24472f8ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b24472f8c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b24472f8de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b24472f7020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b24472f72a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b24472f7430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b24472f75b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b24472f7740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b24472f78c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b24472f7a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b24472f7bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b24472f7d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b24472f6020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b24472f61a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b24472f6330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b24472f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b244733bab0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b244733bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244733be00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244733a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244733a1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b244733a330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244733a4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244733a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b2447c63778" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b2447c63778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b2447c63ac8"/>
        <function-ref name="address" scoped="" ref="0x2b2447c63c50"/>
        <function-ref name="destination" scoped="" ref="0x2b2447c63dd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b2447c62020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2447c621a8"/>
        <function-ref name="pan" scoped="" ref="0x2b2447c62330"/>
        <function-ref name="setPan" scoped="" ref="0x2b2447c624b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2447c62640"/>
        <function-ref name="localPan" scoped="" ref="0x2b2447c627c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b2447c62a10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b2447c62a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447c62d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447c61020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447c611a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447c61330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447c614b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447c61640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b2447c667f8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b2447c667f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b2447c66b48"/>
        <function-ref name="getDSN" scoped="" ref="0x2b2447c66cd0"/>
        <function-ref name="setFCF" scoped="" ref="0x2b2447c66e58"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b2447c65020"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b2447c651a8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b2447c65330"/>
        <function-ref name="setDSN" scoped="" ref="0x2b2447c654b8"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b2447c65640"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b2447c657c8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b2447c65950"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b2447c65ad8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b2447c65c60"/>
        <function-ref name="localAddr" scoped="" ref="0x2b2447c65de8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b2447c64120"/>
        <function-ref name="localPan" scoped="" ref="0x2b2447c642a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b2447c64430"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b2447c645b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b2447c64740"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b2447c648c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2447c64a50"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b2447c64bd8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b2447c64d60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b2447c63020"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b2447c631a8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b2447c63330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b2447c618e8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b2447c618e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b2447c61c38"/>
        <function-ref name="changed" scoped="" ref="0x2b2447c61dc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b2447c60020"/>
        <function-ref name="setAddress" scoped="" ref="0x2b2447c601a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b2447c60430" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b2447c60430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447c60780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447c60908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447c60a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447c60c18"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447c60da0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447c5f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b2447364510" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b2447364510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447364860"/>
        <function-ref name="cancel" scoped="" ref="0x2b24473649e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447364b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b2447364df8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b2447364df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447362170"/>
        <function-ref name="header" scoped="" ref="0x2b24473622f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b2447365470" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b2447365470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24473657c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447365948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447365ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b2447362580" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b2447362580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b24473628d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b2447362a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b2447362be0"/>
        <function-ref name="getSender" scoped="" ref="0x2b2447362d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b2447365d18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b2447365d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24473640a0"/>
        <function-ref name="header" scoped="" ref="0x2b2447364228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b2447c7f458" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b2447c7f458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447c7f7a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447c7f930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447c7fab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b2447c7fd40" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b2447c7fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447c7e0d8"/>
        <function-ref name="header" scoped="" ref="0x2b2447c7e260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b2447c7dbd8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b2447c7dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447c7c020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b2447c7c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2447c7c330"/>
        <function-ref name="set" scoped="" ref="0x2b2447c7c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b2447c84d98" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b2447c84d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447c80170"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447c802f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447c80480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b2447c7d020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b2447c7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b2447c7d370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b2447c7d4f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b2447c7d680"/>
        <function-ref name="evicted" scoped="" ref="0x2b2447c7d808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b2447c7d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b2447c806c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b2447c806c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447c80a18"/>
        <function-ref name="header" scoped="" ref="0x2b2447c80ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2447c80de8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2447c80de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2447c7f170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b2447c7e4a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b2447c7e4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b2447c7e7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b2447c7e980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b2447c7eb08"/>
        <function-ref name="getSender" scoped="" ref="0x2b2447c7ec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b2447350d70" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b2447350d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b244734d0f0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b244734d278"/>
        <function-ref name="getNode" scoped="" ref="0x2b244734d400"/>
        <function-ref name="evicted" scoped="" ref="0x2b244734d588"/>
        <function-ref name="getIndex" scoped="" ref="0x2b244734d710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b2447349b18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b2447349b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447349e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b2447348020"/>
        <function-ref name="get" scoped="" ref="0x2b24473481a8"/>
        <function-ref name="set" scoped="" ref="0x2b2447348330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b244734a850" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b244734a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b244734aba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b244734ad28"/>
        <function-ref name="getNode" scoped="" ref="0x2b2447349020"/>
        <function-ref name="evicted" scoped="" ref="0x2b24473491a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b2447349330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b244734a238" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b244734a238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b244734a588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b2447c7a140" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b2447c7a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447c7a490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b2447c7a618"/>
        <function-ref name="get" scoped="" ref="0x2b2447c7a7a0"/>
        <function-ref name="set" scoped="" ref="0x2b2447c7a928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b244739cc38" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b244739cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244739a020"/>
        <function-ref name="cancel" scoped="" ref="0x2b244739a1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244739a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b244739a5b8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b244739a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b244739a908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b2447397100" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b2447397100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b2447397450"/>
        <function-ref name="noAck" scoped="" ref="0x2b24473975d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b2447397760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b244739e2e8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b244739e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244739e638"/>
        <function-ref name="cancel" scoped="" ref="0x2b244739e7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244739e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b244739de20" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b244739de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244739c1a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244739c330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244739c4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b244739c640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244739c7c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244739c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b244739ab90" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b244739ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447399020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24473991a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447399330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24473994b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447399640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24473997c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b2447398470" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b2447398470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b24473987c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b2447398948"/>
        <function-ref name="getRetries" scoped="" ref="0x2b2447398ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b2447398c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b2447398de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b244739ebd0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b244739ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b244739d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b2447399a10" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2447399a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b2447399d60"/>
        <function-ref name="noAck" scoped="" ref="0x2b2447398020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b24473981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b244739d268" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b244739d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b244739d5b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b244739d740"/>
        <function-ref name="getRetries" scoped="" ref="0x2b244739d8c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b244739da50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b244739dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2447391988" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2447391988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2447391cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2447391e60"/>
        <function-ref name="start" scoped="" ref="0x2b24473c7020"/>
        <function-ref name="stop" scoped="" ref="0x2b24473c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b24473c45c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b24473c45c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24473c4918"/>
        <function-ref name="cancel" scoped="" ref="0x2b24473c4aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24473c4c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b24473c3020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b24473c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24473c3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b24473c7430" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b24473c7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24473c7780"/>
        <function-ref name="cancel" scoped="" ref="0x2b24473c7908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24473c7a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b24473c62e8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b24473c62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24473c6638"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24473c67c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24473c6948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24473c6ad0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24473c6c58"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24473c6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b24473c5060" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b24473c5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b24473c53b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b24473c5538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b24473c56c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b24473c5848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b24473c5b30" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b24473c5b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b24473c5e80"/>
        <function-ref name="stopDone" scoped="" ref="0x2b24473c4030"/>
        <function-ref name="start" scoped="" ref="0x2b24473c41b8"/>
        <function-ref name="stop" scoped="" ref="0x2b24473c4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b24473c7d18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b24473c7d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24473c60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b24473c35f8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b24473c35f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24473c3948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24473c3ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24473c3c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24473c3de0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24473c2020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24473c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b2447cc3458" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b2447cc3458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b2447cc37a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b2447cc3930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b2447cc3ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b2447cc3c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2447436270" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2447436270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b24474365c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2447436748"/>
        <function-ref name="start" scoped="" ref="0x2b24474368d0"/>
        <function-ref name="stop" scoped="" ref="0x2b2447436a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b24474345d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b24474345d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b2447434928"/>
        <function-ref name="turnOn" scoped="" ref="0x2b2447434ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b2447434c38"/>
        <function-ref name="done" scoped="" ref="0x2b2447434dc0"/>
        <function-ref name="standby" scoped="" ref="0x2b2447433020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b24474331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b2447436ce0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b2447436ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24474350a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447435228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24474353b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b2447433c98" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b2447433c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447431020"/>
        <function-ref name="header" scoped="" ref="0x2b24474311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2447435638" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2447435638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447435988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b24474333f0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b24474333f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447433740"/>
        <function-ref name="ready" scoped="" ref="0x2b24474338c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447433a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b2447435bd0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b2447435bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b2447434020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b24474341a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2447434330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2447cbc870" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2447cbc870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2447cbcbc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2447cbcd48"/>
        <function-ref name="start" scoped="" ref="0x2b2447cbb020"/>
        <function-ref name="stop" scoped="" ref="0x2b2447cbb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b2447cbb430" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b2447cbb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2447cbb780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b2447cb9450" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b2447cb9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b2447cb97a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b2447cb9928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b2447cb9ab0"/>
        <function-ref name="done" scoped="" ref="0x2b2447cb9c38"/>
        <function-ref name="standby" scoped="" ref="0x2b2447cb9dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2447cb7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b2447cbba08" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b2447cbba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447cbbd58"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447cba020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447cba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b2447cb54f0" loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b2447cb54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2447cb5840"/>
        <function-ref name="runTask" scoped="" ref="0x2b2447cb59c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b2447cb6578" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b2447cb6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447cb68c8"/>
        <function-ref name="header" scoped="" ref="0x2b2447cb6a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b2447cb5c90" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b2447cb5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2447cb4020"/>
        <function-ref name="runTask" scoped="" ref="0x2b2447cb41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b2447cba430" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b2447cba430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447cba780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b2447cb6d18" loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b2447cb6d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2447cb50a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b2447cb5228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b2447cb7c98" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b2447cb7c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447cb6020"/>
        <function-ref name="ready" scoped="" ref="0x2b2447cb61a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447cb6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b2447cba9c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b2447cba9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b2447cbad18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b2447cb9020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2447cb91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b2447cb7268" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b2447cb7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b2447cb75b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b2447cb7740"/>
        <function-ref name="resume" scoped="" ref="0x2b2447cb78c8"/>
        <function-ref name="run" scoped="" ref="0x2b2447cb7a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b24474770c0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b24474770c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447477410"/>
        <function-ref name="ready" scoped="" ref="0x2b2447477598"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447477720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b24474779a8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b24474779a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447477cf8"/>
        <function-ref name="header" scoped="" ref="0x2b2447477e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b24474760f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b24474760f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b2447476440"/>
        <function-ref name="wait" scoped="" ref="0x2b24474765c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447476750"/>
        <function-ref name="isFree" scoped="" ref="0x2b24474768d8"/>
        <function-ref name="getNow" scoped="" ref="0x2b2447476a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b2447476ce8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b2447476ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b24474740a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b2447474228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b24474743b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b2447474538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b24474788c8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b24474788c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447478c18"/>
        <function-ref name="header" scoped="" ref="0x2b2447478da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b2447478020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b2447478020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447478370"/>
        <function-ref name="ready" scoped="" ref="0x2b24474784f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447478680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b2447cecd38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b2447cecd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447ceb0d8"/>
        <function-ref name="ready" scoped="" ref="0x2b2447ceb260"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447ceb3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b2447ceb670" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b2447ceb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447ceb9c0"/>
        <function-ref name="header" scoped="" ref="0x2b2447cebb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b2447cebd90" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b2447cebd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b2447ce9170"/>
        <function-ref name="wait" scoped="" ref="0x2b2447ce92f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447ce9480"/>
        <function-ref name="isFree" scoped="" ref="0x2b2447ce9608"/>
        <function-ref name="getNow" scoped="" ref="0x2b2447ce9790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b2447ce99d8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b2447ce99d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b2447ce9d28"/>
        <function-ref name="rand32" scoped="" ref="0x2b2447ce8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b2447ce82a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b2447ce82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b2447ce85f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b2447ce8780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b2447ce8908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b2447ce8a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b2447cec578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b2447cec578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447cec8c8"/>
        <function-ref name="header" scoped="" ref="0x2b2447ceca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b2447ceeb58" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b2447ceeb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447cec020"/>
        <function-ref name="ready" scoped="" ref="0x2b2447cec1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447cec330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2b2447ce8d58" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2b2447ce8d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2447ce70d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b2447ce7260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b2447440690" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b2447440690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b24474409e0"/>
        <function-ref name="rand32" scoped="" ref="0x2b2447440b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b244743e668" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b244743e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24474401e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2447444940" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2447444940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2447444c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b2447485568" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b2447485568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b24474858b8"/>
        <function-ref name="rand32" scoped="" ref="0x2b2447485a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b2447487528" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b2447487528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24474850c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b244743fb40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b244743fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2447487020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b2447490020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b2447490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447490370"/>
        <function-ref name="ready" scoped="" ref="0x2b24474904f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447490680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b2447490908" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b2447490908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447490c58"/>
        <function-ref name="header" scoped="" ref="0x2b2447490de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b244748f060" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b244748f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b244748f3b0"/>
        <function-ref name="wait" scoped="" ref="0x2b244748f538"/>
        <function-ref name="cancel" scoped="" ref="0x2b244748f6c0"/>
        <function-ref name="isFree" scoped="" ref="0x2b244748f848"/>
        <function-ref name="getNow" scoped="" ref="0x2b244748f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2b244748ed60" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b244748ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244748d0d8"/>
        <function-ref name="get" scoped="" ref="0x2b244748d260"/>
        <function-ref name="setValue" scoped="" ref="0x2b244748d3e8"/>
        <function-ref name="set" scoped="" ref="0x2b244748d570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b244748fc58" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b244748fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b244748e020"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b244748e1a8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b244748e330"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b244748e4b8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b244748e640"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b244748e7c8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b244748e950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b244748ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b244746fe00" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b244746fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24474911a8"/>
        <function-ref name="header" scoped="" ref="0x2b2447491330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b244746f558" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b244746f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244746f8a8"/>
        <function-ref name="ready" scoped="" ref="0x2b244746fa30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244746fbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b2447491578" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b2447491578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b24474918c8"/>
        <function-ref name="noAck" scoped="" ref="0x2b2447491a50"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b2447491bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2b244748d7f8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2b244748d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244748db48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244748dcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244748de58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b244748c020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244748c1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244748c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b24474d67e0" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b24474d67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24474d6b30"/>
        <function-ref name="header" scoped="" ref="0x2b24474d6cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b24474d6020" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b24474d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24474d6370"/>
        <function-ref name="header" scoped="" ref="0x2b24474d64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b24474c9020" loc="21:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b24474c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b24474c9370"/>
        <function-ref name="getDSN" scoped="" ref="0x2b24474c94f8"/>
        <function-ref name="setFCF" scoped="" ref="0x2b24474c9680"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b24474c9808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b24474c9990"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b24474c9b18"/>
        <function-ref name="setDSN" scoped="" ref="0x2b24474c9ca0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b24474c9e28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b24474c8020"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b24474c81a8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b24474c8330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b24474c84b8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b24474c8640"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b24474c88c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b24474c8a50"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b24474c8bd8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b24474c8d60"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b24474c7020"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b24474c71a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b24474c7330"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b24474c74b8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b24474c7640"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b24474c77c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b24474c7950"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b24474c7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1DriverConfig" ref="0x2b24474c6020" loc="22:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b24474c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b24474c6370"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b24474c64f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24474c6680"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b24474c6808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24474c6990"/>
        <function-ref name="setAck" scoped="" ref="0x2b24474c6b18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24474c6ca0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b24474c6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b24474c3180" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b24474c3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b24474c34f0"/>
        <function-ref name="wait" scoped="" ref="0x2b24474c3678"/>
        <function-ref name="cancel" scoped="" ref="0x2b24474c3800"/>
        <function-ref name="isFree" scoped="" ref="0x2b24474c3988"/>
        <function-ref name="getNow" scoped="" ref="0x2b24474c3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b24474c2190" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b24474c2190"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b244688f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b24474bf918"/>
        <function-ref name="fired" scoped="" ref="0x2b24474c1980"/>
        <function-ref name="startAt" scoped="" ref="0x2b24474bf310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b24474c1e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24474bfda0"/>
        <function-ref name="start" scoped="" ref="0x2b24474c1020"/>
        <function-ref name="stop" scoped="" ref="0x2b24474c14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b2447d825a0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b2447d825a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b2447d82910"/>
        <function-ref name="wait" scoped="" ref="0x2b2447d82a98"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447d82c20"/>
        <function-ref name="isFree" scoped="" ref="0x2b2447d82da8"/>
        <function-ref name="getNow" scoped="" ref="0x2b2447d81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b2447d814d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447d814d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b244688f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447d7fc88"/>
        <function-ref name="fired" scoped="" ref="0x2b2447d80d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447d7f680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447d7f1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2447d7d150"/>
        <function-ref name="start" scoped="" ref="0x2b2447d803a8"/>
        <function-ref name="stop" scoped="" ref="0x2b2447d80880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b2447d7d528" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b2447d7d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b2447d7d878"/>
        <function-ref name="suspend" scoped="" ref="0x2b2447d7da00"/>
        <function-ref name="resume" scoped="" ref="0x2b2447d7db88"/>
        <function-ref name="run" scoped="" ref="0x2b2447d7dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b24474f4338" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b24474f4338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b24474f4688"/>
        <function-ref name="stopDone" scoped="" ref="0x2b24474f4810"/>
        <function-ref name="start" scoped="" ref="0x2b24474f4998"/>
        <function-ref name="stop" scoped="" ref="0x2b24474f4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b24474f0b10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b24474f0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b24474f0e60"/>
        <function-ref name="request" scoped="" ref="0x2b24474ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b24474eb020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b24474eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24474eb370"/>
        <function-ref name="ready" scoped="" ref="0x2b24474eb4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24474eb680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b24474eb908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b24474eb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24474ebc58"/>
        <function-ref name="header" scoped="" ref="0x2b24474ebde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b24474f2be0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b24474f2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b24474f1020"/>
        <function-ref name="turnOn" scoped="" ref="0x2b24474f11a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b24474f1330"/>
        <function-ref name="done" scoped="" ref="0x2b24474f14b8"/>
        <function-ref name="standby" scoped="" ref="0x2b24474f1640"/>
        <function-ref name="getChannel" scoped="" ref="0x2b24474f17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b24474ef268" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b24474ef268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24474ef5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24474ef740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24474ef8c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24474efa50"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24474efbd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24474efd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b24474ec020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b24474ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b24474ec470"/>
        <function-ref name="turnOn" scoped="" ref="0x2b24474ec5f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b24474ec780"/>
        <function-ref name="done" scoped="" ref="0x2b24474ec908"/>
        <function-ref name="standby" scoped="" ref="0x2b24474eca90"/>
        <function-ref name="getChannel" scoped="" ref="0x2b24474ecc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b24474ee020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b24474ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b24474ee370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b24474f03f0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b24474f03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24474f0740"/>
        <function-ref name="header" scoped="" ref="0x2b24474f08c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b24474eda08" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b24474eda08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24474edd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b24474ee658" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b24474ee658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b24474ee9a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b24474eeb30"/>
        <function-ref name="start" scoped="" ref="0x2b24474eecb8"/>
        <function-ref name="stop" scoped="" ref="0x2b24474eee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b24474e9800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b24474e9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24474e9b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24474e9cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24474e9e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24474e8020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24474e81a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24474e8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b24474f2648" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b24474f2648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24474f2998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b24474e85b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b24474e85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b24474e8908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b24474ed120" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b24474ed120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24474ed470"/>
        <function-ref name="cancel" scoped="" ref="0x2b24474ed5f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24474ed780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b24474f1a10" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b24474f1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24474f1d60"/>
        <function-ref name="ready" scoped="" ref="0x2b24474f0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24474f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b24474e90a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b24474e90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b24474e93f0"/>
        <function-ref name="request" scoped="" ref="0x2b24474e9578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b24474f4d68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b24474f4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24474f20f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b24474f2278"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24474f2400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b2447568da0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b2447568da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447567170"/>
        <function-ref name="get" scoped="" ref="0x2b24475672f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b2447567480"/>
        <function-ref name="set" scoped="" ref="0x2b2447567608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b244756a020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b244756a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244756a370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244756a4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244756a680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b244756a808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244756a990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244756ab18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b2447568020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b2447568020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447568370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24475684f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447568680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447568808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447568990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447568b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b244756e598" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b244756e598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b244756da88"/>
        <function-ref name="clear" scoped="" ref="0x2b244756c190"/>
        <function-ref name="isValid" scoped="" ref="0x2b244756d3a8"/>
        <function-ref name="set" scoped="" ref="0x2b244756c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b2447569020" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2447569020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447569ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b2447572920" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2447572920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2447571d78"/>
        <function-ref name="clear" scoped="" ref="0x2b244756f4b8"/>
        <function-ref name="isValid" scoped="" ref="0x2b2447571698"/>
        <function-ref name="set" scoped="" ref="0x2b244756fb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b2447d59b30" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b2447d59b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447d59e80"/>
        <function-ref name="get" scoped="" ref="0x2b2447d58030"/>
        <function-ref name="setValue" scoped="" ref="0x2b2447d581b8"/>
        <function-ref name="set" scoped="" ref="0x2b2447d58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b2447d5acd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b2447d5acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447d590a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447d59228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447d593b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447d59538"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447d596c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447d59848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b2447d568a8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b2447d568a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447d56bf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447d56d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447d55020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447d551a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447d55330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447d554b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b2447d5d2d0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b2447d5d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2447d5c768"/>
        <function-ref name="clear" scoped="" ref="0x2b2447d5ce48"/>
        <function-ref name="isValid" scoped="" ref="0x2b2447d5c088"/>
        <function-ref name="set" scoped="" ref="0x2b2447d5a558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b2447d586d0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2447d586d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447d573a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b2447d578c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b2447d578c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447d56490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b2447d61688" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b2447d61688"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b2447d60ae0"/>
        <function-ref name="clear" scoped="" ref="0x2b2447d5e1f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b2447d60400"/>
        <function-ref name="set" scoped="" ref="0x2b2447d5e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b2447534380" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b2447534380"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447533020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b2447531ab0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b2447531ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447530658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b2447530c80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2447530c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464ff9d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b24464ffd30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447576a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b24475754a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2447575020"/>
        <function-ref name="overflow" scoped="" ref="0x2b2447575930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b2447562a70" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b2447562a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447562dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447593020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24475931a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447593330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24475934b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447593640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b2447593928" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b2447593928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447593c78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447593e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447592020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24475921a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b2447592330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24475924b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b2447562020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b2447562020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447562390"/>
        <function-ref name="get" scoped="" ref="0x2b2447562518"/>
        <function-ref name="setValue" scoped="" ref="0x2b24475626a0"/>
        <function-ref name="set" scoped="" ref="0x2b2447562828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2447590268" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2447590268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b24475905b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2447590740"/>
        <function-ref name="start" scoped="" ref="0x2b24475908c8"/>
        <function-ref name="stop" scoped="" ref="0x2b2447590a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b244758d988" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b244758d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b244758dcd8"/>
        <function-ref name="request" scoped="" ref="0x2b244758de60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b2447587020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b2447587020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447587370"/>
        <function-ref name="ready" scoped="" ref="0x2b24475874f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447587680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b2447587908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b2447587908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447587c58"/>
        <function-ref name="header" scoped="" ref="0x2b2447587de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b244758fb10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b244758fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b244758fe60"/>
        <function-ref name="turnOn" scoped="" ref="0x2b244758e020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b244758e1a8"/>
        <function-ref name="done" scoped="" ref="0x2b244758e330"/>
        <function-ref name="standby" scoped="" ref="0x2b244758e4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b244758e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b244758c0e0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b244758c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244758c430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244758c5b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244758c740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b244758c8c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244758ca50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244758cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b2447588020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b2447588020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b2447588470"/>
        <function-ref name="turnOn" scoped="" ref="0x2b24475885f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b2447588780"/>
        <function-ref name="done" scoped="" ref="0x2b2447588908"/>
        <function-ref name="standby" scoped="" ref="0x2b2447588a90"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2447588c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b244758ce60" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b244758ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b244758a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b244758d268" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b244758d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b244758d5b8"/>
        <function-ref name="header" scoped="" ref="0x2b244758d740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b2447589908" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b2447589908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447589c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b244758a4d0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b244758a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b244758a820"/>
        <function-ref name="stopDone" scoped="" ref="0x2b244758a9a8"/>
        <function-ref name="start" scoped="" ref="0x2b244758ab30"/>
        <function-ref name="stop" scoped="" ref="0x2b244758acb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b2447586800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b2447586800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447586b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447586cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447586e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447585020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24475851a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b2447585330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b244758f578" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b244758f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b244758f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b24475855b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b24475855b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b2447585908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b2447589020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b2447589020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447589370"/>
        <function-ref name="cancel" scoped="" ref="0x2b24475894f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447589680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b244758e888" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b244758e888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244758ebd8"/>
        <function-ref name="ready" scoped="" ref="0x2b244758ed60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244758d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b24475860a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b24475860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b24475863f0"/>
        <function-ref name="request" scoped="" ref="0x2b2447586578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b2447590c98" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b2447590c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244758f020"/>
        <function-ref name="cancel" scoped="" ref="0x2b244758f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244758f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2447581d08" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2447581d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b244757f0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b244757f228"/>
        <function-ref name="start" scoped="" ref="0x2b244757f3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b244757f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b244757c3f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b244757c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b244757c740"/>
        <function-ref name="request" scoped="" ref="0x2b244757c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b24475778c8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b24475778c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447577c18"/>
        <function-ref name="ready" scoped="" ref="0x2b2447577da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24475c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b24475c82a8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b24475c82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24475c85f8"/>
        <function-ref name="header" scoped="" ref="0x2b24475c8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b244757e5f8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b244757e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b244757e948"/>
        <function-ref name="turnOn" scoped="" ref="0x2b244757ead0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b244757ec58"/>
        <function-ref name="done" scoped="" ref="0x2b244757ede0"/>
        <function-ref name="standby" scoped="" ref="0x2b244757d020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b244757d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b244757cb10" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b244757cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244757ce60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b244757b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244757b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b244757b330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244757b4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244757b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b2447579a08" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b2447579a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b2447579e58"/>
        <function-ref name="turnOn" scoped="" ref="0x2b2447577020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b24475771a8"/>
        <function-ref name="done" scoped="" ref="0x2b2447577330"/>
        <function-ref name="standby" scoped="" ref="0x2b24475774b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2447577640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b244757b8c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b244757b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b244757bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b244757dc98" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b244757dc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b244757c020"/>
        <function-ref name="header" scoped="" ref="0x2b244757c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b2447579430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b2447579430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b2447579780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b244757a020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b244757a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b244757a370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b244757a4f8"/>
        <function-ref name="start" scoped="" ref="0x2b244757a680"/>
        <function-ref name="stop" scoped="" ref="0x2b244757a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b24475c72a8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b24475c72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475c75f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24475c7780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24475c7908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24475c7a90"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24475c7c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24475c7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b244757e060" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b244757e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b244757e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b24475c6060" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b24475c6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b24475c63b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b244757aa90" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b244757aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244757ade0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447579020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24475791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b244757d3f0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b244757d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244757d740"/>
        <function-ref name="ready" scoped="" ref="0x2b244757d8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244757da50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b24475c8a08" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b24475c8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b24475c8d58"/>
        <function-ref name="request" scoped="" ref="0x2b24475c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b244757f780" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b244757f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b244757fad0"/>
        <function-ref name="cancel" scoped="" ref="0x2b244757fc58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b244757fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2b24475e15b0" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b24475e15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b24475e1900"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b24475e1a88"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b24475e1c10"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b24475e1d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b24475e0020" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b24475e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475e0370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24475e04f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24475e0680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24475e0808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24475e0990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24475e0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2b24475e33b0" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b24475e33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475e2a40"/>
        <function-ref name="get" scoped="" ref="0x2b24475e2530"/>
        <function-ref name="isSet" scoped="" ref="0x2b24475e2020"/>
        <function-ref name="set" scoped="" ref="0x2b24475e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b24475de8c8" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b24475de8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475dec18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24475deda0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24475dd020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24475dd1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24475dd330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24475dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntCtrlFlag" ref="0x2b24475e0e00" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntCtrlFlag" scoped="" ref="0x2b24475e0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475de1a8"/>
        <function-ref name="get" scoped="" ref="0x2b24475de330"/>
        <function-ref name="setValue" scoped="" ref="0x2b24475de4b8"/>
        <function-ref name="set" scoped="" ref="0x2b24475de640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RxModeLock" ref="0x2b24475c1aa0" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2b24475c1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b24475c1df0"/>
        <function-ref name="stop" scoped="" ref="0x2b24475e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b24475d4798" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b24475d4798"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b24475d4ae8"/>
        <function-ref name="request" scoped="" ref="0x2b24475d4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b24475ce600" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b24475ce600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475cdbf0"/>
        <function-ref name="get" scoped="" ref="0x2b24475cd6e0"/>
        <function-ref name="isSet" scoped="" ref="0x2b24475cd1d0"/>
        <function-ref name="set" scoped="" ref="0x2b24475cb130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2b2447604478" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b2447604478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b24476047c8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b2447604950"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b2447604ad8"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b2447604c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b244760b5a8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b244760b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b244760aa88"/>
        <function-ref name="clear" scoped="" ref="0x2b2447608190"/>
        <function-ref name="isValid" scoped="" ref="0x2b244760a3a8"/>
        <function-ref name="set" scoped="" ref="0x2b2447608870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b24476024f0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b24476024f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447602840"/>
        <function-ref name="get" scoped="" ref="0x2b24476029c8"/>
        <function-ref name="setValue" scoped="" ref="0x2b2447602b50"/>
        <function-ref name="set" scoped="" ref="0x2b2447602cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b24475d9778" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b24475d9778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b24475d9ac8"/>
        <function-ref name="turnOn" scoped="" ref="0x2b24475d9c50"/>
        <function-ref name="setChannel" scoped="" ref="0x2b24475d9dd8"/>
        <function-ref name="done" scoped="" ref="0x2b24475d5020"/>
        <function-ref name="standby" scoped="" ref="0x2b24475d51a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b24475d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b24475d12d0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b24475d12d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475d0898"/>
        <function-ref name="get" scoped="" ref="0x2b24475d0388"/>
        <function-ref name="isSet" scoped="" ref="0x2b24475d1e50"/>
        <function-ref name="set" scoped="" ref="0x2b24475d0da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b24475d3020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b24475d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475d3370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24475d34f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24475d3680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24475d3808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24475d3990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24475d3b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b244760c100" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b244760c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b244760c450"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b244760c5d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b244760c760"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b244760c8e8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b244760ca70"/>
        <function-ref name="setAck" scoped="" ref="0x2b244760cbf8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b244760cd80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b244760b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b24475d4020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b24475d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24475d4370"/>
        <function-ref name="header" scoped="" ref="0x2b24475d44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2447615ae0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447615ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b244688f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447611270"/>
        <function-ref name="fired" scoped="" ref="0x2b2447612310"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447612c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447612798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b24476116f8"/>
        <function-ref name="start" scoped="" ref="0x2b2447614970"/>
        <function-ref name="stop" scoped="" ref="0x2b2447614e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b24475cb990" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b24475cb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244761a020"/>
        <function-ref name="get" scoped="" ref="0x2b24475caa70"/>
        <function-ref name="isSet" scoped="" ref="0x2b24475ca560"/>
        <function-ref name="set" scoped="" ref="0x2b244761a530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2b24476072d8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b24476072d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24476068a8"/>
        <function-ref name="get" scoped="" ref="0x2b2447606398"/>
        <function-ref name="isSet" scoped="" ref="0x2b2447607e58"/>
        <function-ref name="set" scoped="" ref="0x2b2447606db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2b2447601c70" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2b2447601c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2447600020"/>
        <function-ref name="stop" scoped="" ref="0x2b24476001a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2b2447603020" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2b2447603020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2447603370"/>
        <function-ref name="stop" scoped="" ref="0x2b24476034f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftAckAlarm" ref="0x2b2447610020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftAckAlarm" scoped="" ref="0x2b2447610020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b244688f020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b244760d690"/>
        <function-ref name="fired" scoped="" ref="0x2b244760f6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b244760d088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b244760fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b244760db18"/>
        <function-ref name="start" scoped="" ref="0x2b2447610d70"/>
        <function-ref name="stop" scoped="" ref="0x2b244760f270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b2447616830" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b2447616830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447615410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b24475d55d8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b24475d55d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24475d5928"/>
        <function-ref name="ready" scoped="" ref="0x2b24475d5ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24475d5c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b244761ad70" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b244761ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447618388"/>
        <function-ref name="get" scoped="" ref="0x2b2447619e38"/>
        <function-ref name="isSet" scoped="" ref="0x2b2447619928"/>
        <function-ref name="set" scoped="" ref="0x2b2447618898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b24476010e0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b24476010e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447601430"/>
        <function-ref name="get" scoped="" ref="0x2b24476015b8"/>
        <function-ref name="setValue" scoped="" ref="0x2b2447601740"/>
        <function-ref name="set" scoped="" ref="0x2b24476018c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b2447603898" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b2447603898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447603be8"/>
        <function-ref name="get" scoped="" ref="0x2b2447603d70"/>
        <function-ref name="setValue" scoped="" ref="0x2b2447602020"/>
        <function-ref name="set" scoped="" ref="0x2b24476021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b2447616020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b2447616020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b2447616370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2b24475d2a28" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2b24475d2a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b24475d2d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b24475f72c0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b24475f72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b24475f7610"/>
        <function-ref name="request" scoped="" ref="0x2b24475f7798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b24476399f8" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b24476399f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b24464fec50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b244763b780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b24475f2548" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b24475f2548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447646b18"/>
        <function-ref name="get" scoped="" ref="0x2b2447646608"/>
        <function-ref name="isSet" scoped="" ref="0x2b24476460f8"/>
        <function-ref name="set" scoped="" ref="0x2b2447644088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b2447631880" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b2447631880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447631bd0"/>
        <function-ref name="get" scoped="" ref="0x2b2447631d58"/>
        <function-ref name="setValue" scoped="" ref="0x2b2447630020"/>
        <function-ref name="set" scoped="" ref="0x2b24476301a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2b24476281c0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b24476281c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b2447628510"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b2447628698"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b2447628820"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b24476289a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b24475fab90" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b24475fab90"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24475f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b244762f2b0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b244762f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b244762e768"/>
        <function-ref name="clear" scoped="" ref="0x2b244762ee48"/>
        <function-ref name="isValid" scoped="" ref="0x2b244762e088"/>
        <function-ref name="set" scoped="" ref="0x2b244762c558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b24475f92d0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b24475f92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b24475f9620"/>
        <function-ref name="turnOn" scoped="" ref="0x2b24475f97a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b24475f9930"/>
        <function-ref name="done" scoped="" ref="0x2b24475f9ab8"/>
        <function-ref name="standby" scoped="" ref="0x2b24475f9c40"/>
        <function-ref name="getChannel" scoped="" ref="0x2b24475f9dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b244763bd50" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b244763bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b2446890b68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447638928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b24475f5208" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b24475f5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475f37f8"/>
        <function-ref name="get" scoped="" ref="0x2b24475f32e8"/>
        <function-ref name="isSet" scoped="" ref="0x2b24475f5d88"/>
        <function-ref name="set" scoped="" ref="0x2b24475f3d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b24475f7a50" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b24475f7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24475f7da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24475f6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24475f61a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24475f6330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24475f64b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24475f6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b2447633ad0" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b2447633ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b2447633e20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b2447632020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24476321a8"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b2447632330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b24476324b8"/>
        <function-ref name="setAck" scoped="" ref="0x2b2447632640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b24476327c8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b2447632950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b24475f89e8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b24475f89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24475f8d38"/>
        <function-ref name="header" scoped="" ref="0x2b24475f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2b24476269e8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2b24476269e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2447626d38"/>
        <function-ref name="stop" scoped="" ref="0x2b2447625020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b244763d760" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b244763d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b244763dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2b244762b020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b244762b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244762a608"/>
        <function-ref name="get" scoped="" ref="0x2b244762a0f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b244762bba0"/>
        <function-ref name="set" scoped="" ref="0x2b244762ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b24476448e8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b24476448e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447641020"/>
        <function-ref name="get" scoped="" ref="0x2b24476439a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b2447643490"/>
        <function-ref name="set" scoped="" ref="0x2b2447641530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b24475fa0d8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b24475fa0d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b24475fa428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2b2447628d30" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2b2447628d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b24476273e8"/>
        <function-ref name="stop" scoped="" ref="0x2b2447627570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b2447641d70" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b2447641d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b244763e388"/>
        <function-ref name="get" scoped="" ref="0x2b2447640e38"/>
        <function-ref name="isSet" scoped="" ref="0x2b2447640928"/>
        <function-ref name="set" scoped="" ref="0x2b244763e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b24475f80c0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b24475f80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24475f8410"/>
        <function-ref name="ready" scoped="" ref="0x2b24475f8598"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24475f8720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b24476262f0" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b24476262f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b2447626640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x2b2447637020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b2447637020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b24476330f8"/>
        <function-ref name="test" scoped="" ref="0x2b24476369e8"/>
        <function-ref name="fired" scoped="" ref="0x2b2447636560"/>
        <function-ref name="get" scoped="" ref="0x2b2447637ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b2447636e70"/>
        <function-ref name="getMode" scoped="" ref="0x2b24476335d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447635c30"/>
        <function-ref name="set" scoped="" ref="0x2b2447636088"/>
        <function-ref name="start" scoped="" ref="0x2b2447635320"/>
        <function-ref name="stop" scoped="" ref="0x2b24476357a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b2447630518" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b2447630518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447630868"/>
        <function-ref name="get" scoped="" ref="0x2b24476309f0"/>
        <function-ref name="setValue" scoped="" ref="0x2b2447630b78"/>
        <function-ref name="set" scoped="" ref="0x2b2447630d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b2447632cf0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b2447632cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24476310a0"/>
        <function-ref name="get" scoped="" ref="0x2b2447631228"/>
        <function-ref name="setValue" scoped="" ref="0x2b24476313b0"/>
        <function-ref name="set" scoped="" ref="0x2b2447631538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b244763d020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b244763d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b244763d470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b2447627800" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b2447627800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b2447627b50"/>
        <function-ref name="suspend" scoped="" ref="0x2b2447627cd8"/>
        <function-ref name="resume" scoped="" ref="0x2b2447627e60"/>
        <function-ref name="run" scoped="" ref="0x2b2447626020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2b24475f6930" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2b24475f6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b24475f6c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b244773ea10" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b244773ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b24464fe8f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b24464fec50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b244773d7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b2447738188" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b2447738188"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447738d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b2447736560" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b2447736560"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447734130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b2447734758" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2447734758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2447733578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2447732020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2447733a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b24477324a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2447739160" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447739160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b244772e918"/>
        <function-ref name="fired" scoped="" ref="0x2b2447730980"/>
        <function-ref name="startAt" scoped="" ref="0x2b244772e310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447730e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b244772eda0"/>
        <function-ref name="start" scoped="" ref="0x2b2447730020"/>
        <function-ref name="stop" scoped="" ref="0x2b24477304f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b2447dd1610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447dd1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447dcd6f8"/>
        <function-ref name="test" scoped="" ref="0x2b2447dce020"/>
        <function-ref name="fired" scoped="" ref="0x2b2447dd0b30"/>
        <function-ref name="force" scoped="" ref="0x2b2447dcc088"/>
        <function-ref name="get" scoped="" ref="0x2b2447dd01d0"/>
        <function-ref name="reset" scoped="" ref="0x2b2447dce4a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447dcdbd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447dcd270"/>
        <function-ref name="set" scoped="" ref="0x2b2447dd0658"/>
        <function-ref name="start" scoped="" ref="0x2b2447dce930"/>
        <function-ref name="stop" scoped="" ref="0x2b2447dcedb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2447dd9ab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447dd9ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447dd6150"/>
        <function-ref name="fired" scoped="" ref="0x2b2447dd71f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447dd7b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447dd7680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2447dd65d8"/>
        <function-ref name="start" scoped="" ref="0x2b2447dd8828"/>
        <function-ref name="stop" scoped="" ref="0x2b2447dd8d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b2447dd6b18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447dd6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447dd2c20"/>
        <function-ref name="test" scoped="" ref="0x2b2447dd3548"/>
        <function-ref name="get" scoped="" ref="0x2b2447dd5728"/>
        <function-ref name="reset" scoped="" ref="0x2b2447dd39d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447dd1130"/>
        <function-ref name="overflow" scoped="" ref="0x2b2447dd30c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447dd2798"/>
        <function-ref name="set" scoped="" ref="0x2b2447dd5bb0"/>
        <function-ref name="start" scoped="" ref="0x2b2447dd3e58"/>
        <function-ref name="stop" scoped="" ref="0x2b2447dd2310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b2447e31c28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447e31c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447e2ddb8"/>
        <function-ref name="test" scoped="" ref="0x2b2447e2e658"/>
        <function-ref name="fired" scoped="" ref="0x2b2447e2e1d0"/>
        <function-ref name="force" scoped="" ref="0x2b2447e2b778"/>
        <function-ref name="get" scoped="" ref="0x2b2447e2f820"/>
        <function-ref name="reset" scoped="" ref="0x2b2447e2eae0"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447e2b2f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447e2d930"/>
        <function-ref name="set" scoped="" ref="0x2b2447e2fca8"/>
        <function-ref name="start" scoped="" ref="0x2b2447e2d020"/>
        <function-ref name="stop" scoped="" ref="0x2b2447e2d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2447e39020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447e39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447e36690"/>
        <function-ref name="fired" scoped="" ref="0x2b2447e376f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447e36088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447e37b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2447e36b18"/>
        <function-ref name="start" scoped="" ref="0x2b2447e39d70"/>
        <function-ref name="stop" scoped="" ref="0x2b2447e37270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2447e3a810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2447e3a810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2447e3ab60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b2447e350a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447e350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447e31270"/>
        <function-ref name="test" scoped="" ref="0x2b2447e33a58"/>
        <function-ref name="get" scoped="" ref="0x2b2447e35c20"/>
        <function-ref name="reset" scoped="" ref="0x2b2447e32020"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447e31748"/>
        <function-ref name="overflow" scoped="" ref="0x2b2447e335d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447e32db8"/>
        <function-ref name="set" scoped="" ref="0x2b2447e330f8"/>
        <function-ref name="start" scoped="" ref="0x2b2447e324a8"/>
        <function-ref name="stop" scoped="" ref="0x2b2447e32930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2447727230" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447727230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447725918"/>
        <function-ref name="fired" scoped="" ref="0x2b2447726980"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447725310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447726e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2447725da0"/>
        <function-ref name="start" scoped="" ref="0x2b2447726020"/>
        <function-ref name="stop" scoped="" ref="0x2b24477264f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b2447e0e610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447e0e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447e0a6f8"/>
        <function-ref name="test" scoped="" ref="0x2b2447e0c020"/>
        <function-ref name="fired" scoped="" ref="0x2b2447e0db30"/>
        <function-ref name="force" scoped="" ref="0x2b2447e09088"/>
        <function-ref name="get" scoped="" ref="0x2b2447e0d1d0"/>
        <function-ref name="reset" scoped="" ref="0x2b2447e0c4a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447e0abd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447e0a270"/>
        <function-ref name="set" scoped="" ref="0x2b2447e0d658"/>
        <function-ref name="start" scoped="" ref="0x2b2447e0c930"/>
        <function-ref name="stop" scoped="" ref="0x2b2447e0cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2447e17ab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447e17ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447e13150"/>
        <function-ref name="fired" scoped="" ref="0x2b2447e141f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447e14b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447e14680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2447e135d8"/>
        <function-ref name="start" scoped="" ref="0x2b2447e15828"/>
        <function-ref name="stop" scoped="" ref="0x2b2447e15d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b2447e13b18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447e13b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447e0fc20"/>
        <function-ref name="test" scoped="" ref="0x2b2447e11548"/>
        <function-ref name="get" scoped="" ref="0x2b2447e12728"/>
        <function-ref name="reset" scoped="" ref="0x2b2447e119d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447e0e130"/>
        <function-ref name="overflow" scoped="" ref="0x2b2447e110c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447e0f798"/>
        <function-ref name="set" scoped="" ref="0x2b2447e12bb0"/>
        <function-ref name="start" scoped="" ref="0x2b2447e11e58"/>
        <function-ref name="stop" scoped="" ref="0x2b2447e0f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b2447e6ac28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b2447e6ac28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447e66db8"/>
        <function-ref name="test" scoped="" ref="0x2b2447e67658"/>
        <function-ref name="fired" scoped="" ref="0x2b2447e671d0"/>
        <function-ref name="force" scoped="" ref="0x2b2447e65778"/>
        <function-ref name="get" scoped="" ref="0x2b2447e68820"/>
        <function-ref name="reset" scoped="" ref="0x2b2447e67ae0"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447e652f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447e66930"/>
        <function-ref name="set" scoped="" ref="0x2b2447e68ca8"/>
        <function-ref name="start" scoped="" ref="0x2b2447e66020"/>
        <function-ref name="stop" scoped="" ref="0x2b2447e664a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2447e72020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2447e72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b24464fa078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b24464fa360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2447e6f690"/>
        <function-ref name="fired" scoped="" ref="0x2b2447e706f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b2447e6f088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2447e70b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2447e6fb18"/>
        <function-ref name="start" scoped="" ref="0x2b2447e72d70"/>
        <function-ref name="stop" scoped="" ref="0x2b2447e70270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2447e73810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2447e73810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b24463ca570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b24463ca570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2447e73b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b2447e6e0a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b2447e6e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b2447e6a270"/>
        <function-ref name="test" scoped="" ref="0x2b2447e6ca58"/>
        <function-ref name="get" scoped="" ref="0x2b2447e6ec20"/>
        <function-ref name="reset" scoped="" ref="0x2b2447e6b020"/>
        <function-ref name="getMode" scoped="" ref="0x2b2447e6a748"/>
        <function-ref name="overflow" scoped="" ref="0x2b2447e6c5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2447e6bdb8"/>
        <function-ref name="set" scoped="" ref="0x2b2447e6c0f8"/>
        <function-ref name="start" scoped="" ref="0x2b2447e6b4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b2447e6b930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b24477bec20" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b24477bec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24477bd020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b24477bd1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24477bd330"/>
        <function-ref name="cancel" scoped="" ref="0x2b24477bd4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24477bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b24477bd888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b24477bd888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24477bdbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24477bdd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b24477bc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24477bc1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24477bc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b24477bc578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b24477bc578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b24477bc8c8"/>
        <function-ref name="source" scoped="" ref="0x2b24477bca50"/>
        <function-ref name="address" scoped="" ref="0x2b24477bcbd8"/>
        <function-ref name="destination" scoped="" ref="0x2b24477bcd60"/>
        <function-ref name="setSource" scoped="" ref="0x2b24477ba020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b24477ba1a8"/>
        <function-ref name="type" scoped="" ref="0x2b24477ba330"/>
        <function-ref name="setType" scoped="" ref="0x2b24477ba4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b24477ba640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b24477ba7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b24477ba950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b24477babd8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b24477babd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b24477b9020"/>
        <function-ref name="noAck" scoped="" ref="0x2b24477b91a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b24477b9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b2447e4c400" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2447e4c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447e4c750"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2447e4c8d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447e4ca60"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447e4cbe8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447e4cd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b2447e4b020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b2447e4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b2447e4b370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b2447e4b4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2447e4b680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447e4b808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b2447e4b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b2447e4bbd8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2447e4bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2447e4a020"/>
        <function-ref name="source" scoped="" ref="0x2b2447e4a1a8"/>
        <function-ref name="address" scoped="" ref="0x2b2447e4a330"/>
        <function-ref name="destination" scoped="" ref="0x2b2447e4a4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b2447e4a640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2447e4a7c8"/>
        <function-ref name="type" scoped="" ref="0x2b2447e4a950"/>
        <function-ref name="setType" scoped="" ref="0x2b2447e4aad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2447e4ac60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2447e4ade8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2447e49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b2447e492a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b2447e492a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b2447e495f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b2447e49780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b2447e49908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b2447e40790" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b2447e40790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447e40ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2447e40c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447e40df0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447e3f020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447e3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b2447e3f450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b2447e3f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b2447e3f7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b2447e3f928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b2447e3fab0"/>
        <function-ref name="cancel" scoped="" ref="0x2b2447e3fc38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b2447e3fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b2447e3e060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b2447e3e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b2447e3e3b0"/>
        <function-ref name="source" scoped="" ref="0x2b2447e3e538"/>
        <function-ref name="address" scoped="" ref="0x2b2447e3e6c0"/>
        <function-ref name="destination" scoped="" ref="0x2b2447e3e848"/>
        <function-ref name="setSource" scoped="" ref="0x2b2447e3e9d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b2447e3eb58"/>
        <function-ref name="type" scoped="" ref="0x2b2447e3ece0"/>
        <function-ref name="setType" scoped="" ref="0x2b2447e3ee68"/>
        <function-ref name="isForMe" scoped="" ref="0x2b2447e3d020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b2447e3d1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b2447e3d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b24477d5020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b24477d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24477d5370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b24477d54f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24477d5680"/>
        <function-ref name="cancel" scoped="" ref="0x2b24477d5808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24477d5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b24477d16f8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b24477d16f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24477d1a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b24477d1bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24477d1d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b24477d0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24477d01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b24477d28a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b24477d28a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b24477d2c18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b24477d2da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24477d1020"/>
        <function-ref name="cancel" scoped="" ref="0x2b24477d11a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b24477d1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b24477cfa10" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b24477cfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24477cfd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24477ce020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b24477ce1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24477ce330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24477ce4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b24477ce780" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b24477ce780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24477cead0"/>
        <function-ref name="runTask" scoped="" ref="0x2b24477cec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b24477cd020" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b24477cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b24477cd370"/>
        <function-ref name="runTask" scoped="" ref="0x2b24477cd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b24477d03f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b24477d03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b24477d0740"/>
        <function-ref name="source" scoped="" ref="0x2b24477d08c8"/>
        <function-ref name="address" scoped="" ref="0x2b24477d0a50"/>
        <function-ref name="destination" scoped="" ref="0x2b24477d0bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b24477d0d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b24477cf020"/>
        <function-ref name="type" scoped="" ref="0x2b24477cf1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b24477cf330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b24477cf4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b24477cf640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b24477cf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b24477b1a28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b24477b1a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b24477b1d78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b24477b0020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b24477b01a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b24477b0330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b24477b04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b24477b1490" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b24477b1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b24477b17e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b24477b0700" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b24477b0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b24477b0a50"/>
        <function-ref name="source" scoped="" ref="0x2b24477b0bd8"/>
        <function-ref name="address" scoped="" ref="0x2b24477b0d60"/>
        <function-ref name="destination" scoped="" ref="0x2b24477ae020"/>
        <function-ref name="setSource" scoped="" ref="0x2b24477ae1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b24477ae330"/>
        <function-ref name="type" scoped="" ref="0x2b24477ae4b8"/>
        <function-ref name="setType" scoped="" ref="0x2b24477ae640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b24477ae7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b24477ae950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b24477aead8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b24464d4600" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.&#10;&#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b24464d51d8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b24464da408" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b24464da198" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b24464d2b78" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b24464cf5a0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b24464cf330" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b24464db0a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b24464cfdb8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b24464db8f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b2446408290" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b2446408a80" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b244653fa10" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b244653fa10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b2446546290" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b244653be50" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b2446548a58" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b24465484c0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b24465487d8" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b2446539d60" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b2446544258" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b24465469b0" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b24465395c8" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b244653c570" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b244653c300" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b2446547950" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b24465473b8" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b24465476d0" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b244653b020" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b244653cd40" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b244653b7c8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2446570678" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2446570678"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b24465708a8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465708a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b2446569178" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465708a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b244656b328" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b244656a810" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465708a8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465708a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b244656a270" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465708a8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b244656a590" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465708a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b244656ba70" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b24465698f8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465708a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b244656d390" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465708a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b244656d120" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465708a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b244656db60" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCompare" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b24465dc758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
          <interfacedef-ref qname="HplAtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465dc758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b24465e7bb8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b24465e7948" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b24465ea740" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b24465ea070" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x2b24465e69f0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b24465eb070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465dc758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b24465eade8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b24465e6328" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b24465e7290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b24465eb970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465dc758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b24465eb700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465dc758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b24465e84e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b24465e8b80" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCounter" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b24465d6758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
          <interfacedef-ref qname="HplAtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465d6758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b24465e1c50" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b24465e19e0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b24465e37a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b24465d3070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465d6758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b24465e3e50" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b24465df378" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b24465e30d8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b24465e1328" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b24465d3970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465d6758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b24465d3700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b24465d6758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b24465e2560" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b24465e2c00" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCapture" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b244664c068" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
          <interfacedef-ref qname="HplAtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b244664c068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b244665a4e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b244665a270" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b2446649070" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b244664a958" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b244664c920" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b244664c068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b2446649718" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b244665abe0" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b2446648b88" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b244664a290" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b244664c068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b244664a020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b244664c068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b2446649de0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b24466484b8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b24464a5cd8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the&#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b244645f320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10;&#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b24464a9da0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b24464ae428" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b24464aeb60" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b24464ad328" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b24464b91d8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b24464b8810" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b24464b7020" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b24464ada40" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b24464b7b20" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b24464b78b0" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b24464afcd8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b24464b9948" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b24464b80d8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b2446485360" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2446706a38" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2446706a38"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b2446706c68" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2446706c68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b2446703528" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2446706c68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b2446702550" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b2446703d38" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b2446702c40" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <short>&#10; The interface to a TinyOS task scheduler.</short>
        <long>&#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b24463f8630" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Initialize the scheduler.</short>
          <long>&#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b2446405528" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b24463f8d48" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long>&#10; Run the next task if one is waiting, otherwise return immediately.&#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b2446903788" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b2446903518" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b2446901bf8" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b2446901988" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b24468ebb70" loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         starting or the device was off and the device is now ready to turn&#10;         on.  After receiving this return value, you should expect a&#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2446901020" loc="130:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         stopping or the device was on and the device is now ready to turn&#10;         off.  After receiving this return value, you should expect a&#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b24468e6cd8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b24468e63d8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b24468e6738" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b24468e6a48" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b24468df2d8" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468e1be8" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b24468df020" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b24468e13e0" loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b24468e3108" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468e4e50" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b24468e25c8" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468e2020" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b24468e2348" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b24468ff020" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b24468ff020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b24468fee58" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468febe8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b24468fe520" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b24468ff020"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468fe2b0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b24468ffb30" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468ff8c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b24468fcb30" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the&#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b24468ff020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468fc568" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b24468fc8b0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b24468ff020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b24468e82e8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
              <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468de8f0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b24468dec18" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b24468e8020" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b24468f7020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468facd8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b24468f6290" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24468f6020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b2446914338" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24469140c8" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b2446911a48" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b2446911290" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b2446911020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b24469101d8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis&#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b24468ef3b0" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b24468ef140" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b24468da3b0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b24468da140" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b24468cb908" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b24468db3b0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b24468db140" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b24468f5b18" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b24468f5560" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b24468f5898" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b24468d96f8" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b24468d9140" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b24468d9478" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b24468f2020" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b24468f4cf8" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b24468f02a0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b24468f2ce8" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b24468f0020" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b244689e3b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b24468f3cf0" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b24468f3a80" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b24468ed7b8" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b24468ed208" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b24468ed538" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b24468ec560" loc="195:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b2446926020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b24469266e8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b2446927290" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b24469444a0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b2446927930" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b2446926da0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b2446928548" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b2446928bb8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <short>&#10; The basic message data type accessors.</short>
        <long>&#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b2446a08e50" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446a08be0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b2446a27e20" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength().&#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446a27bb0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b2446a22020" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than&#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446a23a08" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446a23d18" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b2446a23178" loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b2446a252a0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446a26c48" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446a25020" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b2446a19c50" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446a196c0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446a199d0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b2446a372d8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446a38c90" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446a37020" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b2446a38488" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b2446a3b0a8" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446a18e08" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b2446a3a5c8" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;&#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446a3a020" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b2446a3a348" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Protection" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <short>&#10; Protection (Serial) Interface&#10; </short>
        <long>&#10; Protection (Serial) Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="sendLost" ref="0x2b2446aa41d8" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="17:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered after invalid data found in protection component, following the reset&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="amTypeMismatch" ref="0x2b2446aa53a0" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered if the message am_type in the sendDone event DO NOT match that used in send command&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleSendDone" ref="0x2b2446aa5ac0" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="13:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered when  'idle' protection component catch the sendDone event&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RestartControl" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <short>&#10; Serial Restart Interface&#10; </short>
        <long>&#10; Serial Restart Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="restart" ref="0x2b2446aa7700" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <interfacedef-ref qname="RestartControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b2446b177d0" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2446b16020" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialReset" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <short>&#10; Reset interface for Serial Protector&#10;&#10; </short>
        <long>&#10; Reset interface for Serial Protector&#10;&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="txReset" ref="0x2b2446af7258" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <interfacedef-ref qname="SerialReset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b2446b15b98" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b2446b155f8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446b15918" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b2446b104e0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b2446b10270" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b2446b0e2a0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b2446b10c58" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446b0e020" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b2446b11258" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b2446b0da38" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b2446b0d160" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446b0d480" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b2446b0d7a8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b2446b11ad0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b2446b14358" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b2446b13a50" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446b13d70" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b2446b140c8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b2446b1b348" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446b1cce8" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b2446b1b0c8" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b2446af6610" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b2446b1c418" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.&#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446af6e28" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b2446b1c198" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b2446b6b020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b2446b46778" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b2446b4c710" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b2446b4bab0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b2446b49578" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.&#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2446b49308" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b2446b4a328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b2446b4b290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2446b4b020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b2446b49d70" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b2446b4ab78" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been&#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b2446b54ba0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b2446b534b8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b2446b542a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2b2446b58b98" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
          <variable name="first_byte" ref="0x2b2446b54020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b2446b52020" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b2446b53d40" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b2446b57d48" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2b2446b57ad8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b2446b509f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2446b50780" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b2446b4f4b8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b2446b4f248" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b2446d354a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b2446d35238" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b2446d342a0" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b2446d35c98" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b2446d34020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b2446d503e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b2446d515b0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b2446d4d9f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2446d4d780" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b2446d4fa38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b2446d53730" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b2446d53e50" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b2446d51cd0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b2446d50ac0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b2446d4f3a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2446d4f138" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b2446d4d110" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b2446f09b18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b2446f09b18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b2446f030d8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b2446f09b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b2446f019a0" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b2446f09b18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b2446f01730" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b2446f09b18"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b2445dd1488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2b2445dd1488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b2446f00870" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.&#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b2446f09b18"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b2446f00600" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x2b2446f06a80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b2446f05968" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b2446f03bf8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b2446f09b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b2446f06378" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b2446f051d8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b2446f15560" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b2446f152f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sniff" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <short>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; </short>
        <long>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; @author tango&#10; @date 2014/03/12&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="catch" ref="0x2b2446f765c0" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
          <short>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; </short>
          <long>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; @param 'message_t* ONE msg'        the receied packet&#10; @param 'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param len      the length of the data region pointed to by payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Sniff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f79b78" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b2446f76020" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446f76330" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b2446f722a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10;&#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b2446f78b60" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b2446f72020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b2446f6b860" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f6b278" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b2446f6b5e0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b2446f68948" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f686d8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b2446f6ca60" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b2446f6c108" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b2446f70e58" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b2446f5f130" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2446f5f130"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b2446f5f360" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2446f5f360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b2446f95020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2446f5f360"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f96d78" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b2446f94108" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f95e38" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b2446f5fe80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f5fc10" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b2446f92348" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2446f5f360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f94d30" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b2446f920c8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2446f5f360"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b2446f63800" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f63590" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b2446f69b30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f69548" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b2446f698b0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b2446f658a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f65630" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b2446f64e48" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f64860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b2446f64bc8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b2446f61728" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446f614b8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2446fac5f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2446fac5f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b2446face80" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short>&#10; Return current time.</short>
          <long>&#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b2446fade30" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fadbc0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AntennaDiversityConfig" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <short>&#10; antenna user mode manager&#10;&#10; </short>
        <long>&#10; antenna user mode manager&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rxModeSet" ref="0x2b2446fdf7d0" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rxmode" ref="0x2b2446fdf560" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rxModeGet" ref="0x2b2446fdd020" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeSet" ref="0x2b2446fdd998" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txmode" ref="0x2b2446fdd728" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeGet" ref="0x2b2446fdc0d8" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b2446fc2c78" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b2446fc4d50" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b2446fc4460" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b2446fc2518" loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b2446fc1840" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b2446fbdc10" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fbd9a0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b2446fc5770" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b2446fbd290" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fbd020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b2446fbb610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fbb020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b2446fbb390" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b2446fbc938" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fbc348" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b2446fbc6b8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b2446fb9980" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b24468a9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fb9710" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b2446fb8600" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b24468a9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fb8020" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b2446fb8380" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b24468a9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b2446fb9020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fbbcc0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b2446fb8d08" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b24468a9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b2446fcb5c0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b2446fcec98" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b2446fcb020" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446fcb330" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b2446fc7988" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fc73c0" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b2446fc76d0" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b2446fc8b70" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b2446fca338" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fca0c8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b2446fc82a0" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fcac68" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b2446fc8020" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b2447019600" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b2446ff0468" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446ff01f8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b244701c2d0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244701c060" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b244701b9b8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up,&#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244701b748" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b244701fc30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244701f9c0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b24470205b8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447020348" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b244701e900" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244701e348" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b244701e680" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b244701f2a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447020cc0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b244701f020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b244701b020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244701c9a0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b244701ccd0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b2447025020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b2447025918" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b2447023980" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447023710" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b24470243d0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447024160" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b2447024e58" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447024be8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b2447036b60" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b2447038ce0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b244688f020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b2447038a70" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b244688f020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b2447036458" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b2447038290" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b2447035328" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b244688f020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b2447000e78" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447000c08" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b2446ff9328" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b2446ffab50" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2446ffa570" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b2446ffa8d0" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b2446ffe8d8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446ffe668" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b2446ffd3b0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446ffd140" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b2446ffb2a0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified&#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2446ffdc30" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b2446ffb020" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b2446fff178" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b2446fffe80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446fff908" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b2446fffc00" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b2446ffbd90" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446ffbb20" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses. It also&#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b2447045520" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470452b0" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b244700cd30" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244700cac0" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b2447016ba8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used,&#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447016608" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b2447016928" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b2447014b78" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447014908" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b24470402a0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447041ba0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b2447040020" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b2447014108" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447015e38" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b2447046af8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447046568" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b2447046878" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b2447011478" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a&#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2447012e30" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b24470111f8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b2447041468" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470411f8" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b2447015630" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470153c0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b2447010d68" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447010af8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b24470102e0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2447011cc8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b2447010060" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b244703d7b0" loc="178:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b24468a9410"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b2447040ca0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447040a30" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b244703d020" loc="173:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b24468a9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b2447042a20" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447042470" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b24470427a0" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b2447012630" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470123c0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b244700c348" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244700dd60" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b244700c0c8" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b24470442a0" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447045c78" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b2447044020" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b244703c290" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244703c020" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b244700eab0" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244700e538" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b244700e830" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b244701ae58" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used,&#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244701abe8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b244703e750" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244703e4e0" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b2447044ca8" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447044a38" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b244700d5b8" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244700d348" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b2446ff5b28" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446ff5578" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b2446ff58a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b2446ff4328" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b2446ff73b0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446ff7140" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b2446ff7dd0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446ff7b60" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b24470294e8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447029278" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b2446ff8a30" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2446ff87c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b2447029cd0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b2447028760" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470284f0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b244702f468" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244702f1f8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b2447033968" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470336f8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b2447030020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b2447032710" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447032160" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b2447032490" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b244703ae60" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure&#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244703abf0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b2447030a38" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470307c8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b2447003020" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if addressRecognition enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b2447004558" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAddressRecognition' TRUE to enable address recognition&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b24470042e8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b2447007488" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckEnabled" ref="0x2b2447002328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if ack enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b244700bc48" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244700b9d8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAck" ref="0x2b2447003980" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAck' TRUE to enable acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAck" ref="0x2b2447003710" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b2447005020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447007cd0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b2447005a48" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470057d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.&#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b24470ab0d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the&#10; run event is currently not executing, then it  is called immediately&#10; and this command returns only after the completion of the run event.&#10; If the run event is currently executed, then this method returns at&#10; once, and makes sure that the run event is called once more when&#10; it is finished. If this method is called from a task, then by the&#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b24470ab978" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b24470aa328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from&#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b24470ae990" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b24470eb2c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
              <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470eb020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b24470f2da0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a task. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470f2b30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b24470ee7a8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470ee538" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b24470efcd0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24470ef728" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b24470efa50" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b2447117db8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b2447116c48" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b2447116558" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b24471175d8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b2447117020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b244689e760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b2447117358" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b24471aabb0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b24471a74d0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side&#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b24471a2988" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b24471a21d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b24471a41d8" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b24471a49c8" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10;&#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b24471db620" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b24471a1940"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b24471db3b0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b24471a1940"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b24471dd7a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b24471dc290" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b24471a1940"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b24471dc020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b24471a1940"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b24471dcb30" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue.&#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b24471a1940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b2447332e70" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
              <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447332bc8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b2447332290" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447332020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b2447320020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b2447321c58" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b2447320790" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b2447329c80" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b2447329a10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b24473215b8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b2447321348" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b2447326030" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b2447327d90" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b24473254a8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1].&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b2447325238" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b2447326ac0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b2447326850" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b2447323020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b2447325ca8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b24473275c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not&#10; found in the table, then the value NEIGHBORHOOD is  returned,&#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b2447327358" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b244689eb18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b24473b9760" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time. The radio cannot send or receive in this state&#10; and releases all access to shared resources (e.g. SPI bus).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b24473b6790" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages&#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b24473b5290" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b24473b5020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b24473b59f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b24473b6020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b24473b41d8" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2445dd6160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b24473b8e10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a tasklet. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b24473b8ba0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b24473b01d8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept&#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept&#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b24473b1998" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b24473b1728" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <short>&#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long>&#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b2447420d88" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2445dd6bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b24474205f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2445dd76a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b2447441518" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b2447441518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b244743e020" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b2447441518"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b2447441d50" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b2447441518"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b2447466e50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447466be0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b244746add8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b244746ab68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b2447467ab0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447467520" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b2447467830" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b24463cc818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b24474664e8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b2447466278" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b24468d7780"/>
                <typename><typedef-ref name="message_t" ref="0x2b24468d6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b24474fd020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b24474fec68" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b24474fe4e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b24475bd450" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b24475bdc28" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCalibration" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <short>&#10; FTN/CF/DCU Calibration Interface, recommanded to do it every 5 min or less&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="run" ref="0x2b24475d2790" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <interfacedef-ref qname="RadioCalibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2446400e08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b244763c6e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b244763c6e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b244763c910" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b244763c910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b24476393c8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b244763c910"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b2447639158" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b244763c910"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
