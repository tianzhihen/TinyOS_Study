<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:TestUsbStationAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b4ad100d020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b4ad09fc598"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b4ad09fc598"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b4ad0f99640"/></to>
    </wire>
    <wire loc="17:TestUsbStationAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4ad100f920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4ad101e678"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4ad101e678"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4ad1061e18"/></to>
    </wire>
    <wire loc="21:TestUsbStationAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b4ad10149a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4ad15c5c48"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b4ad15c5c48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b4ad0b4e510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:TestUsbStationAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b4ad103dbc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad15f9e18"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad15f9e18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad160e440"/></to>
    </wire>
    <wire loc="29:TestUsbStationAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad102cb08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad1decc20"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad1decc20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad2517400"/></to>
    </wire>
    <wire loc="30:TestUsbStationAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad10464b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1dea578"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1dea578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad2516bd8"/></to>
    </wire>
    <wire loc="34:TestUsbStationAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad10404b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad1ddf490"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad1ddf490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad15f3020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:TestUsbStationAppC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1038c30"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad163b020"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad163b020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1643348"/></to>
    </wire>
    <wire loc="37:TestUsbStationAppC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1059998"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad15eaaf0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad15eaaf0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1603968"/></to>
    </wire>
    <wire loc="38:TestUsbStationAppC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad10550d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad164a020"/></to>
    </wire>
    <wire loc="231:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad164a020"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad1a2abd0"/></to>
    </wire>
    <wire loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad1c43788"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad1a8bb40"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad2346430"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad1966238"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad2379de8"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad2261020"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad15cd888"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b4ad14157f0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b4ad144a688"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad13d4d18"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad1196b88"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad15b92d0"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad1f89d08"/></to>
    </wire>
    <wire loc="16:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad0bae378"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b4ad0f99c78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b4ad0824020"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b4ad0824020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b4ad09b22a8"/></to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b4ad0f986a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b4ad1c44c10"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b4ad0f986a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad09fe888"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4ad09fe888"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad0a07e78"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad0f98d70"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4ad0a04790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4ad0a448b8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b4ad09f7538"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad1094150"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b4ad0a00bd8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x2b4ad09f7538"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x2b4ad0a00578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad0a0a560"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4ad0a0a560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad0a35ab0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="Max706Init" scoped="" ref="0x2b4ad0a11340"/></from>
      <to><interface-ref name="Max706Init" scoped="" ref="0x2b4ad0a5f5c0"/></to>
    </wire>
    <wire loc="21:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="Max706Init" scoped="" ref="0x2b4ad0a5f5c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad0a6a518"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="At45dbInit" scoped="" ref="0x2b4ad0a119b0"/></from>
      <to><interface-ref name="At45dbOff" scoped="" ref="0x2b4ad0e09820"/></to>
    </wire>
    <wire loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <from><interface-ref name="At45dbOff" scoped="" ref="0x2b4ad0e09820"/></from>
      <to><interface-ref name="At45dbOff" scoped="" ref="0x2b4ad0e28728"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b4ad0a0ac48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad24c1810"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b4ad0a0ac48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad247f810"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b4ad0a0ac48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad21c8cc0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b4ad0a0ac48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad1edd508"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b4ad0a0ac48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad1f05848"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b4ad0a34858"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x2b4ad0a0ac48"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x2b4ad0a33020"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x2b4ad0a09320"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x2b4ad0a33688"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x2b4ad0a19b80"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b4ad0a341f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad0a44288"/></to>
    </wire>
    <wire loc="18:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b4ad0a6ab20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b4ad09fc598"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="WDI" scoped="" ref="0x2b4ad0b37e38"/></from>
      <to><interface-ref name="WDI" scoped="" ref="0x2b4ad0a76a10"/></to>
    </wire>
    <wire loc="15:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
      <from><interface-ref name="WDI" scoped="" ref="0x2b4ad0a76a10"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x2b4ad0a96af0"/></to>
    </wire>
    <wire loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="TimerWD" scoped="" ref="0x2b4ad0b3add8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4ad0e10128"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b4ad0e10128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b4ad0b4e510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="Reflush" scoped="" ref="0x2b4ad0b2f1d8"/></from>
      <to><interface-ref name="Reflush" scoped="" ref="0x2b4ad0a5fc50"/></to>
    </wire>
    <wire loc="161:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b4ad0a96af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aead28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b4ad0aa07e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af8020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b4ad0a92348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ae17c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b4ad0a9b348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af0a88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b4ad0aa6020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aead28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b4ad0aae4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af8020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b4ad0a80020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aa9b28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b4ad0a95c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aead28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b4ad0a7e348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b4ad0a874d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad3370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b4ad0a8f7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ae17c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b4ad0a987e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af0a88"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b4ad0a727e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aa9b28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b4ad0a7b7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad9020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b4ad0a84968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad3370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b4ad0a8cc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ae17c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b4ad0aa24d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aead28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b4ad0ab01a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af8020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b4ad0a9d020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af0a88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b4ad0a6fc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aa9b28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b4ad0a78e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad9020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b4ad0a9fe00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af8020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b4ad0a891a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad3370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b4ad0a914d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ae17c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b4ad0a9a4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af0a88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b4ad0aa51a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aead28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b4ad0a7f1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aa9b28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b4ad0a7d4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad9020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b4ad0a86658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad3370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b4ad0a8e968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ae17c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b4ad0a97968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af0a88"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b4ad0a71968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aa9b28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b4ad0a7a968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad9020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b4ad0a83af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad3370"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b4ad0aa1658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aead28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b4ad0a94e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ae17c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b4ad0a9c1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af0a88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b4ad0aa8e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aead28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b4ad0aaf348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af8020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b4ad0a6ee00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aa9b28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b4ad0a8a020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad9020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b4ad0a88348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad3370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b4ad0a90658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ae17c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b4ad0a99658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af0a88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b4ad0aa4348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aead28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b4ad0a66578"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aa9b28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b4ad0a7c658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad9020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b4ad0a857e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad3370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b4ad0a8daf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ae17c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b4ad0ab1020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af8020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b4ad0a8be00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0af0a88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b4ad0a81c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad3370"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b4ad0a70af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0aa9b28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b4ad0a79c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad9020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <from><interface-ref name="wd_task" scoped="" ref="0x2b4ad0b45360"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b4ad0b4e510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4ad0dfdaf8"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad0dc1648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad0d911a8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad0d911a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad1e8cc10"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b4ad0df8e80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4ad0da7290"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b4ad1e851e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad1e92d30"/></to>
    </wire>
    <wire loc="17:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad1e92d30"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x2b4ad0b5e988"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad1e87020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0d38610"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad0d38610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0d30270"/></to>
    </wire>
    <wire loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="ClientAlarm" scoped="" ref="0x2b4ad0b5e988"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad0baecc0"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b4ad0ba8020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad0d23e10"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad0d23e10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad1eb9d68"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad1eb9d68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad1f04020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad1eb5dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0c2ba88"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad0c2ba88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0c45ad0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad1eb0ab0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b4ad0c24be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad1f000a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad1eb5dd8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad1efcc28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad1eb0ab0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2b4ad0c370c8"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2b4ad0c49e00"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4ad0c24be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b4ad0c3e700"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4ad0c24be0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b4ad0c53988"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4ad0c24be0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b4ad0c4eb88"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad0c5c148"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad09d91e0"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad09d72b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad1c31168"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad09d72b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad14d5c68"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad09d72b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad14474d8"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad09d72b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad0eab558"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad09d72b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad0c5ea50"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad0ce62b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0cfddd8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad0cfddd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad1eddcb0"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad0d2a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0c2ba88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad1f42e70"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad0d2a020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b4ad0d50450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0ce62b0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b4ad0dbe5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b4ad0e13020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4ad0e1b5e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4ad0e34978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <from><interface-ref name="SSN" scoped="" ref="0x2b4ad0e28dc0"/></from>
      <to><interface-ref name="SSN" scoped="" ref="0x2b4ad0f6c220"/></to>
    </wire>
    <wire loc="24:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="SSN" scoped="" ref="0x2b4ad0f6c220"/></from>
      <to><interface-ref name="PortG2" scoped="" ref="0x2b4ad0ab1020"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b4ad0e4bc20"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b4ad0e9a020"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b4ad0e36020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b4ad0e9b020"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4ad0e26918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad0e9c978"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b4ad0e30668"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b4ad0e9b5b8"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4ad0e34978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4ad0f4f748"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4ad0f4f748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4ad1f85100"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad0f74550"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad0e9a860"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b4ad0e990a0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b4ad0eb78b0"/></to>
    </wire>
    <wire loc="83:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b4ad0eb78b0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b4ad0eaf738"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad0e97d20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad09d91e0"/></to>
    </wire>
    <wire loc="288:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b4ad0e96368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b4ad0ec84d8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad09d91e0"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b4ad0eabc08"/></from>
      <to><interface-ref name="PortG2" scoped="" ref="0x2b4ad0ab1020"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="OSS" scoped="" ref="0x2b4ad0eaade0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b4ad0a7e348"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b4ad0ea7020"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b4ad0a7d4d0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b4ad0ea6190"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b4ad0a7c658"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b4ad0ec9338"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b4ad0a7b7e0"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b4ad0f4e510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b4ad1f85df8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4ad0f4ec50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4ad1f84578"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad1f84e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad0f74550"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b4ad1f835d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b4ad1f88328"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b4ad1f82100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="WPN" scoped="" ref="0x2b4ad0f66ca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b4ad0f7bc68"/></to>
    </wire>
    <wire loc="30:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b4ad0f67b30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b4ad0f7d958"/></to>
    </wire>
    <wire loc="28:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b4ad0f6a688"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b4ad0a7b7e0"/></to>
    </wire>
    <wire loc="26:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b4ad0f6b4f0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b4ad0a7d4d0"/></to>
    </wire>
    <wire loc="29:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2b4ad0f689a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b4ad0f635d8"/></to>
    </wire>
    <wire loc="27:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b4ad0f69810"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b4ad0a7c658"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad09b11c8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b4ad09ae668"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b4ad0928cb8"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4ad1094150"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad1061850"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b4ad1088540"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b4ad105fcd8"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b4ad105fcd8"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b4ad0a79c78"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b4ad10877d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b4ad1097e70"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b4ad1097e70"/></from>
      <to><interface-ref name="PortG5" scoped="" ref="0x2b4ad0aae4d0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b4ad1086958"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b4ad1095020"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b4ad1095020"/></from>
      <to><interface-ref name="PortG0" scoped="" ref="0x2b4ad0aa07e0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b4ad15b80f8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b4ad1562748"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad15b3790"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad1569c58"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad1569c58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad201c958"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad15b1430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad1568888"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad1568888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad1117d78"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b4ad15d6e58"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b4ad15b6898"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad1117d78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad119cb98"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1567578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad11169b0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad11169b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad116d618"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b4ad1566bd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad11141a0"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad11141a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad119b888"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad201b5d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad10b7a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad201a268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad11169b0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad10b7a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad1123e40"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad1122bd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad11185b0"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad11185b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad113a310"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1121888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad11169b0"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad111f020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad1117d78"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b4ad111fc58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b4ad111e470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad111b5f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad11932e8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad11932e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad136cb88"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Protection" scoped="" ref="0x2b4ad113e4c8"/></from>
      <to><interface-ref name="Protection" scoped="" ref="0x2b4ad13b56b8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad11177a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad116d060"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="RestartControl" scoped="" ref="0x2b4ad1113998"/></from>
      <to><interface-ref name="RestartControl" scoped="" ref="0x2b4ad138b430"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4ad1196b88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad136c5f0"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4ad118e298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4ad1112020"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4ad11995b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4ad1112020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad138c968"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad11932e8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad119a308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad1191ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1199020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad1191270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b4ad1187168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b4ad13ac080"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b4ad13ac080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b4ad13a53d8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b4ad11a9338"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b4ad13ac848"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b4ad13ac848"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b4ad13da498"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b4ad1188928"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b4ad1394448"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad136cb88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad206d0e0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad1191ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad136be78"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad136be78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad2062e18"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4ad136c5f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad206eac8"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad1191270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad136b7e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad136b7e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad2062740"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2b4ad118c130"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b4ad13a2a80"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2b4ad13a2a80"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b4ad2061a28"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2b4ad139d740"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2b4ad11863c8"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b4ad13a11c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b4ad1188928"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4ad13a1a88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4ad118e298"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b4ad139e0a0"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2b4ad1187168"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b4ad139e7c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b4ad11a9338"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b4ad20601c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b4ad13a11c0"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4ad20693f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4ad13a1a88"/></to>
    </wire>
    <wire loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4ad205d430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4ad13a1a88"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b4ad20bdb98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4ad13a1a88"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b4ad2060a88"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b4ad206c578"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b4ad205e3f0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b4ad206db10"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2b4ad205ee60"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b4ad206ce20"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b4ad206b450"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b4ad2054c80"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2b4ad20679c8"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2b4ad139d740"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b4ad2068a50"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2b4ad139e0a0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b4ad2053bf8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b4ad139e7c0"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x2b4ad205cb58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4ad20b8ac0"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b4ad20b8ac0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b4ad0b4e510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b4ad20667c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b4ad20658c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b4ad2066020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b4ad2065020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b4ad2057ae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b4ad20562e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b4ad13a6b60"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b4ad13a5b90"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b4ad13a5b90"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b4ad1404a88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b4ad13da498"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b4ad14032a8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2b4ad13aa4a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b4ad13d94a0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2b4ad13d94a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2b4ad14022a8"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b4ad13a53d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b4ad1404328"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad13d9d68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad1496758"/></to>
    </wire>
    <wire loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad1496758"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad148e3c0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad13fe020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad13d9d68"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b4ad14028c0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b4ad141b060"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b4ad141b060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b4ad144c020"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b4ad14000a0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b4ad141b8b8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b4ad141b8b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b4ad144c8b8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b4ad1400840"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b4ad141a158"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b4ad141a158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b4ad144b158"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b4ad1417860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b4ad1448020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b4ad14196b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b4ad144ad98"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b4ad1417020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b4ad14496b8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4ad1447b48"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4ad0a04790"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad1446950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad09d91e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad1446950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad09d91e0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad148e3c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad157c270"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad15456d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad14c5060"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad14c5060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4ad14b2020"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b4ad1579450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad15485a8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad15485a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad21c74f8"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b4ad14bb4f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b4ad14d9268"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4ad14c02c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b4ad14aec48"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4ad14c02c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b4ad14a9df0"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4ad14c02c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b4ad14de118"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad14d4390"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad09d91e0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad21c46d0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad15456d0"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2b4ad15ac4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b4ad15cc020"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b4ad15d6e58"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b4ad15c2020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b4ad09fc598"/></to>
    </wire>
    <wire loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b4ad15c2700"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad111b5f8"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad160e440"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad162bb78"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b4ad15eda80"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b4ad1608c88"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b4ad1608c88"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b4ad1624498"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad15f01c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad16077d8"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad16077d8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad1623020"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad15f07a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad16055f8"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad16055f8"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b4ad1662550"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad15f6db8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad160b3c8"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad160b3c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad1628c30"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b4ad15f3b68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b4ad16081c8"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b4ad16081c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b4ad1625968"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad15e11d8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad1602318"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad1602318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad164c6a8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad15f3020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad16094e8"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad16094e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad1627dc0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad15e7020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad1636848"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad1636848"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad167aa48"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1603968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1656cf8"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b4ad15e8020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b4ad1602db0"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b4ad1602db0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b4ad164b2d0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad15ee448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad16042c0"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad16042c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1622e50"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad1613e48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad162f758"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad162f758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad16769d8"/></to>
    </wire>
    <wire loc="219:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad162bb78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad19bd988"/></to>
    </wire>
    <wire loc="332:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1643348"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1c0f020"/></to>
    </wire>
    <wire loc="278:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad16769d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad1b9e920"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b4ad1624498"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b4ad1817020"/></to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad1623020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad18176f8"/></to>
    </wire>
    <wire loc="137:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b4ad1662550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad181a578"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad1628c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad1819388"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b4ad1625968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b4ad18187e0"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad163fbd8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad1646020"/></to>
    </wire>
    <wire loc="330:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad1646020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad1c11b10"/></to>
    </wire>
    <wire loc="220:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad164c6a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad19f6060"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad1627dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad18180c8"/></to>
    </wire>
    <wire loc="277:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad167aa48"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad1b9a598"/></to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad1632430"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad167f630"/></to>
    </wire>
    <wire loc="334:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad167f630"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad1c05220"/></to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad1641828"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad164ab78"/></to>
    </wire>
    <wire loc="331:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad164ab78"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad1c09860"/></to>
    </wire>
    <wire loc="255:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1656cf8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1af0578"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad16063c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad1623be0"/></to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad1623be0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad1817e10"/></to>
    </wire>
    <wire loc="198:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b4ad164b2d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b4ad19c8268"/></to>
    </wire>
    <wire loc="136:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1622e50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad181b020"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad1601bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad164a020"/></to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad1634808"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad167bdb8"/></to>
    </wire>
    <wire loc="333:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad167bdb8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad1c079d0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad1605020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad1622860"/></to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad1622860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad1815550"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad19bd988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b4ad19f6b30"/></to>
    </wire>
    <wire loc="317:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad167b0d0"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad1c23b60"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1c0f020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1c3b0c8"/></to>
    </wire>
    <wire loc="171:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b4ad165f218"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad1857268"/></to>
    </wire>
    <wire loc="159:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b4ad1658020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4ad1843d88"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4ad1843d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4ad225e390"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b4ad1817020"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b4ad2248858"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad18176f8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad2246020"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad1819388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad224acf8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b4ad18187e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b4ad2248180"/></to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4ad164dc80"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4ad1952900"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4ad1952900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4ad22dc020"/></to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b4ad1656060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad1859340"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad1c11b10"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad1c3fcf0"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad19f6060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad234f458"/></to>
    </wire>
    <wire loc="316:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1683838"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1bfaa50"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad181a578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad224a020"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad18180c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad2249a28"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad1b9a598"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad24092d0"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad1c05220"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1d51188"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad1c09860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad1c35860"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b4ad165ad80"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b4ad1858020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad1817e10"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad2246738"/></to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b4ad19c8268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b4ad19c3470"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad1a2abd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad23459c8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad181b020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad224c888"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad1b9e920"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad240c688"/></to>
    </wire>
    <wire loc="170:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4ad1660af0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4ad1858c18"/></to>
    </wire>
    <wire loc="105:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad1c079d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad1c329d0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad1815550"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad2246e50"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad16b2858"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad1955980"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad1955980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad22df020"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad16ab640"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad17662e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4ad16af8b8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad1b9a598"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2b4ad16e8810"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1c167b0"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1c167b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1c40530"/></to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad17652d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad1c044b8"/></to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad1c044b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad1d52160"/></to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad1813a08"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b4ad1689b48"/></to>
    </wire>
    <wire loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad1814a50"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b4ad180cb40"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1813430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b4ad18b0908"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1815ba8"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b4ad18af020"/></to>
    </wire>
    <wire loc="148:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4ad1846020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4ad1843d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad180b618"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b4ad18b0020"/></to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad1857860"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad1955980"/></to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad189d740"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b4ad1896230"/></to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad189c060"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4ad1896b18"/></to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1853900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4ad18b1120"/></to>
    </wire>
    <wire loc="180:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad18afe00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad1989470"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad1989470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad2306d98"/></to>
    </wire>
    <wire loc="181:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad18ae740"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad19c9bd0"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad19c9bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4ad19c55b8"/></to>
    </wire>
    <wire loc="182:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad18aed18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1951b98"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1951b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad22db268"/></to>
    </wire>
    <wire loc="187:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1950ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad19c8e20"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad19c8e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4ad19c5b90"/></to>
    </wire>
    <wire loc="192:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad19d6580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b4ad169d5f0"/></to>
    </wire>
    <wire loc="193:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad1988510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad19c92e8"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad19c92e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4ad19c6c38"/></to>
    </wire>
    <wire loc="199:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad19c4a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1af0578"/></to>
    </wire>
    <wire loc="200:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad19c6c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad19f8430"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad19f8430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4ad19f55c8"/></to>
    </wire>
    <wire loc="201:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad19c55b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad19f8d18"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad19f8d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4ad19f4020"/></to>
    </wire>
    <wire loc="202:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad19c5b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad19f72e8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad19f72e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4ad19f45f8"/></to>
    </wire>
    <wire loc="215:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b4ad19f6b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad1a2b270"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad1a2b270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4ad2348870"/></to>
    </wire>
    <wire loc="216:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad19f55c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad1a2bce0"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad1a2bce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad2346a08"/></to>
    </wire>
    <wire loc="217:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad19f4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad1a2a638"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4ad1a2a638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4ad2345430"/></to>
    </wire>
    <wire loc="218:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad19f45f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1b96020"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1b96020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad2406cd8"/></to>
    </wire>
    <wire loc="228:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1a793f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1a7a020"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1a7a020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4ad2382b58"/></to>
    </wire>
    <wire loc="229:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1a79c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1989d18"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1989d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad23796c8"/></to>
    </wire>
    <wire loc="230:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b4ad1a285d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b4ad1bc2b10"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b4ad1bc2b10"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b4ad1bbb020"/></to>
    </wire>
    <wire loc="235:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1988df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1a7a8c8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1a7a8c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad2380578"/></to>
    </wire>
    <wire loc="244:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad1accce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b4ad1696950"/></to>
    </wire>
    <wire loc="245:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad1acd0c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1ac5558"/></to>
    </wire>
    <wire loc="246:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1acd9a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1ae8020"/></to>
    </wire>
    <wire loc="247:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad1acc0f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad17662e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad1ad3190"/></from>
      <to><interface-ref name="SoftAckAlarm" scoped="" ref="0x2b4ad1c008e0"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftAckAlarm" scoped="" ref="0x2b4ad1c008e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad1d9f230"/></to>
    </wire>
    <wire loc="253:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b4ad1aedd60"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4ad1b8d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="254:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad1aee060"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad1ad4180"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="256:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad1aeec58"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b4ad16a2468"/></to>
    </wire>
    <wire loc="257:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad1aef020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1b09a10"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1b09a10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4ad1b02020"/></to>
    </wire>
    <wire loc="258:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1aef908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1b083f0"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1b083f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1b02908"/></to>
    </wire>
    <wire loc="259:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2b4ad1aec7f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1c167b0"/></to>
    </wire>
    <wire loc="260:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1ae87e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1ac5e00"/></to>
    </wire>
    <wire loc="261:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad1ada020"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad1955980"/></to>
    </wire>
    <wire loc="262:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b4ad1ad7020"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b4ad16673a8"/></to>
    </wire>
    <wire loc="267:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad1b005b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b4ad16877b0"/></to>
    </wire>
    <wire loc="268:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad1b02020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1bc1888"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1bc1888"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4ad1bba020"/></to>
    </wire>
    <wire loc="269:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1b02908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1bc0268"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1bc0268"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1bba908"/></to>
    </wire>
    <wire loc="270:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4ad1b010a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1c16020"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1c16020"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1c41d70"/></to>
    </wire>
    <wire loc="275:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad1b95020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad1c05220"/></to>
    </wire>
    <wire loc="276:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1b94020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1b8da70"/></to>
    </wire>
    <wire loc="279:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4ad1b94da0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4ad1b8d020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="284:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1bc6928"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1c22700"/></to>
    </wire>
    <wire loc="294:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad1bb85b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b4ad16877b0"/></to>
    </wire>
    <wire loc="295:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad1bba020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1bb03f0"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1bb03f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4ad1baa8c8"/></to>
    </wire>
    <wire loc="296:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1bba908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1c17748"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1c17748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1c415f8"/></to>
    </wire>
    <wire loc="297:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2b4ad1bbb020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b4ad1bb15f8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b4ad1bb15f8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b4ad1baba08"/></to>
    </wire>
    <wire loc="306:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2b4ad1baba08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b4ad1c18020"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b4ad1c18020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b4ad1c43d88"/></to>
    </wire>
    <wire loc="307:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad1baa8c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1c18dc0"/></to>
    </wire>
    <wire loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1c18dc0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1c42bc0"/></to>
    </wire>
    <wire loc="312:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntCtrlFlag" scoped="" ref="0x2b4ad1c21618"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4ad1b8d020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="313:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad1c4ee28"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad1c23b60"/></to>
    </wire>
    <wire loc="314:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1c51c80"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1bfaa50"/></to>
    </wire>
    <wire loc="315:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2b4ad1c4d9c8"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2b4ad1bfa1e8"/></to>
    </wire>
    <wire loc="318:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad16e2998"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad1c23b60"/></to>
    </wire>
    <wire loc="319:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad16e5698"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1bfaa50"/></to>
    </wire>
    <wire loc="323:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1c200c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1c167b0"/></to>
    </wire>
    <wire loc="328:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad1c56a48"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b4ad16673a8"/></to>
    </wire>
    <wire loc="329:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4ad1c54020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad1b9a598"/></to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b4ad1c4c3c0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4ad1b8d020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="337:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b4ad1c4b020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4ad1b8d020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="338:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b4ad1c4bb78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4ad1b8d020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad17662e8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad21e61a0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad21e5020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad17652d0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b4ad21e1020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b4ad1773c30"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4ad2242268"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4ad17eb4d8"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad22454d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1815ba8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad22442a8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4ad1814a50"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad2244b90"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1813430"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad22432a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4ad1813a08"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b4ad1841af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b4ad225d0c8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4ad1840268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4ad225d808"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad225c100"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad1840ae8"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b4ad225c880"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b4ad22615f8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b4ad225b470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4ad22da060"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4ad17eb4d8"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad22daad0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1950ab0"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b4ad2375020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b4ad196cd70"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b4ad196cd70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b4ad1966850"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4ad2375bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4ad2372140"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4ad2372140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4ad1965b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad2378458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4ad1988510"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad2378d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1988df8"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b4ad23764a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4ad19d6580"/></to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b4ad19c2100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad19c4a10"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b4ad2344450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b4ad1a285d8"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b4ad2343268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b4ad1773c30"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4ad2343c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1a793f0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad2342578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1a79c98"/></to>
    </wire>
    <wire loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b4ad23414f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b4ad2341c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b4ad2342d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4ad2380d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4ad1acd0c0"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad237d2a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4ad1accce8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4ad237f670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1acd9a8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad237fd90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad1acc0f0"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b4ad237e9d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b4ad1a8e690"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b4ad1a8e690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b4ad1a87568"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2b4ad237dd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b4ad1a8c668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b4ad1a88528"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4ad1a92940"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4ad1a8bb40"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad1ad4180"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad242e5a0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad242d4d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad1ad3190"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b4ad2429528"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b4ad1773c30"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad1b0c338"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b4ad1b06658"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1b08b10"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4ad1b010a0"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b4ad1b0abe0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b4ad1b03020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1b07268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1b01800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4ad1b06020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4ad1b005b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b4ad1b0a648"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b4ad1b05a08"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b4ad1b0cd68"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b4ad1b05120"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4ad24018a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1b94020"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad24046d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad1b95020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b4ad24038c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1b59380"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1b59380"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1b56ab0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4ad2405b30"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4ad1b94da0"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad1ba3c80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0d38610"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad1bc3268"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b4ad1bbd4d0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1bc0988"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4ad1bb90a0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1bbe0e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1bb9800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4ad1bbee60"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4ad1bb85b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b4ad1bc2578"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b4ad1bbc908"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b4ad1bc3c98"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b4ad1bbc020"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4ad1bb3d08"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b4ad1bad020"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1baf3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4ad1ba9a08"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1bafb10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1ba82a8"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4ad1bae8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4ad1ba7060"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1bb0c98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1ba92a8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b4ad1bb1060"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b4ad1bab430"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b4ad1bb2780"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b4ad1bada90"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad1d52160"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad2497ab0"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b4ad1c0c3b0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b4ad1c38458"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad1d9f230"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad24d8ab0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1d51188"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1d4f560"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCalibration" scoped="" ref="0x2b4ad1c112b8"/></from>
      <to><interface-ref name="RadioCalibration" scoped="" ref="0x2b4ad1c3f498"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4ad1c82588"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4ad1c56a48"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b4ad1c81858"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b4ad1c4c3c0"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b4ad1c804f0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b4ad1c4b020"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b4ad1c7f0e0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b4ad1c4bb78"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4ad1c7fe50"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4ad1c54020"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1c307f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1d51188"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2b4ad1c2ca30"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2b4ad0c370c8"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b4ad1c762b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b4ad1773c30"/></to>
    </wire>
    <wire loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b4ad1c2d498"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b4ad1d59b28"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad1c76d68"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad09d91e0"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="ExtAmpControl" scoped="" ref="0x2b4ad1c75498"/></from>
      <to><interface-ref name="ExtAmpControl" scoped="" ref="0x2b4ad1c4a860"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1c7bb00"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1c51c80"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad1c78c78"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad1c4ee28"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2b4ad1c77840"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2b4ad1c4d9c8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4ad1d4e758"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0ce62b0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad2497ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad247e020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad2493b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0c2ba88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad248e610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b4ad0c24be0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad247a0a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad2493b18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad2476c28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad248e610"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4ad24d8ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4ad24bf020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad24d5b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4ad0c2ba88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad24d0610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b4ad0c24be0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad24bb0a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad24d5b18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad24b7c28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad24d0610"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad2517400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad250b790"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad1deb888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad2516020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad2516020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad15f07a0"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad2516bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad15ee448"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b4ad1de9bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b4ad25142a8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b4ad25142a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad15eaaf0"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad250a450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad1e03020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad2508060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad15ee448"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4ad1e03020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4ad1e018a8"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4ad1dff6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4ad15f6db8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1dfe3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad15ee448"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad1dfda10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad15f07a0"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b4ad1dfc780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b4ad1dfb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4ad1ddfa28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4ad15f07a0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1dde700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4ad15ee448"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc" safe="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Max706C" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
        <short>&#10; External Watchdog Chip Max706reua&#10;&#10; </short>
        <long>&#10; External Watchdog Chip Max706reua&#10;&#10; @author tango&#10; @date 2013/10/15&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMax706PinsC" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
        <short>&#10; pins connection of Max706 (External WatchDog Component)&#10;&#10; </short>
        <long>&#10; pins connection of Max706 (External WatchDog Component)&#10;&#10; @author tango&#10; @date 2013/12/02&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Max706P" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
        <short>&#10; External Watchdog Chip Max706reua&#10;&#10; </short>
        <long>&#10; External Watchdog Chip Max706reua&#10;&#10; @author tango&#10; @date 2013/10/15&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Max706C.TimerWDC" loc="44(Max706C.TimerWDC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C" loc="7(TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="MuxAlarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.VirtualizeAlarmC" loc="46(MuxAlarm62khz32C_.VirtualizeAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C" loc="37(MuxAlarm62khz32C_.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0bb4d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bb14a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC" loc="35(Counter62khz32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0cfc020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0cfc748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbOffC" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
        <short>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; </short>
        <long>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; @author tango&#10; @date 2013/06/26&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbOffP" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
        <short>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; </short>
        <long>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; @author tango&#10; @date 2013/06/26&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.SpiMaster" loc="89(Atm128SpiC.SpiMaster):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128SpiP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbPinsC" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
        <short>&#10; HPL implemenation for AT45DB custom pins&#10; </short>
        <long>&#10; HPL implemenation for AT45DB custom pins&#10; @author tango&#10; @date 2013/06/27&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbPinsC.NP0" loc="16(HplAt45dbPinsC.NP0):/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbPinsC.NP1" loc="16(HplAt45dbPinsC.NP1):/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbPinsC.NP2" loc="16(HplAt45dbPinsC.NP2):/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestUsbStationC" loc="11:TestUsbStationC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC" loc="51(SerialDispatcherC.SerialDispatcherCommonC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherCommonC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP" loc="62(SerialDispatcherC.SerialDispatcherCommonC.SerialP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <instance number="0">
        <component-ref qname="SerialP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC" loc="47(SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HdlcTranslateC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC" loc="44(SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SR" loc="1(SerialActiveMessageC.SR):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <instance number="0">
        <component-ref qname="SerialRestartControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SerialProtectorC" loc="11(SerialActiveMessageC.SerialProtectorC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DummySerialProtectorC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short>&#10; Private component of the Atmega1281 serial port HPL.</short>
        <long>&#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC" loc="35(CounterMcu32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b4ad0a25960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP" loc="35(CounterMcu32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0cfc020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0cfc748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b4ad0a25960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b4ad0a25960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.Timer0" loc="44(TestUsbStationAppC.Timer0):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.RadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a&#10; specific random number generator, it should wire to that component&#10; directly.&#10;&#10; @author  Barbara Hohlt&#10; @author  Phil Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative&#10;  linear congruential generator,&#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1)&#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAddressRecognitionLayerC" loc="11(RFA1RadioC.SoftwareAddressRecognitionLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SoftwareAddressRecognitionLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC" loc="37(RFA1RadioC.SoftwareAckRadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ADLayerC" loc="10(RFA1RadioC.ADLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AntennaDiversityLayerC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0bb4d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bb14a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC" loc="37(RFA1DriverLayerC.SoftAckAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="2">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0bb4d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bb14a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC" loc="47(TestUsbStationAppC.AMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC.SenderC" loc="47(TestUsbStationAppC.AMSenderC.SenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.AMReceiverC" loc="43(TestUsbStationAppC.AMReceiverC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x2b4ad0aab7f0" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b4ad0aabb58" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b4ad0abb020" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeAlarmC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc" abstract="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0b70cd8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0b70cd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4ad0b6d460" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b6d460"/></type-var>
        </typedef>
        <constant name="num_alarms" ref="0x2b4ad0b6d770" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0bb4d40" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0bb4d40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4ad0bb14a0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bb14a0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b4ad0bb17c0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2b4ad0bb1af8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0bdbcd8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0bdbcd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4ad0bd7460" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bd7460"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b4ad0bd7780" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2b4ad0bd7ab8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0cfc020" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0cfc020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4ad0cfc748" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0cfc748"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b4ad0cfca68" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0cf3be8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0cf3be8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4ad0cf0348" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0cf0348"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b4ad0cf0668" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b4ad0d32ab8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b4ad0d32ab8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b4ad0d2f278" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b4ad0d2f278"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b4ad0d2f640" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b4ad0d2f640"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b4ad0d2fdb8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b4ad0d2fdb8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b4ad0d2d1a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b4ad0d2d930" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b4ad0d2d930"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b4ad0d36b48" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b4ad0d36b48"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b4ad0d49348" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b4ad0d49348"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b4ad0d49710" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b4ad0d49710"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b4ad0d66020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b4ad0d66020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b4ad0d663c8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0d8a370" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0d8a370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0db8020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0db8020"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b4ad0db8330" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc" abstract="" safe="">
      <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b4ad0f0f060" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b4ad0f09d98" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b4ad10b5020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b4ad10a98c0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b4ad10dfdb0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherCommonC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc" abstract="">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2b4ad11b45c0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
          <component-ref qname="SerialDispatcherCommonC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2b4ad129ac88" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
          <component-ref qname="SerialDispatcherP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialRestartControlP" loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummySerialProtectorC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b4ad1564e78" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b4ad1564e78"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b4ad1561200" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAddressRecognitionLayerC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad1b54450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad1b54450"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AntennaDiversityLayerC" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="rxmode_dfl" ref="0x2b4ad1bf9020" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
        <constant name="txmode_dfl" ref="0x2b4ad1bf9378" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b4ad1db3a78" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b4ad1dab5b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b4ad1de4398" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b4ad09fbaa8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad09fbaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad09fbdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b4ad09fc598" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b4ad09fc598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4ad09fc8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad09fe888" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad09fe888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad09febd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b4ad0a04790" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4ad0a04790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b4ad0a04ae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b4ad0a04c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b4ad0a04df0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b4ad09f7020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b4ad09f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b4ad09f7538" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2b4ad09f7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad09f7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad0a07e78" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad0a07e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a001f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Max706Init" ref="0x2b4ad0a11340" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Max706Init" scoped="" ref="0x2b4ad0a11340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a11690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbInit" ref="0x2b4ad0a119b0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbInit" scoped="" ref="0x2b4ad0a119b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a11d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b4ad0a00bd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2b4ad0a00bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a11020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x2b4ad0a00578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x2b4ad0a00578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a008c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad0a0a560" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad0a0a560"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a0a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2b4ad0a09320" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2b4ad0a09320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a09670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2b4ad0a0ac48" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2b4ad0a0ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a09020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x2b4ad0a33688" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x2b4ad0a33688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a339d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad0a35ab0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad0a35ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a35e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2b4ad0a33020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2b4ad0a33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a33370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b4ad0a341f0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b4ad0a341f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a34540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2b4ad0a34858" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2b4ad0a34858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a34ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad0a44288" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad0a44288"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a445d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b4ad0a448b8" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4ad0a448b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b4ad0a44c08"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b4ad0a44d90"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b4ad0a43020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b4ad0a431a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b4ad0a43330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x2b4ad0a19b80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x2b4ad0a19b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a5e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Reflush" ref="0x2b4ad0a5fc50" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <component-ref qname="Max706C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reflush" scoped="" ref="0x2b4ad0a5fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4ad0a6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Max706Init" ref="0x2b4ad0a5f5c0" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <component-ref qname="Max706C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Max706Init" scoped="" ref="0x2b4ad0a5f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a5f910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WDI" ref="0x2b4ad0a76a10" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
      <component-ref qname="HplMax706PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDI" scoped="" ref="0x2b4ad0a76a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a76d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a68020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a681a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a68330"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a684b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a68640"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a687c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a68950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b4ad0aa07e0" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b4ad0aa07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a9f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a9f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a9f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a9f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a9f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a9f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a9f950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a9fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b4ad0a92348" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b4ad0a92348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a92698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a92820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a929a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a92b30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a92cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a92e40"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a91020"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b4ad0a9b348" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b4ad0a9b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a9b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a9b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a9b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a9bb30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a9bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a9be40"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a9a020"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b4ad0aa6020" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b4ad0aa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0aa6370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aa64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aa6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aa6808"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aa6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aa6b18"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aa6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aa6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b4ad0aae4d0" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b4ad0aae4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0aae820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aae9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aaeb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aaecb8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aaee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aad020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aad1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aad330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b4ad0a80020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b4ad0a80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a80370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a804f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a80680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a80808"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a80990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a80b18"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a80ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a80e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b4ad0a95c78" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b4ad0a95c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0aa8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aa81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aa8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aa84b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aa8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aa87c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aa8950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aa8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b4ad0a7e348" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b4ad0a7e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a7e698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a7e820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a7e9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a7eb30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a7ecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a7ee40"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a7d020"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a7d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b4ad0a874d0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b4ad0a874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a87820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a879a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a87b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a87cb8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a87e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a86020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a861a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a86330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b4ad0a8f7e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b4ad0a8f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a8fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a8fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a8fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a8e020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a8e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a8e330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a8e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a8e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b4ad0a987e0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b4ad0a987e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a98b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a98cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a98e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a97020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a97330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a974b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a97640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b4ad0a727e0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b4ad0a727e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a72b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a72cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a72e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a71020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a71330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a714b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a71640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b4ad0a7b7e0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b4ad0a7b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a7bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a7bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a7be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a7a020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a7a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a7a330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a7a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a7a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b4ad0a84968" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b4ad0a84968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a84cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a84e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a83020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a831a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a83330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a834b8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a83640"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b4ad0a8cc78" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b4ad0a8cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a8b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a8b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a8b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a8b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a8b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a8b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a8b950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a8bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b4ad0aa24d0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b4ad0aa24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0aa2820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aa29a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aa2b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aa2cb8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aa2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aa1020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aa11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aa1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b4ad0ab01a0" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b4ad0ab01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ab04f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ab0678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ab0800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ab0988"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ab0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ab0c98"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ab0e20"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b4ad0a9d020" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b4ad0a9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a9d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a9d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a9d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a9d808"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a9d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a9db18"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a9dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a9de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b4ad0a6fc78" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b4ad0a6fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a6e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a6e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a6e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a6e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a6e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a6e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a6e950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a6ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b4ad0a78e00" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b4ad0a78e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a771a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a77330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a774b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a77640"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a777c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a77950"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a77ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a77c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b4ad0a9fe00" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b4ad0a9fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ab21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ab2330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ab24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ab2640"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ab27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ab2950"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ab2ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ab2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b4ad0a891a0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b4ad0a891a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a894f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a89678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a89800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a89988"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a89b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a89c98"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a89e20"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b4ad0a914d0" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b4ad0a914d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a91820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a919a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a91b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a91cb8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a91e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a90020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a901a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a90330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b4ad0a9a4d0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b4ad0a9a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a9a820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a9a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a9ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a9acb8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a9ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a99020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a991a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a99330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b4ad0aa51a0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b4ad0aa51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0aa54f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aa5678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aa5800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aa5988"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aa5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aa5c98"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aa5e20"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aa4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b4ad0a7f1a0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b4ad0a7f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a7f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a7f678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a7f800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a7f988"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a7fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a7fc98"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a7fe20"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b4ad0a7d4d0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b4ad0a7d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a7d820"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a7d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a7db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a7dcb8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a7de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a7c020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a7c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a7c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b4ad0a86658" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b4ad0a86658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a869a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a86b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a86cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a86e40"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a85020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a851a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a85330"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b4ad0a8e968" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b4ad0a8e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a8ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a8ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a8d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a8d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a8d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a8d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a8d640"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a8d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b4ad0a97968" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b4ad0a97968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a97cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a97e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a96020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a961a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a96330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a964b8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a96640"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b4ad0a71968" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b4ad0a71968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a71cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a71e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a70020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a701a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a70330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a704b8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a70640"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a707c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b4ad0a7a968" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b4ad0a7a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a7adb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a79020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a791a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a79330"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a794b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a79640"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a797c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a79950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b4ad0a83af0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b4ad0a83af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a83e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a81020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a811a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a81330"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a814b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a81640"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a817c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a81950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b4ad0aa1658" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b4ad0aa1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0aa19a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aa1b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aa1cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aa1e40"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aa0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aa01a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aa0330"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aa04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b4ad0a94e00" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b4ad0a94e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a933e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a93570"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a936f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a93880"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a93a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a93b90"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a93d18"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b4ad0a9c1a0" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b4ad0a9c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a9c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a9c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a9c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a9c988"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a9cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a9cc98"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a9ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b4ad0aa8e00" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b4ad0aa8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0aa71a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aa7330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aa74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aa7640"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aa77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aa7950"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aa7ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aa7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b4ad0aaf348" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b4ad0aaf348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0aaf698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aaf820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aaf9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aafb30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aafcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aafe40"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aae020"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b4ad0a6ee00" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b4ad0a6ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a6d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a6d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a6d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a6d640"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a6d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a6d950"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a6dad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a6dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b4ad0a8a020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b4ad0a8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a8a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a8a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a8a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a8a808"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a8a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a8ab18"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a8aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a8ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b4ad0a96af0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b4ad0a96af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a96e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a95020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a951a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a95330"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a954b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a95640"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a957c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a95950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b4ad0a88348" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b4ad0a88348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a88698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a88820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a889a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a88b30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a88cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a88e40"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a87020"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b4ad0a90658" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b4ad0a90658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a909a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a90b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a90cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a90e40"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a8f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a8f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a8f330"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a8f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b4ad0a99658" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b4ad0a99658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a999a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a99b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a99cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a99e40"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a981a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a98330"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b4ad0aa4348" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b4ad0aa4348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0aa4698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aa4820"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aa49a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aa4b30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aa4cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aa4e40"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aa2020"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aa21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b4ad0a66578" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b4ad0a66578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a668c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a66a50"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a66bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a66d60"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a72020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a721a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a72330"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b4ad0a7c658" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b4ad0a7c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a7c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a7cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a7ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a7ce40"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a7b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a7b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a7b330"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a7b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b4ad0a857e0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b4ad0a857e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a85b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a85cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a85e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a84020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a84330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a844b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a84640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b4ad0a8daf0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b4ad0a8daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a8de40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a8c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a8c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a8c330"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a8c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a8c640"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a8c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a8c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b4ad0ab1020" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b4ad0ab1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ab1370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ab14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ab1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ab1808"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ab1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ab1b18"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ab1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ab1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b4ad0a8be00" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b4ad0a8be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a9e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a9e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a9e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a9e640"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a9e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a9e950"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a9ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a9ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b4ad0a81c78" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b4ad0a81c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a94020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a941a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a94330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a944b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a94640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a947c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a94950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a94ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b4ad0a70af0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b4ad0a70af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a70e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a6f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a6f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a6f330"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a6f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a6f640"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a6f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a6f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b4ad0a79c78" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b4ad0a79c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0a78020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0a781a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0a78330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0a784b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0a78640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0a787c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0a78950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0a78ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b4ad0aa9b28" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b4ad0aa9b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0acc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0acc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0acc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0acc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0acc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0acc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0acc950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0accad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b4ad0ad9020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ad9390"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ad9518"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ad96a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ad9828"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ad99b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ad9b38"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ad9cc0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ad9e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b4ad0ad3370" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b4ad0ad3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ad36e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ad3868"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ad39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ad3b78"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ad3d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ad1020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ad11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ad1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b4ad0ae17c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b4ad0ae17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ae1b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ae1cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ae1e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ae0020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ae01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ae0330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ae04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ae0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b4ad0af0a88" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b4ad0af0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0af0df8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0aef020"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0aef1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0aef330"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0aef4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0aef640"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0aef7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0aef950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b4ad0aead28" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b4ad0aead28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ae80d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ae8260"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ae83e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ae8570"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ae86f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ae8880"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ae8a08"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ae8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b4ad0af8020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b4ad0af8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0af8390"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0af8518"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0af86a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0af8828"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0af89b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0af8b38"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0af8cc0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0af8e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wd_task" ref="0x2b4ad0b45360" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wd_task" scoped="" ref="0x2b4ad0b45360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad0b456b0"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad0b45838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b4ad0a6ab20" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b4ad0a6ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4ad0a6ae70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Reflush" ref="0x2b4ad0b2f1d8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reflush" scoped="" ref="0x2b4ad0b2f1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4ad0b2f528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad0a6a518" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad0a6a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0a6a868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerWD" ref="0x2b4ad0b3add8" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerWD" scoped="" ref="0x2b4ad0b3add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0b370c0"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0b2d798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad0b384d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad0b38088"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad0b37960"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad0b37510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0b2dbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad0b2e9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad0b38aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad0b2ee80"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0b2d348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WDI" ref="0x2b4ad0b37e38" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDI" scoped="" ref="0x2b4ad0b37e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0b361c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0b36348"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0b364d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0b36658"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0b367e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0b36968"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0b36af0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0b36c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4ad0e10128" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Max706C.TimerWDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4ad0e10128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0e0c5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0e0fa48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad0e0d8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad0e0d470"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad0e0b020"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad0e0ca40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0e0d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad0e10c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad0e0c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad0e0f158"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0e0f5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b4ad0b4e510" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b4ad0b4e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0b4a768"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0b4de18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad0b4bb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad0b4b728"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad0b49088"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad0b4abb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0b4b2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad0b4d088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad0b4a198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad0b4d528"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0b4d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad0d911a8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad0d911a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0d8e918"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0d90980"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad0d8e310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0d90e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad0d8eda0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0d90020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0d904f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad1e92d30" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad1e92d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1e8e410"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1e904a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1e90db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1e90930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1e8e898"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1e91ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1e90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientAlarm" ref="0x2b4ad0b5e988" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <component-ref qname="MuxAlarm62khz32C_"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClientAlarm" scoped="" ref="0x2b4ad0b5e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0b72020"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0b730c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad0b739d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0b73548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad0b724a8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0b5d730"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0b5dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad0baecc0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad0baecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0baa470"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0bac4c8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad0bace18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0bac970"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad0baa918"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0badac0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0bac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad0bae378" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad0bae378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0bae6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b4ad0ba8020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b4ad0ba8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0ba6690"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0ba76f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad0ba6088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0ba7b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad0ba6b18"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0ba8d70"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0ba7270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad0d23e10" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad0d23e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0d20628"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0d21580"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad0d20020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0d21a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad0d20ab0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0d22be8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0d210f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b4ad1eb0ab0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad1eb0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad1eadb80"/>
        <function-ref name="test" scoped="" ref="0x2b4ad1eae4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1eae020"/>
        <function-ref name="force" scoped="" ref="0x2b4ad1eab510"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1eaf658"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad1eae930"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad1eab088"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad1ead6f8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1eafae0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1eaedb8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1ead270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad1eb9d68" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad1eb9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1eb5410"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1eb74a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1eb7db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1eb7930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1eb5898"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1eb8af8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1eb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad1eb5dd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad1eb5dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad1eb00f8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad1eb3980"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1eb4a18"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad1eb3e08"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad1eb05d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1eb34f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad1eb2c20"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1eb3020"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1eb2310"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1eb2798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b4ad1efcc28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad1efcc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad1ef8db8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad1efa658"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1efa1d0"/>
        <function-ref name="force" scoped="" ref="0x2b4ad1ef7778"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1efb820"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad1efaae0"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad1ef72f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad1ef8930"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1efbca8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1ef8020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1ef84a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad1f04020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad1f04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1f02690"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1f036f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1f02088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1f03b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1f02b18"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1f04d70"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1f03270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad1f05848" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad1f05848"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1f05b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad1f000a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad1f000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad1efc270"/>
        <function-ref name="test" scoped="" ref="0x2b4ad1effa58"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1f00c20"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad1efe020"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad1efc748"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1eff5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad1efedb8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1eff0f8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1efe4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1efe930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad0c2ba88" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad0c2ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad0c25b80"/>
        <function-ref name="test" scoped="" ref="0x2b4ad0c264a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0c28658"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad0c26930"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad0c24088"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad0c26020"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad0c256f8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0c28ae0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0c26db8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0c25270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2b4ad0c370c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b4ad0c370c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad0c46270"/>
        <function-ref name="test" scoped="" ref="0x2b4ad0c36a58"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0c365d0"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0c37c48"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad0c2e020"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad0c46748"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad0c2edb8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0c360f8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0c2e4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0c2e930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b4ad0c24be0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b4ad0c24be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad0c3adb8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad0c215b8"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0c21130"/>
        <function-ref name="force" scoped="" ref="0x2b4ad0c38778"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0c227a0"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad0c21a40"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad0c382f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad0c3a930"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0c22c28"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0c3a020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0c3a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b4ad0c3e700" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b4ad0c3e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad0c54930"/>
        <function-ref name="test" scoped="" ref="0x2b4ad0c3c1f8"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0c3dd08"/>
        <function-ref name="force" scoped="" ref="0x2b4ad0c53310"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0c3d3a8"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad0c3c680"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad0c54e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad0c544a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0c3d830"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0c3cb08"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0c54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b4ad0c5ea50" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad0c5ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b4ad0c5eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b4ad0c53988" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b4ad0c53988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad0c4fb80"/>
        <function-ref name="test" scoped="" ref="0x2b4ad0c514a8"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0c51020"/>
        <function-ref name="force" scoped="" ref="0x2b4ad0c4e510"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0c52560"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad0c51930"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad0c4e088"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad0c4f6f8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0c529e8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0c51db8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0c4f270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad0c45ad0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad0c45ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad0c40b80"/>
        <function-ref name="test" scoped="" ref="0x2b4ad0c414a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0c42690"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad0c41930"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad0c3e088"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad0c41020"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad0c406f8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0c42b18"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0c41db8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0c40270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b4ad0c5c148" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad0c5c148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b4ad0c5c498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2b4ad0c49e00" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b4ad0c49e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad0c5e0f8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad0c60980"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0c604f8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0c48a18"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad0c60e08"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad0c5e5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad0c5fc20"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0c60020"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0c5f310"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0c5f798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b4ad0c4eb88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b4ad0c4eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad0c4adb8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad0c4b580"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0c4b0f8"/>
        <function-ref name="force" scoped="" ref="0x2b4ad0c49778"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0c4d760"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad0c4ba08"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad0c492f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad0c4a930"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0c4dbe8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0c4a020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0c4a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b4ad09d72b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad09d72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b4ad09d7600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad09db468" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad09db468"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b4ad082de78"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b4ad082de78"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad09db7b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad09db940"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad09dbac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad09dbc50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad09dbdd8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad09da020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad09da1a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad09da7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad09da330"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad09da4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad09da640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b4ad0928cb8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b4ad0928cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b4ad09cc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b4ad09d91e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad09d91e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b4ad09d9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad0ce62b0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad0ce62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad0ce2088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad0ce2998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad0ce2510"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad0ce2e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad0cfddd8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad0cfddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad0d0ebe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad0d0d548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad0d0d0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad0d0d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad0d2a020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad0d2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad0d260f8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad0d289e8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0d2aba0"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad0d28e70"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad0d265d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad0d28560"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad0d27c30"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0d28088"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0d27320"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0d277a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad1edd508" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad1edd508"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1edd858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad1eddcb0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad1eddcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1f43a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad1f424a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad1f42020"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1f42930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad1f42e70" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad1f42e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad1f3d0f8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad1f3f980"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1f41a18"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad1f3fe08"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad1f3d5d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1f3f4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad1f3ec20"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1f3f020"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1f3e310"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1f3e798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad0d38610" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad0d38610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad0d353a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad0d35cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad0d35830"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad0d33190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b4ad0d50450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b4ad0d50450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad0d4f1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad0d4fae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad0d4f658"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad0d4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad0d30270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad0d30270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad0d51020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad0d51930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad0d514a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad0d51db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad1e8cc10" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad1e8cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1e89410"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1e8a4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1e8adb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1e8a930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1e89898"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1e8b9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1e8a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b4ad1e851e8" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b4ad1e851e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1e83918"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1e84980"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1e83310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1e84e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1e83da0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1e84020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1e844f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4ad1e87020" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad1e87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1e87d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad1e866b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad1e86230"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1e86b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b4ad0dbe5e8" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b4ad0dbe5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad0dbe938"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad0dbeac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b4ad0dc1648" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad0dc1648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0dbfcc0"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0dc0d50"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad0dbf6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0dbf230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad0dbe190"/>
        <function-ref name="start" scoped="" ref="0x2b4ad0dc03f0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0dc08c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4ad0da7290" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4ad0da7290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0dc35f0"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0dc5ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad0dc48c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad0dc4470"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad0dc1020"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad0dc3a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0dc4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad0da7dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad0dc3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad0dc52b8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0dc5758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b4ad0e13020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b4ad0e13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad0e13370"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad0e134f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b4ad0df8e80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b4ad0df8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0e14238"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0e17910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad0e16648"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad0e161f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad0e14ad8"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad0e14688"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0e17d60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad0e189f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad0e16c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad0e17020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0e174c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4ad0dfdaf8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4ad0dfdaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad0df8020"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad0dfb530"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad0df92d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad0dfbe10"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad0df8900"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad0df8490"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad0dfb9a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad0dfc6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad0df98c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad0dfcbb0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0dfb0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbOff" ref="0x2b4ad0e09820" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <component-ref qname="At45dbOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbOff" scoped="" ref="0x2b4ad0e09820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0e09b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x2b4ad0e39270" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x2b4ad0e39270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b4ad0e395c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b4ad0e221b0" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b4ad0e221b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0e22500"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0e22688"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0e22810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0e22998"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0e22b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0e22ca8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0e22e30"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0e21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbOff" ref="0x2b4ad0e28728" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbOff" scoped="" ref="0x2b4ad0e28728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0e28a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b4ad0e23020" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b4ad0e23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0e23370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0e234f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0e23680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0e23808"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0e23990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0e23b18"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0e23ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0e23e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SSN" ref="0x2b4ad0e28dc0" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SSN" scoped="" ref="0x2b4ad0e28dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0e25170"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0e252f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0e25480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0e25608"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0e25790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0e25918"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0e25aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0e25c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b4ad0e1b5e8" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4ad0e1b5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4ad0e1b938"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4ad0e1bac0"/>
        <function-ref name="request" scoped="" ref="0x2b4ad0e1bc48"/>
        <function-ref name="granted" scoped="" ref="0x2b4ad0e1bdd0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4ad0e1f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b4ad0e21378" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b4ad0e21378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0e216c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0e21850"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0e219d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0e21b60"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0e21ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0e21e70"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0e20020"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0e201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b4ad0e4bc20" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b4ad0e4bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad0e34020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad0e341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b4ad0e36020" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b4ad0e36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b4ad0e36370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad0e26918" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad0e26918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0e26c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b4ad0e30668" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b4ad0e30668"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b4ad0e309b8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b4ad0e30b40"/>
        <function-ref name="splitRead" scoped="" ref="0x2b4ad0e30cc8"/>
        <function-ref name="write" scoped="" ref="0x2b4ad0e30e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4ad0e34978" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4ad0e34978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4ad0e34cc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4ad0e34e50"/>
        <function-ref name="request" scoped="" ref="0x2b4ad0e2f020"/>
        <function-ref name="granted" scoped="" ref="0x2b4ad0e2f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4ad0e2f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b4ad0e9a860" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad0e9a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4ad0e9abd0"/>
        <function-ref name="configure" scoped="" ref="0x2b4ad0e9ad58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b4ad0e96368" loc="288:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b4ad0e96368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad0e966b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad0e96840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b4ad0e9a020" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b4ad0e9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad0e9a370"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad0e9a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b4ad0e9b020" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b4ad0e9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b4ad0e9b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad0e9c978" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad0e9c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0e9ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b4ad0e990a0" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b4ad0e990a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b4ad0e993f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b4ad0e97950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b4ad0e99700"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b4ad0e97ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b4ad0e99a10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b4ad0e99b98"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b4ad0e99d20"/>
        <function-ref name="read" scoped="" ref="0x2b4ad0e98020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b4ad0e981a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b4ad0e98330"/>
        <function-ref name="setClock" scoped="" ref="0x2b4ad0e984b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b4ad0e98640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b4ad0e987c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b4ad0e98a50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b4ad0e98bd8"/>
        <function-ref name="write" scoped="" ref="0x2b4ad0e98d60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b4ad0e97020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b4ad0e971a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b4ad0e97330"/>
        <function-ref name="getClock" scoped="" ref="0x2b4ad0e974b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b4ad0e97640"/>
        <function-ref name="sleep" scoped="" ref="0x2b4ad0e99578"/>
        <function-ref name="dataReady" scoped="" ref="0x2b4ad0e99888"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b4ad0e977c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b4ad0e9b5b8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b4ad0e9b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b4ad0e9b908"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b4ad0e9ba90"/>
        <function-ref name="splitRead" scoped="" ref="0x2b4ad0e9bc18"/>
        <function-ref name="write" scoped="" ref="0x2b4ad0e9bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b4ad0e97d20" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad0e97d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b4ad0e960a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b4ad0eb78b0" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b4ad0eb78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b4ad0eb7c00"/>
        <function-ref name="sleep" scoped="" ref="0x2b4ad0eb21a8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b4ad0eb4020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b4ad0eb2330"/>
        <function-ref name="initMaster" scoped="" ref="0x2b4ad0eb4330"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b4ad0eb44b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b4ad0eb4640"/>
        <function-ref name="read" scoped="" ref="0x2b4ad0eb47c8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b4ad0eb4950"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b4ad0eb4ad8"/>
        <function-ref name="setClock" scoped="" ref="0x2b4ad0eb4c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b4ad0eb4de8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b4ad0eb3020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b4ad0eb32a8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b4ad0eb3430"/>
        <function-ref name="write" scoped="" ref="0x2b4ad0eb35b8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b4ad0eb3740"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b4ad0eb38c8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b4ad0eb3a50"/>
        <function-ref name="getClock" scoped="" ref="0x2b4ad0eb3bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b4ad0eb3d60"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b4ad0eb7d88"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b4ad0eb41a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b4ad0eb2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b4ad0ea6190" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b4ad0ea6190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ea64e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ea6668"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ea67f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ea6978"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ea6b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ea6c88"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ea6e10"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ec9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b4ad0ec9338" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b4ad0ec9338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ec9688"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ec9810"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ec9998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ec9b20"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ec9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ec9e30"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ec8020"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ec81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b4ad0eab558" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad0eab558"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b4ad0eab8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b4ad0ea7020" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b4ad0ea7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ea7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ea74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ea7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ea7808"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ea7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ea7b18"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ea7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ea7e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b4ad0eabc08" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b4ad0eabc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0eaa020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0eaa1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0eaa330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0eaa4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0eaa640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0eaa7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0eaa950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0eaaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b4ad0ea9cc8" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b4ad0ea9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad0eab0a0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad0eab228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b4ad0ec84d8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b4ad0ec84d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b4ad0ec8828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b4ad0eaf738" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b4ad0eaf738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b4ad0eafa88"/>
        <function-ref name="sleep" scoped="" ref="0x2b4ad0eac020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b4ad0eafd98"/>
        <function-ref name="dataReady" scoped="" ref="0x2b4ad0eac1a8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b4ad0eae1a8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b4ad0eae330"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b4ad0eae4b8"/>
        <function-ref name="read" scoped="" ref="0x2b4ad0eae640"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b4ad0eae7c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b4ad0eae950"/>
        <function-ref name="setClock" scoped="" ref="0x2b4ad0eaead8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b4ad0eaec60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b4ad0eaede8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b4ad0ead120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b4ad0ead2a8"/>
        <function-ref name="write" scoped="" ref="0x2b4ad0ead430"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b4ad0ead5b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b4ad0ead740"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b4ad0ead8c8"/>
        <function-ref name="getClock" scoped="" ref="0x2b4ad0eada50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b4ad0eadbd8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b4ad0eafc10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b4ad0eae020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b4ad0eadd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OSS" ref="0x2b4ad0eaade0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OSS" scoped="" ref="0x2b4ad0eaade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0ea8170"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0ea82f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0ea8480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0ea8608"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0ea8790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0ea8918"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0ea8aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0ea8c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4ad0f4e510" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4ad0f4e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4ad0f4e880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4ad0f4ea08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b4ad0f74550" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad0f74550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4ad0f748c0"/>
        <function-ref name="configure" scoped="" ref="0x2b4ad0f74a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4ad0f4f748" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4ad0f4f748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4ad0f4fab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4ad0f4fc40"/>
        <function-ref name="request" scoped="" ref="0x2b4ad0f4fdc8"/>
        <function-ref name="granted" scoped="" ref="0x2b4ad0f4e020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4ad0f4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4ad0f4ec50" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4ad0f4ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4ad0f74020"/>
        <function-ref name="userId" scoped="" ref="0x2b4ad0f741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad1f89d08" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad1f89d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1f880a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b4ad1f88328" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b4ad1f88328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4ad1f88678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4ad1f88800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4ad1f88988"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4ad1f88b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4ad1f85df8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4ad1f85df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4ad1f841a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4ad1f84330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b4ad1f84e18" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad1f84e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4ad1f831c0"/>
        <function-ref name="configure" scoped="" ref="0x2b4ad1f83348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b4ad1f835d0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b4ad1f835d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4ad1f83920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4ad1f83aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4ad1f83c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4ad1f83db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4ad1f85100" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4ad1f85100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4ad1f85470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4ad1f855f8"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1f85780"/>
        <function-ref name="granted" scoped="" ref="0x2b4ad1f85908"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4ad1f85a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4ad1f84578" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4ad1f84578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4ad1f848c8"/>
        <function-ref name="userId" scoped="" ref="0x2b4ad1f84a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b4ad1f82100" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b4ad1f82100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad1f82450"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad1f825d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WPN" ref="0x2b4ad0f66ca8" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WPN" scoped="" ref="0x2b4ad0f66ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f65020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f651a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f65330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f654b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f65640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f657c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f65950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f65ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b4ad0f67b30" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b4ad0f67b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f67e80"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f66030"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f661b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f66340"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f664c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f66650"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f667d8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f66960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MISO" ref="0x2b4ad0f6a688" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b4ad0f6a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f6a9d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f6ab60"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f6ace8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f6ae70"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f69020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f691a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f69330"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f694b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x2b4ad0f6b4f0" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b4ad0f6b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f6b840"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f6b9c8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f6bb50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f6bcd8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f6be60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f6a020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f6a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f6a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SSN" ref="0x2b4ad0f6c220" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SSN" scoped="" ref="0x2b4ad0f6c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f6c570"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f6c6f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f6c880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f6ca08"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f6cb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f6cd18"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f6b020"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f6b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x2b4ad0f689a0" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2b4ad0f689a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f68cf0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f68e78"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f67030"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f671b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f67340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f674c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f67650"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f677d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MOSI" ref="0x2b4ad0f69810" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b4ad0f69810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f69b60"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f69ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f69e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f68020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f68330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f684b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f68640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b4ad0f635d8" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <component-ref qname="HplAt45dbPinsC.NP0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x2b4ad0f635d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f63928"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f63ab0"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f63c38"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f63dc0"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f62020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f621a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f62330"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b4ad0f7d958" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <component-ref qname="HplAt45dbPinsC.NP1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x2b4ad0f7d958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f7dca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f7de30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f7c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f7c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f7c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f7c640"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f7c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b4ad0f7bc68" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <component-ref qname="HplAt45dbPinsC.NP2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x2b4ad0f7bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad0f7a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad0f7a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad0f7a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad0f7a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad0f7a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad0f7a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad0f7a950"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad0f7aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b4ad0f98d70" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad0f98d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0f970f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b4ad0f99640" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b4ad0f99640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4ad0f99990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b4ad0f986a8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b4ad0f986a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0f989f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b4ad0f99c78" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b4ad0f99c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0f98020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b4ad0f981a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b4ad0f98330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b4ad0846b18" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad0846b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad0846e68"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad08f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b4ad0824020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b4ad0824020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad0824370"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b4ad08244f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b4ad0824680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b4ad09b11c8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b4ad09b11c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad09b1518"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad09b16a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b4ad09ae668" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b4ad09ae668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b4ad09ae9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b4ad09b22a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b4ad09b22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad09b25f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b4ad09b2780"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b4ad09b2908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b4ad10149a0" loc="13:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b4ad10149a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1010bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad10122e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad1010020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad1012b88"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad100f4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad100f088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1012738"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad1013528"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad10105f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad10139c8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1013e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b4ad103dbc0" loc="22:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2b4ad103dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1045020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad10451a8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1045330"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad10454b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b4ad100d020" loc="15:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b4ad100d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4ad100d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b4ad102cb08" loc="17:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad102cb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad102ce58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad100c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad100c1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad100c330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad100c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x2b4ad1038c30" loc="24:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1038c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1037270"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1044d30"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1044820"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1037780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b4ad10404b0" loc="20:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad10404b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1040800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad100f920" loc="14:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad100f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad100fc70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad100fdf8"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad100e020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad100e1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad100e330"/>
        <function-ref name="get" scoped="" ref="0x2b4ad100e4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad100e640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad100ec60"/>
        <function-ref name="set" scoped="" ref="0x2b4ad100e7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad100e950"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad100ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b4ad1059998" loc="26:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1059998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad1059ce8"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad1059e70"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad1035020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioChannel" ref="0x2b4ad10550d0" loc="27:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad10550d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b4ad1055420"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad10555a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1055730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b4ad10464b8" loc="18:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad10464b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad1046808"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1046990"/>
        <function-ref name="address" scoped="" ref="0x2b4ad1046b18"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1046ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad1046e28"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad102d020"/>
        <function-ref name="type" scoped="" ref="0x2b4ad102d1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad102d330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad102d4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad102d640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad102d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b4ad101e678" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad101e678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad101e9c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad101eb50"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad101ecd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad101ee60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad1062020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad10621a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad1062330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad1062950"/>
        <function-ref name="set" scoped="" ref="0x2b4ad10624b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad1062640"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad10627c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b4ad1088540" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b4ad1088540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad1088890"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad1088a18"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad1088ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad1088d28"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1087020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad10871a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1087330"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad10874b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad1061850" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad1061850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1061ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b4ad10877d0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b4ad10877d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad1087b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad1087ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad1087e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad1086020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad10861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad1086330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad10864b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad1086640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b4ad1061e18" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad1061e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad10891a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad1089330"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad10894b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad1089640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad10897c8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1089950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad1089ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad10881a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1089c60"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad1089de8"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad1088020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b4ad1086958" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b4ad1086958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad1086ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad1086e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad1085020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad10851a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1085330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad10854b8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1085640"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad10857c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b4ad105fcd8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b4ad105fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad10970a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad1097228"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad10973b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad1097538"/>
        <function-ref name="get" scoped="" ref="0x2b4ad10976c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad1097848"/>
        <function-ref name="set" scoped="" ref="0x2b4ad10979d0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad1097b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b4ad1097e70" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b4ad1097e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad10961e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad1096370"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad10964f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad1096680"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1096808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad1096990"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1096b18"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad1096ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b4ad1094150" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad1094150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad10944a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b4ad1095020" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b4ad1095020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4ad1095370"/>
        <function-ref name="isInput" scoped="" ref="0x2b4ad10954f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4ad1095680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4ad1095808"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1095990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4ad1095b18"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1095ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4ad1095e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad1569c58" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad1569c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1568020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad15681a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1568330"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad15684b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1568640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad1568888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad1568888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1568bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1568d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1567020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad15671a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1567330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad1567578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1567578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad15678c8"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1567a50"/>
        <function-ref name="address" scoped="" ref="0x2b4ad1567bd8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1567d60"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad1566020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad15661a8"/>
        <function-ref name="type" scoped="" ref="0x2b4ad1566330"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad15664b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1566640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad15667c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad1566950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b4ad1566bd8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b4ad1566bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad1565020"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad15651a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad1565330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad201c958" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad201c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad201cca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad201ce30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad201b020"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad201b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad201b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b4ad201b5d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad201b5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad201b928"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad201bab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad201bc38"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad201bdc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad201a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b4ad201a268" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad201a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad201a5b8"/>
        <function-ref name="source" scoped="" ref="0x2b4ad201a740"/>
        <function-ref name="address" scoped="" ref="0x2b4ad201a8c8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad201aa50"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad201abd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad201ad60"/>
        <function-ref name="type" scoped="" ref="0x2b4ad2019020"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad20191a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad2019330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad20194b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad2019640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad10b7a70" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad10b7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad10b7dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad10e0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad10e01a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad10e0330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad10e04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b4ad1122bd0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad1122bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1121020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad11211a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1121330"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad11214b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1121640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad1123e40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad1123e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad11221e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1122370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad11224f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1122680"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1122808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b4ad111f020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad111f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad111f370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad111f4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad111f680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad111f808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad111f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b4ad111fc58" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b4ad111fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad111e020"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad111e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b4ad111e470" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b4ad111e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad111e7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad111e948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b4ad1121888" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1121888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad1121bd8"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1121d60"/>
        <function-ref name="address" scoped="" ref="0x2b4ad1120020"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad11201a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad1120330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad11204b8"/>
        <function-ref name="type" scoped="" ref="0x2b4ad1120640"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad11207c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1120950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad1120ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad1120c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad111b5f8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad111b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad111b948"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad111bad0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad111bc58"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad111bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad11185b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad11185b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1118900"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1118a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1118c10"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1118d98"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1117020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad1117d78" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad1117d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad11160f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1116278"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1116400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1116588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1116710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2b4ad113e4c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2b4ad113e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2b4ad113e818"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2b4ad113e9a0"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2b4ad113eb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad11177a0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad11177a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1117af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2b4ad1113998" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2b4ad1113998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2b4ad1113ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad1112020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad1112020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad1112370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad11124f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad1112680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad1112808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad1112990"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1112b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad1112ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad113c330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1112e28"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad113c020"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad113c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b4ad11141a0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad11141a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad11144f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad1114678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad1114800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad11169b0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad11169b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad1116d00"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1115020"/>
        <function-ref name="address" scoped="" ref="0x2b4ad11151a8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1115330"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad11154b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad1115640"/>
        <function-ref name="type" scoped="" ref="0x2b4ad11157c8"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad1115950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1115ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad1115c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad1115de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad119a308" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad119a308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad119a658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad119a7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad119a968"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad119aaf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad119ac78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad1199020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1199020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1199370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad113a310" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad113a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad113a680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad113a808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad113a990"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad113ab18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad113aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad119cb98" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad119cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad119b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad119b1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad119b330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad119b4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad119b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad116d060" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad116d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad116d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad11995b8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad11995b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad1199908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad1199a90"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad1199c18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad1199da0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad1198020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad11981a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad1198330"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad1198950"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1198640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad11984b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad11987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b4ad119b888" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad119b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad119bbd8"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad119bd60"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad119a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad116d618" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad116d618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad116d968"/>
        <function-ref name="source" scoped="" ref="0x2b4ad116daf0"/>
        <function-ref name="address" scoped="" ref="0x2b4ad116dc78"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad116de00"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad119c020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad119c1a8"/>
        <function-ref name="type" scoped="" ref="0x2b4ad119c330"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad119c4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad119c640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad119c7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad119c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad11932e8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad11932e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1193638"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad11937c0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1193948"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1193ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b4ad1187168" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b4ad1187168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad11874b8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1187640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad1191ce8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad1191ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b4ad0ffed88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad11900a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1190228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad11903b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1190538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad11906c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad1196b88" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad1196b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1193020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad1191270" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad1191270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b4ad0ffed88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad11915c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b4ad118c130" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b4ad118c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad118c480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad118e298" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad118e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad118e5e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad118e770"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad118e8f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad118ea80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad118ec08"/>
        <function-ref name="get" scoped="" ref="0x2b4ad118ed90"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad118d020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad118d640"/>
        <function-ref name="set" scoped="" ref="0x2b4ad118d1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad118d330"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad118d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b4ad11a9338" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b4ad11a9338"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad11a9688"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b4ad11a9810"/>
        <function-ref name="receive" scoped="" ref="0x2b4ad11a9998"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b4ad11a9b20"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b4ad11a9ca8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b4ad11a9e30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1186020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2b4ad11863c8" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2b4ad11863c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad1186718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b4ad1188928" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b4ad1188928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b4ad0ffed88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b4ad1188c78"/>
        <function-ref name="offset" scoped="" ref="0x2b4ad1188e00"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b4ad118e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad136cb88" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad136cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad136b020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad136b1a8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad136b330"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad136b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b4ad139e0a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b4ad139e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad139e3f0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad139e578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad136be78" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad136be78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b4ad0ffed88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad13a2218"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad13a23a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad13a2528"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad13a26b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad13a2838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad136c5f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad136c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad136c940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad136b7e0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad136b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b4ad0ffed88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad136bb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b4ad13a2a80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b4ad13a2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad13a2dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad13a1a88" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad13a1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad13a1dd8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad139f020"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad139f1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad139f330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad139f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad139f640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad139f7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad139fde8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad139fad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad139f950"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad139fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b4ad139e7c0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b4ad139e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad139eb10"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b4ad139ec98"/>
        <function-ref name="receive" scoped="" ref="0x2b4ad139ee20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b4ad139d020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b4ad139d1a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b4ad139d330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad139d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2b4ad139d740" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2b4ad139d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad139da90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b4ad13a11c0" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b4ad13a11c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b4ad0ffed88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b4ad13a1530"/>
        <function-ref name="offset" scoped="" ref="0x2b4ad13a16b8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b4ad13a1840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad206d0e0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad206d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad206d430"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad206d5b8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad206d740"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad206d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b4ad20667c0" loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b4ad20667c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad2066b10"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad2066c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b4ad2068a50" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b4ad2068a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad2068da0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad2067020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b4ad20658c0" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b4ad20658c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad2065c10"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad2065d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad206eac8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad206eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad206ee18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b4ad2067268" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b4ad2067268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b4ad20675b8"/>
        <function-ref name="flush" scoped="" ref="0x2b4ad2067740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b4ad206ce20" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b4ad206ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad206b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b4ad2066020" loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b4ad2066020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad2066370"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad20664f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b4ad206b450" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b4ad206b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b4ad206b7a0"/>
        <function-ref name="resetSend" scoped="" ref="0x2b4ad206b928"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b4ad206bab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b4ad206bc38"/>
        <function-ref name="putData" scoped="" ref="0x2b4ad206bdc0"/>
        <function-ref name="putDone" scoped="" ref="0x2b4ad2069020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b4ad20691a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad20693f0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad20693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad2069740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad20698c8"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad2069a50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad2069bd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad2069d60"/>
        <function-ref name="get" scoped="" ref="0x2b4ad2068020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad20681a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad20687c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad20684b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad2068330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad2068640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b4ad2065020" loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b4ad2065020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad2065470"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad20655f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2b4ad20679c8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2b4ad20679c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad2067d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b4ad206db10" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b4ad206db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b4ad206de60"/>
        <function-ref name="nextByte" scoped="" ref="0x2b4ad206c020"/>
        <function-ref name="startSend" scoped="" ref="0x2b4ad206c1a8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b4ad206c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b4ad206c578" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b4ad206c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b4ad206c8c8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b4ad206ca50"/>
        <function-ref name="endPacket" scoped="" ref="0x2b4ad206cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b4ad2057ae0" loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b4ad2057ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad2057e30"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad2056020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad2062e18" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad2062e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b4ad0ffed88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad20611c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad2061348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad20614d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad2061658"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad20617e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b4ad20562e8" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b4ad20562e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad2056638"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad20567c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad2062740" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad2062740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b4ad0ffed88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad2062ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b4ad2061a28" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b4ad2061a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad2061d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b4ad20601c0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b4ad20601c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b4ad0ffed88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b4ad2060530"/>
        <function-ref name="offset" scoped="" ref="0x2b4ad20606b8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b4ad2060840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad205d430" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad205d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad205d780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad205d908"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad205da90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad205dc18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad205dda0"/>
        <function-ref name="get" scoped="" ref="0x2b4ad205c020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad205c1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad205c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad205c4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad205c330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad205c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2b4ad205ee60" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2b4ad205ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad205d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x2b4ad205cb58" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x2b4ad205cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad2058d98"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad205a4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad20581f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad205ad78"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad2057688"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad2057238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad205a928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad205b6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad20587c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad205bb90"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad205a088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b4ad205e3f0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b4ad205e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b4ad205e740"/>
        <function-ref name="nextByte" scoped="" ref="0x2b4ad205e8c8"/>
        <function-ref name="startSend" scoped="" ref="0x2b4ad205ea50"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b4ad205ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b4ad2060a88" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b4ad2060a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b4ad2060dd8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b4ad205e020"/>
        <function-ref name="endPacket" scoped="" ref="0x2b4ad205e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b4ad2053bf8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b4ad2053bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad20bd020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b4ad20bd1a8"/>
        <function-ref name="receive" scoped="" ref="0x2b4ad20bd330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b4ad20bd4b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b4ad20bd640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b4ad20bd7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad20bd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b4ad2054c80" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b4ad2054c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b4ad2053020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b4ad20531a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b4ad2053330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b4ad20534b8"/>
        <function-ref name="putData" scoped="" ref="0x2b4ad2053640"/>
        <function-ref name="putDone" scoped="" ref="0x2b4ad20537c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b4ad2053950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad20bdb98" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad20bdb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad20bc020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad20bc1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad20bc330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad20bc4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad20bc640"/>
        <function-ref name="get" scoped="" ref="0x2b4ad20bc7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad20bc950"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad20bb020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad20bcc60"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad20bcad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad20bcde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4ad20b8ac0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4ad20b8ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad20b4d60"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad20b5470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad20b41c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad20b5d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad20b3648"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad20b31f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad20b58c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad20b7658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad20b4790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad20b7af8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad20b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b4ad1394448" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b4ad1394448"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b4ad1394798"/>
        <function-ref name="offset" scoped="" ref="0x2b4ad1394920"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b4ad1394aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b4ad138c968" loc="2:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad138c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad138ccb8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad138ce40"/>
        <function-ref name="start" scoped="" ref="0x2b4ad138b020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad138b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2b4ad138b430" loc="3:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2b4ad138b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2b4ad138b780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2b4ad13b56b8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <component-ref qname="SerialActiveMessageC.SerialProtectorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2b4ad13b56b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2b4ad13b5a08"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2b4ad13b5b90"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2b4ad13b5d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b4ad13a6b60" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b4ad13a6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad13aa020"/>
        <function-ref name="receive" scoped="" ref="0x2b4ad13aa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b4ad13ac848" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b4ad13ac848"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad13acb98"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b4ad13acd20"/>
        <function-ref name="receive" scoped="" ref="0x2b4ad13ab020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b4ad13ab1a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b4ad13ab330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b4ad13ab4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad13ab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b4ad13aa4a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b4ad13aa4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad13aa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b4ad13ac080" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b4ad13ac080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad13ac3d0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad13ac558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b4ad13a5b90" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b4ad13a5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad13da020"/>
        <function-ref name="receive" scoped="" ref="0x2b4ad13da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b4ad13da498" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b4ad13da498"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad13da7e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b4ad13da970"/>
        <function-ref name="receive" scoped="" ref="0x2b4ad13daaf8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b4ad13dac80"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b4ad13dae08"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b4ad13d9020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad13d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b4ad13d94a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b4ad13d94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad13d97f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4ad13d9d68" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad13d9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4ad0a27c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad13d8af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad13d74a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad13d7020"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad13d7930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b4ad13a53d8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b4ad13a53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad13a5728"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad13a58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b4ad1404a88" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b4ad1404a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1404dd8"/>
        <function-ref name="receive" scoped="" ref="0x2b4ad1403020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b4ad14028c0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b4ad14028c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1402c10"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1402d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad13d4d18" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad13d4d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad14040a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b4ad14032a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b4ad14032a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad14035f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b4ad1403780"/>
        <function-ref name="receive" scoped="" ref="0x2b4ad1403908"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b4ad1403a90"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b4ad1403c18"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b4ad1403da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1402020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2b4ad14022a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2b4ad14022a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2b4ad14025f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b4ad1400840" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b4ad1400840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b4ad1400b90"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b4ad1400d18"/>
        <function-ref name="rxDone" scoped="" ref="0x2b4ad13ff020"/>
        <function-ref name="txDone" scoped="" ref="0x2b4ad13ff1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b4ad13ff330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b4ad13ff4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b4ad13ff640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b4ad13ff7c8"/>
        <function-ref name="tx" scoped="" ref="0x2b4ad13ff950"/>
        <function-ref name="rx" scoped="" ref="0x2b4ad13ffad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4ad13fe020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad13fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4ad0a27c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad13fed70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad13fd6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad13fd230"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad13fdb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b4ad1404328" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b4ad1404328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1404678"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1404800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b4ad14000a0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b4ad14000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad14003f0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1400578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b4ad141a158" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b4ad141a158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b4ad141a4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b4ad141a630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b4ad141a7b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b4ad141a940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b4ad141aac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b4ad141ac50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b4ad141add8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b4ad1419020"/>
        <function-ref name="tx" scoped="" ref="0x2b4ad14191a8"/>
        <function-ref name="rx" scoped="" ref="0x2b4ad1419330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b4ad1417860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b4ad1417860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b4ad1417bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b4ad1417d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b4ad1416020"/>
        <function-ref name="txDone" scoped="" ref="0x2b4ad14161a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b4ad1416330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b4ad14164b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b4ad1416640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b4ad14167c8"/>
        <function-ref name="tx" scoped="" ref="0x2b4ad1416950"/>
        <function-ref name="rx" scoped="" ref="0x2b4ad1416ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b4ad141b8b8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b4ad141b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad141bc08"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad141bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b4ad14196b0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b4ad14196b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1419a00"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1419b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b4ad1417020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b4ad1417020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1417370"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14174f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b4ad141b060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b4ad141b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad141b3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad141b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b4ad14157f0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b4ad14157f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1415b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b4ad144b158" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b4ad144b158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b4ad144b4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b4ad144b630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b4ad144b7b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b4ad144b940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b4ad144bac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b4ad144bc50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b4ad144bdd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b4ad144a020"/>
        <function-ref name="tx" scoped="" ref="0x2b4ad144a1a8"/>
        <function-ref name="rx" scoped="" ref="0x2b4ad144a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b4ad14474d8" loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad14474d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b4ad1447828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b4ad144a688" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b4ad144a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad144a9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b4ad1448020" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b4ad1448020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b4ad1448370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b4ad14484f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b4ad1448680"/>
        <function-ref name="txDone" scoped="" ref="0x2b4ad1448808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b4ad1448990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b4ad1448b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b4ad1448ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b4ad1448e28"/>
        <function-ref name="tx" scoped="" ref="0x2b4ad1447020"/>
        <function-ref name="rx" scoped="" ref="0x2b4ad14471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b4ad144c8b8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b4ad144c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad144cc08"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad144cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b4ad144ad98" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b4ad144ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1449170"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14492f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b4ad14496b8" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b4ad14496b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1449a08"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1449b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b4ad1447b48" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4ad1447b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b4ad1446020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b4ad14461a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b4ad1446330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b4ad14464b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b4ad1446640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b4ad1446950" loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad1446950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b4ad1446ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b4ad144c020" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b4ad144c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad144c370"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad144c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad1496758" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad1496758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4ad0a27c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1493578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad1492020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad1493a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad14924a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad148e3c0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad148e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b4ad0a25960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad148d150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad148da60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad148d5d8"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad148c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b4ad14bb4f0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b4ad14bb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad14b66f8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad14b8020"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad14b9a20"/>
        <function-ref name="get" scoped="" ref="0x2b4ad14b90c0"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad14b84a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad14b6bd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad14b6270"/>
        <function-ref name="set" scoped="" ref="0x2b4ad14b9548"/>
        <function-ref name="start" scoped="" ref="0x2b4ad14b8930"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14b8db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad14c5060" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad14c5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad14c1270"/>
        <function-ref name="test" scoped="" ref="0x2b4ad14c4a20"/>
        <function-ref name="get" scoped="" ref="0x2b4ad14c5be0"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad14c2020"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad14c1748"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad14c4598"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad14c2db8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad14c40c0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad14c24a8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14c2930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b4ad14c02c8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b4ad14c02c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad14bc4a8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad14bec70"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad14be7e8"/>
        <function-ref name="force" scoped="" ref="0x2b4ad14bce08"/>
        <function-ref name="get" scoped="" ref="0x2b4ad14c0e48"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad14bd130"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad14bc980"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad14bc020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad14be310"/>
        <function-ref name="start" scoped="" ref="0x2b4ad14bd5b8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14bda40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b4ad14aec48" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b4ad14aec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad14aadb8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad14ab658"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad14ab1d0"/>
        <function-ref name="force" scoped="" ref="0x2b4ad14a9778"/>
        <function-ref name="get" scoped="" ref="0x2b4ad14ad820"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad14abae0"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad14a92f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad14aa930"/>
        <function-ref name="set" scoped="" ref="0x2b4ad14adca8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad14aa020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14aa4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b4ad14d9268" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b4ad14d9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad14d5310"/>
        <function-ref name="test" scoped="" ref="0x2b4ad14d8c10"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad14d8788"/>
        <function-ref name="get" scoped="" ref="0x2b4ad14d9de8"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad14d70c0"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad14d57e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad14d7e58"/>
        <function-ref name="set" scoped="" ref="0x2b4ad14d82b0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad14d7548"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14d79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b4ad14d5c68" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad14d5c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b4ad14d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b4ad14a9df0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b4ad14a9df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad14e00f8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad14e2980"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad14e24f8"/>
        <function-ref name="force" scoped="" ref="0x2b4ad14e0a58"/>
        <function-ref name="get" scoped="" ref="0x2b4ad14a8a18"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad14e2e08"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad14e05d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad14e1c20"/>
        <function-ref name="set" scoped="" ref="0x2b4ad14e2020"/>
        <function-ref name="start" scoped="" ref="0x2b4ad14e1310"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14e1798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b4ad14d4390" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad14d4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b4ad14d46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b4ad14de118" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b4ad14de118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad14db270"/>
        <function-ref name="test" scoped="" ref="0x2b4ad14ddab0"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad14dd628"/>
        <function-ref name="force" scoped="" ref="0x2b4ad14dbbd0"/>
        <function-ref name="get" scoped="" ref="0x2b4ad14dec98"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad14dc020"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad14db748"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad14dcdb8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad14dd150"/>
        <function-ref name="start" scoped="" ref="0x2b4ad14dc4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14dc930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4ad14b2020" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4ad14b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad14ae0f8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad14b19e8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad14b2ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad14b1e70"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad14ae5d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad14b1560"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad14afc30"/>
        <function-ref name="set" scoped="" ref="0x2b4ad14b1088"/>
        <function-ref name="start" scoped="" ref="0x2b4ad14af320"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad14af7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad15485a8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad15485a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b4ad0a25960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad15473a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad1547cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad1547830"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1545190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad15456d0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad15456d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad1541930"/>
        <function-ref name="test" scoped="" ref="0x2b4ad15431f8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad15443a8"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad1543680"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad1541e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1544d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad15414a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1544830"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1543b08"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1541020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad21c8cc0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad21c8cc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad21c70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad21c74f8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad21c74f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b4ad0a25960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad21c53a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad21c5cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad21c5830"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad21c4190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad21c46d0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad21c46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad21c0930"/>
        <function-ref name="test" scoped="" ref="0x2b4ad21c11f8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad21c33a8"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad21c1680"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad21c0e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad21c3d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad21c04a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad21c3830"/>
        <function-ref name="start" scoped="" ref="0x2b4ad21c1b08"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad21c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b4ad1579450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b4ad1579450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b4ad0a25960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad15771d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad1577ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad1577658"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1576020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4ad157c270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad157c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2b4ad0a25960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad157a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad157a930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad157a4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad157adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b4ad1562748" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b4ad1562748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b4ad15bf4d8"/>
        <function-ref name="enqueue" scoped="" ref="0x2b4ad15bd240"/>
        <function-ref name="element" scoped="" ref="0x2b4ad15bd870"/>
        <function-ref name="full" scoped="" ref="0x2b4ad15807c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2b4ad15bf088"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4ad15bfb38"/>
        <function-ref name="empty" scoped="" ref="0x2b4ad1580370"/>
        <function-ref name="size" scoped="" ref="0x2b4ad1580c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b4ad15b80f8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b4ad15b80f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b4ad15b5db0"/>
        <function-ref name="enqueue" scoped="" ref="0x2b4ad15b4aa8"/>
        <function-ref name="element" scoped="" ref="0x2b4ad15b3118"/>
        <function-ref name="full" scoped="" ref="0x2b4ad15b50c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2b4ad15b5960"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4ad15b4448"/>
        <function-ref name="empty" scoped="" ref="0x2b4ad15b8c40"/>
        <function-ref name="size" scoped="" ref="0x2b4ad15b5510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b4ad15b3790" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad15b3790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad15b3ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad15b3c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad15b3df0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad15b1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad15b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b4ad15b1430" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad15b1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad15b1780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad15b1908"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad15b1a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad15b1c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad15b1da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2b4ad15ac4d8" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2b4ad15ac4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad15ac828"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad15ac9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad15b92d0" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad15b92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad15b9620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b4ad15b0080" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4ad15b0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4ad15b03d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4ad15b0558"/>
        <function-ref name="led1On" scoped="" ref="0x2b4ad15b06e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4ad15b0868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4ad15b09f0"/>
        <function-ref name="get" scoped="" ref="0x2b4ad15b0b78"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4ad15b0d00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4ad15af4b8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad15af020"/>
        <function-ref name="led0On" scoped="" ref="0x2b4ad15af1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b4ad15af330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b4ad15b6898" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b4ad15b6898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b4ad15b6be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b4ad15d6e58" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b4ad15d6e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b4ad15d31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad15cd888" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad15cd888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad15cdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b4ad15cc020" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b4ad15cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b4ad15cc370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b4ad15c2020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b4ad15c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b4ad15c2370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b4ad15c2700" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b4ad15c2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad15c2a50"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad15c2bd8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad15c2d60"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad15c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4ad15c5c48" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="TestUsbStationAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4ad15c5c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad15fbe78"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad15fd5a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4ad15fb2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4ad15fde48"/>
        <function-ref name="getdt" scoped="" ref="0x2b4ad15fa748"/>
        <function-ref name="gett0" scoped="" ref="0x2b4ad15fa2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad15fd9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4ad15c37e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4ad15fb8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4ad15c3c88"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad15fd158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad15f9e18" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad15f9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad15f61a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad15f6330"/>
        <function-ref name="start" scoped="" ref="0x2b4ad15f64b8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad15f6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b4ad15eda80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b4ad15eda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b4ad15eddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4ad15f01c8" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad15f01c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4ad15f0518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad15f07a0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad15f07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad15f0af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad15f0c78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad15f0e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad15ee020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad15ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad15f6db8" loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad15f6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad15f5170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad15f52f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad15f5480"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad15f5608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad15f5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b4ad15f3b68" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b4ad15f3b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad15f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b4ad15e11d8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad15e11d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b4ad15e1528"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b4ad15e16b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b4ad15e1838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b4ad15e19c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad15f3020" loc="33:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad15f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad15f3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b4ad15e7020" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad15e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad1614478"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad1614b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad15e7d70"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1613278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b4ad15eaaf0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad15eaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad15eae40"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad15e9020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad15e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b4ad15e8020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b4ad15e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b4ad15e8370"/>
        <function-ref name="setRetries" scoped="" ref="0x2b4ad15e84f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b4ad15e8680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b4ad15e8808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b4ad15e8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad15ee448" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad15ee448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad15ee798"/>
        <function-ref name="source" scoped="" ref="0x2b4ad15ee920"/>
        <function-ref name="address" scoped="" ref="0x2b4ad15eeaa8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad15eec30"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad15eedb8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad15ea020"/>
        <function-ref name="type" scoped="" ref="0x2b4ad15ea1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad15ea330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad15ea4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad15ea640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad15ea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b4ad1613e48" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad1613e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad1610420"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad1610b00"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad1612ce8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad160f278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad160e440" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad160e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad160e790"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad160e918"/>
        <function-ref name="start" scoped="" ref="0x2b4ad160eaa0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad160ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b4ad163b020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad163b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1639608"/>
        <function-ref name="get" scoped="" ref="0x2b4ad16390f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad163bba0"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1639b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b4ad162f758" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad162f758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad162ec58"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad162c380"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad162e578"/>
        <function-ref name="set" scoped="" ref="0x2b4ad162ca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b4ad1608c88" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b4ad1608c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b4ad1607020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4ad16077d8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad16077d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4ad1607b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad16055f8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad16055f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1605948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1605ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1605c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1605de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1604020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad160b3c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad160b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad160b718"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad160b8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad160ba28"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad160bbb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad160bd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b4ad16081c8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b4ad16081c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1608518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b4ad163fbd8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad163fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad163c208"/>
        <function-ref name="get" scoped="" ref="0x2b4ad163dcb0"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad163d7a0"/>
        <function-ref name="set" scoped="" ref="0x2b4ad163c718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b4ad1602318" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad1602318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b4ad1602668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b4ad16027f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b4ad1602978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b4ad1602b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad16094e8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad16094e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1609838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b4ad1636848" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad1636848"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad1633cc0"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad1630420"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad16335e0"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1630b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b4ad1632430" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad1632430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1636020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b4ad1641828" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad1641828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1640e30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1640920"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1640410"/>
        <function-ref name="set" scoped="" ref="0x2b4ad163f388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b4ad1603968" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1603968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad1603cb8"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad1603e40"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad1602020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b4ad16063c8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad16063c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1606718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b4ad1602db0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b4ad1602db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b4ad16012e8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b4ad1601470"/>
        <function-ref name="getRetries" scoped="" ref="0x2b4ad16015f8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b4ad1601780"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b4ad1601908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad16042c0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad16042c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad1604610"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1604798"/>
        <function-ref name="address" scoped="" ref="0x2b4ad1604920"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1604aa8"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad1604c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad1604db8"/>
        <function-ref name="type" scoped="" ref="0x2b4ad1603020"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad16031a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1603330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad16034b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad1603640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b4ad1601bd0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad1601bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b4ad1641020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad16411a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1641330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b4ad1634808" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad1634808"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b4ad1634b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b4ad1605020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad1605020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1605370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad162bb78" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad162bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1628020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad16281a8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1628330"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad16284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2b4ad167b0d0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad167b0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b4ad167b620"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b4ad167b7a8"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b4ad167b930"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b4ad167bab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b4ad1643348" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1643348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1685a40"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1685530"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1685020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1683020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b4ad165f218" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b4ad165f218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4ad165f668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b4ad1658020" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b4ad1658020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4ad1658370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4ad16584f8"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1658680"/>
        <function-ref name="granted" scoped="" ref="0x2b4ad1658808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4ad1658990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b4ad1624498" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b4ad1624498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b4ad16247e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4ad1623020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad1623020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4ad1623370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad1628c30" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad1628c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1627020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad16271a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1627330"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad16274b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1627640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b4ad1625968" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b4ad1625968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1625cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b4ad164dc80" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4ad164dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b4ad1657020"/>
        <function-ref name="address" scoped="" ref="0x2b4ad16571a8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1657330"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad16574b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad1657640"/>
        <function-ref name="pan" scoped="" ref="0x2b4ad16577c8"/>
        <function-ref name="setPan" scoped="" ref="0x2b4ad1657950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1657ad8"/>
        <function-ref name="localPan" scoped="" ref="0x2b4ad1657c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b4ad1656060" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b4ad1656060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad16563b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1656538"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad16566c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1656848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad16569d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b4ad1646020" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad1646020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1645608"/>
        <function-ref name="get" scoped="" ref="0x2b4ad16450f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1646ba0"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1645b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b4ad164c6a8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad164c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b4ad164c9f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b4ad164cb80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b4ad164cd08"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b4ad164b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2b4ad1683838" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1683838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1682e30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1682920"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1682410"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1680388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b4ad1662550" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b4ad1662550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad16628a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1662a28"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1662bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1662d38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1661020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad1627dc0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad1627dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1625170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b4ad167aa48" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad167aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad1678020"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad1678700"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad1679828"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1678de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b4ad167f630" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad167f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad167a220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b4ad164ab78" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad164ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1647190"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1649c38"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1649728"/>
        <function-ref name="set" scoped="" ref="0x2b4ad16476a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b4ad1656cf8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1656cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad164c0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad164c228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad164c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b4ad165ad80" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b4ad165ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1660170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad16602f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1660480"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1660608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1660790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b4ad1623be0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad1623be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1622020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b4ad164b2d0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b4ad164b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b4ad164b620"/>
        <function-ref name="setRetries" scoped="" ref="0x2b4ad164b7a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b4ad164b930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b4ad164bab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b4ad164bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b4ad164a020" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad164a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b4ad164a370"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad164a4f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad164a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad1622e50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1622e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad16631e8"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1663370"/>
        <function-ref name="address" scoped="" ref="0x2b4ad16634f8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1663680"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad1663808"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad1663990"/>
        <function-ref name="type" scoped="" ref="0x2b4ad1663b18"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad1663ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1663e28"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad1662020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad16621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b4ad16769d8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad16769d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad1675e48"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad1674558"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad1675768"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1674c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b4ad1660af0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4ad1660af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1660e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b4ad167bdb8" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad167bdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b4ad167f170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b4ad1622860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad1622860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1622bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2b4ad16e2998" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad16e2998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b4ad16e2ce8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b4ad16e2e70"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b4ad16e1020"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b4ad16e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b4ad16877b0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b4ad16877b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4ad1687b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b4ad169a558" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b4ad169a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b4ad169a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b4ad1689b48" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b4ad1689b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad1695020"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b4ad16951a8"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1695330"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad16954b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad1695640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad16957c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad1695950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b4ad1691b10" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b4ad1691b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b4ad1691e60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b4ad169b020"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b4ad169b1a8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b4ad169b330"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b4ad169b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b4ad16ab640" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad16ab640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4ad16ab990"/>
        <function-ref name="wait" scoped="" ref="0x2b4ad16abb18"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad16abca0"/>
        <function-ref name="isFree" scoped="" ref="0x2b4ad16abe28"/>
        <function-ref name="getNow" scoped="" ref="0x2b4ad16b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b4ad16af8b8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4ad16af8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad16a9e10"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad16e6558"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad16a9730"/>
        <function-ref name="set" scoped="" ref="0x2b4ad16e6c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b4ad16a1020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b4ad16a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b4ad16a1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b4ad16a2468" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b4ad16a2468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b4ad16a27b8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b4ad16a2940"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4ad16a2ac8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b4ad16a2c50"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b4ad16a2dd8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b4ad166d020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4ad166d1a8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4ad166d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b4ad16b2858" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad16b2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b4ad16b2ba8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b4ad16b2d30"/>
        <function-ref name="setFCF" scoped="" ref="0x2b4ad1688020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b4ad16881a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b4ad1688330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b4ad16884b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b4ad1688640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b4ad16887c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b4ad1688950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b4ad1688ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b4ad1688c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b4ad1688de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b4ad1686020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4ad16862a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b4ad1686430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b4ad16865b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b4ad1686740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b4ad16868c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b4ad1686a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1686bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4ad1686d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b4ad16b1020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4ad16b11a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b4ad16b1330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b4ad16b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2b4ad16e5698" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad16e5698"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad16e4dc8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad16e48b8"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad16e43a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad16e2328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b4ad169d5f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b4ad169d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b4ad169d940"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b4ad169dac8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b4ad169dc50"/>
        <function-ref name="getSender" scoped="" ref="0x2b4ad169ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b4ad1696950" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b4ad1696950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b4ad1696ca0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b4ad1696e28"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b4ad169c020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b4ad169c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2b4ad16e8810" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2b4ad16e8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad16e8b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad16e8ce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad16e8e70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad16af020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad16af1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad16af330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x2b4ad16673a8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b4ad16673a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b4ad16676f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b4ad1667880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1667a08"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b4ad1667b90"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1667d18"/>
        <function-ref name="setAck" scoped="" ref="0x2b4ad166e020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad166e1a8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b4ad166e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b4ad17662e8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad17662e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4ad1766658"/>
        <function-ref name="wait" scoped="" ref="0x2b4ad17667e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1766968"/>
        <function-ref name="isFree" scoped="" ref="0x2b4ad1766af0"/>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1766c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b4ad17652d0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad17652d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4ad0ff16b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1763928"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad17649e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1763320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1764e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1763db0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1764088"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1764560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b4ad21e61a0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad21e61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4ad21e6510"/>
        <function-ref name="wait" scoped="" ref="0x2b4ad21e6698"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad21e6820"/>
        <function-ref name="isFree" scoped="" ref="0x2b4ad21e69a8"/>
        <function-ref name="getNow" scoped="" ref="0x2b4ad21e6b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b4ad21e5020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad21e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4ad0ff16b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad21e3690"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad21e46f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad21e3088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad21e4b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad21e3b18"/>
        <function-ref name="start" scoped="" ref="0x2b4ad21e5d70"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad21e4270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b4ad21e1020" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b4ad21e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b4ad21e1370"/>
        <function-ref name="suspend" scoped="" ref="0x2b4ad21e14f8"/>
        <function-ref name="resume" scoped="" ref="0x2b4ad21e1680"/>
        <function-ref name="run" scoped="" ref="0x2b4ad21e1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b4ad1773c30" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b4ad1773c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b4ad1770020"/>
        <function-ref name="suspend" scoped="" ref="0x2b4ad17701a8"/>
        <function-ref name="resume" scoped="" ref="0x2b4ad1770330"/>
        <function-ref name="run" scoped="" ref="0x2b4ad17704b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad1813430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1813430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1813780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad1814a50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad1814a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1814da0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1813020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad18131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b4ad1817020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b4ad1817020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b4ad1817390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4ad18176f8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad18176f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4ad1817a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad181a578" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad181a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad181a8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad181aa50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad181abd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad181ad60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1819020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad1819388" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad1819388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad18196f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1819880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1819a08"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1819b90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1819d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b4ad18187e0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b4ad18187e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1818b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad1813a08" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad1813a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad1813e58"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b4ad1812020"/>
        <function-ref name="source" scoped="" ref="0x2b4ad18121a8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1812330"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad18124b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad1812640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad18127c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad1815ba8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1815ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1814020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad18141a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1814330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad18144b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1814640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad18147c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad18180c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad18180c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1818438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b4ad1817e10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad1817e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad18151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad181b020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad181b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad181b370"/>
        <function-ref name="source" scoped="" ref="0x2b4ad181b4f8"/>
        <function-ref name="address" scoped="" ref="0x2b4ad181b680"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad181b808"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad181b990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad181bb18"/>
        <function-ref name="type" scoped="" ref="0x2b4ad181bca0"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad181be28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad181a020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad181a1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad181a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b4ad1815550" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad1815550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad18158c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad2244b90" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad2244b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad2243020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad22442a8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad22442a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad22445f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad2244780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad2244908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b4ad2248858" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b4ad2248858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b4ad2248bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4ad2246020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad2246020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4ad2246390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad224a020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad224a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad224a370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad224a4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad224a680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad224a808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad224a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad224acf8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad224acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad22490a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad2249228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad22493b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad2249538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad22496c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b4ad2248180" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b4ad2248180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad22484f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad224db20" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad224db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad224de70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad224c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad224c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad224c330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad224c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad224c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad22432a8" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad22432a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad22435f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b4ad2243780"/>
        <function-ref name="source" scoped="" ref="0x2b4ad2243908"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad2243a90"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad2243c18"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad2243da0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad2242020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b4ad2242268" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4ad2242268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b4ad22425b8"/>
        <function-ref name="changed" scoped="" ref="0x2b4ad2242740"/>
        <function-ref name="amGroup" scoped="" ref="0x2b4ad22428c8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b4ad2242a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad22454d0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad22454d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad2245820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad22459a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad2245b30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad2245cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad2245e40"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad2244020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad2249a28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad2249a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad2249d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b4ad2246738" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4ad2246738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad2246aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad224c888" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad224c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad224cbd8"/>
        <function-ref name="source" scoped="" ref="0x2b4ad224cd60"/>
        <function-ref name="address" scoped="" ref="0x2b4ad224b020"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad224b1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad224b330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad224b4b8"/>
        <function-ref name="type" scoped="" ref="0x2b4ad224b640"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad224b7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad224b950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad224bad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad224bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b4ad2246e50" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b4ad2246e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad22451e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b4ad17eb4d8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4ad17eb4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b4ad17eb828"/>
        <function-ref name="changed" scoped="" ref="0x2b4ad17eb9b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b4ad17ebb38"/>
        <function-ref name="setAddress" scoped="" ref="0x2b4ad17ebcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad180b618" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad180b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad180b968"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad180baf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad180bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b4ad1846020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4ad1846020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4ad1846370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4ad18464f8"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1846680"/>
        <function-ref name="granted" scoped="" ref="0x2b4ad1846808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4ad1846990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b4ad180cb40" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b4ad180cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad180b020"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad180b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad180b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4ad1841af8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4ad1841af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4ad1841e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4ad1840020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b4ad1840ae8" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad1840ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4ad1840e58"/>
        <function-ref name="configure" scoped="" ref="0x2b4ad183f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4ad1843d88" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4ad1843d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4ad1841170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4ad18412f8"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1841480"/>
        <function-ref name="granted" scoped="" ref="0x2b4ad1841608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4ad1841790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4ad1840268" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4ad1840268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4ad18405b8"/>
        <function-ref name="userId" scoped="" ref="0x2b4ad1840740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad2261020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad2261020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad2261370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b4ad22615f8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b4ad22615f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4ad2261948"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4ad2261ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4ad2261c58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4ad2261de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4ad225d0c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4ad225d0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4ad225d438"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4ad225d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b4ad225c100" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4ad225c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4ad225c470"/>
        <function-ref name="configure" scoped="" ref="0x2b4ad225c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b4ad225c880" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b4ad225c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4ad225cbd0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4ad225cd58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4ad225b020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4ad225b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4ad225e390" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4ad225e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4ad225e700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4ad225e888"/>
        <function-ref name="request" scoped="" ref="0x2b4ad225ea10"/>
        <function-ref name="granted" scoped="" ref="0x2b4ad225eb98"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4ad225ed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4ad225d808" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4ad225d808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4ad225db58"/>
        <function-ref name="userId" scoped="" ref="0x2b4ad225dce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b4ad225b470" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b4ad225b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad225b7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad225b948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad189d740" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad189d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad189da90"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad189dc18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad189dda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad189c060" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad189c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad189c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4ad1857268" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4ad1857268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4ad18575b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad1859340" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad1859340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1859690"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1859818"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad18599a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1859b28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1859cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b4ad1853900" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1853900"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1853c50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1853dd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad189d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad189d1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad189d330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad189d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b4ad1857860" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad1857860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b4ad1857bb0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b4ad1857d38"/>
        <function-ref name="setFCF" scoped="" ref="0x2b4ad1855020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b4ad18551a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b4ad1855330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b4ad18554b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b4ad1855640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b4ad18557c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b4ad1855950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b4ad1855ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b4ad1855c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b4ad1855de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b4ad1854020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4ad18542a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b4ad1854430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b4ad18545b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b4ad1854740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b4ad18548c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b4ad1854a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1854bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4ad1854d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b4ad1853020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4ad18531a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b4ad1853330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b4ad18534b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b4ad1858020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b4ad1858020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1858370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad18584f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1858680"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1858808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1858990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b4ad1858c18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4ad1858c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1857020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad18afe00" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad18afe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad18ae1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad18ae330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad18ae4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad18ae740" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad18ae740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad18aea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b4ad18b1120" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4ad18b1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad18b1470"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad18b15f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad18b1780"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad18b1908"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad18b1a90"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad18b1c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b4ad18b0908" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b4ad18b0908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad18b0c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad18aed18" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad18aed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad18ad0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad18ad228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad18ad3b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad18ad538"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad18ad6c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad18ad848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b4ad18b0020" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b4ad18b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad18b0370"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad18b04f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad18b0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b4ad1896230" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b4ad1896230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1896580"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1896708"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1896890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b4ad1896b18" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4ad1896b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1896e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b4ad18af020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b4ad18af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad18af370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad18af4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad18af680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad18af808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad18af990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad18afb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b4ad1952900" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4ad1952900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b4ad1952c50"/>
        <function-ref name="address" scoped="" ref="0x2b4ad1952dd8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1951020"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad19511a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad1951330"/>
        <function-ref name="pan" scoped="" ref="0x2b4ad19514b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b4ad1951640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad19517c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b4ad1951950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad1951b98" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1951b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1950020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad19501a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1950330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad19504b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1950640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad19507c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b4ad1955980" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad1955980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b4ad1955cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b4ad1955e58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b4ad1954020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b4ad19541a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b4ad1954330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b4ad19544b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b4ad1954640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b4ad19547c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b4ad1954950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b4ad1954ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b4ad1954c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b4ad1954de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b4ad1953020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4ad19532a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b4ad1953430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b4ad19535b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b4ad1953740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b4ad19538c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b4ad1953a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1953bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4ad1953d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b4ad1952020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4ad19521a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b4ad1952330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b4ad19524b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad1950ab0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1950ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1950e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad194f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad194f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad194f330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad194f4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad194f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b4ad22dc020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4ad22dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b4ad22dc370"/>
        <function-ref name="address" scoped="" ref="0x2b4ad22dc4f8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad22dc680"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad22dc808"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad22dc990"/>
        <function-ref name="pan" scoped="" ref="0x2b4ad22dcb18"/>
        <function-ref name="setPan" scoped="" ref="0x2b4ad22dcca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad22dce28"/>
        <function-ref name="localPan" scoped="" ref="0x2b4ad22db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad22db268" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad22db268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad22db5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad22db740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad22db8c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad22dba50"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad22dbbd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad22dbd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b4ad22df020" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad22df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b4ad22df370"/>
        <function-ref name="getDSN" scoped="" ref="0x2b4ad22df4f8"/>
        <function-ref name="setFCF" scoped="" ref="0x2b4ad22df680"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b4ad22df808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b4ad22df990"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b4ad22dfb18"/>
        <function-ref name="setDSN" scoped="" ref="0x2b4ad22dfca0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b4ad22dfe28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b4ad22de020"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b4ad22de1a8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b4ad22de330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b4ad22de4b8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b4ad22de640"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4ad22de8c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b4ad22dea50"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b4ad22debd8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b4ad22ded60"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b4ad22dd020"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b4ad22dd1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad22dd330"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4ad22dd4b8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b4ad22dd640"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4ad22dd7c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b4ad22dd950"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b4ad22ddad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b4ad22da060" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4ad22da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b4ad22da3b0"/>
        <function-ref name="changed" scoped="" ref="0x2b4ad22da538"/>
        <function-ref name="amGroup" scoped="" ref="0x2b4ad22da6c0"/>
        <function-ref name="setAddress" scoped="" ref="0x2b4ad22da848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad22daad0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad22daad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad22dae20"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad22d9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad22d91a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad22d9330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad22d94b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad22d9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad1988510" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad1988510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1988860"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad19889e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1988b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad1988df8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1988df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad19d6170"/>
        <function-ref name="header" scoped="" ref="0x2b4ad19d62f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad1989470" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad1989470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad19897c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1989948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1989ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad19d6580" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad19d6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b4ad19d68d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b4ad19d6a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b4ad19d6be0"/>
        <function-ref name="getSender" scoped="" ref="0x2b4ad19d6d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad1989d18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1989d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad19880a0"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1988228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad2378458" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad2378458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad23787a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad2378930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad2378ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad2378d40" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad2378d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad23760d8"/>
        <function-ref name="header" scoped="" ref="0x2b4ad2376260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b4ad2375bd8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4ad2375bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad2374020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b4ad23741a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad2374330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad23744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad2306d98" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad2306d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad2379170"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad23792f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad2379480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b4ad2375020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b4ad2375020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b4ad2375370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b4ad23754f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b4ad2375680"/>
        <function-ref name="evicted" scoped="" ref="0x2b4ad2375808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b4ad2375990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad23796c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad23796c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad2379a18"/>
        <function-ref name="header" scoped="" ref="0x2b4ad2379ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad2379de8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad2379de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad2378170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b4ad23764a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b4ad23764a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b4ad23767f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b4ad2376980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b4ad2376b08"/>
        <function-ref name="getSender" scoped="" ref="0x2b4ad2376c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b4ad196cd70" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b4ad196cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b4ad19690f0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b4ad1969278"/>
        <function-ref name="getNode" scoped="" ref="0x2b4ad1969400"/>
        <function-ref name="evicted" scoped="" ref="0x2b4ad1969588"/>
        <function-ref name="getIndex" scoped="" ref="0x2b4ad1969710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b4ad1965b18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4ad1965b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1965e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b4ad1964020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad19641a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1964330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b4ad1966850" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b4ad1966850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b4ad1966ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b4ad1966d28"/>
        <function-ref name="getNode" scoped="" ref="0x2b4ad1965020"/>
        <function-ref name="evicted" scoped="" ref="0x2b4ad19651a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b4ad1965330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad1966238" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad1966238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1966588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b4ad2372140" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4ad2372140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad2372490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b4ad2372618"/>
        <function-ref name="get" scoped="" ref="0x2b4ad23727a0"/>
        <function-ref name="set" scoped="" ref="0x2b4ad2372928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad19c6c38" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad19c6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad19c5020"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad19c51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad19c5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad19c55b8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad19c55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad19c5908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b4ad19c2100" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b4ad19c2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad19c2450"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad19c25d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad19c2760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad19c92e8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad19c92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad19c9638"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad19c97c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad19c9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad19c8e20" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad19c8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad19c61a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad19c6330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad19c64b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad19c6640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad19c67c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad19c6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad19c5b90" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad19c5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad19c4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad19c41a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad19c4330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad19c44b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad19c4640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad19c47c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b4ad19c3470" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b4ad19c3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b4ad19c37c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b4ad19c3948"/>
        <function-ref name="getRetries" scoped="" ref="0x2b4ad19c3ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b4ad19c3c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b4ad19c3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad19c9bd0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad19c9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad19c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b4ad19c4a10" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad19c4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad19c4d60"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad19c3020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad19c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b4ad19c8268" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b4ad19c8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b4ad19c85b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b4ad19c8740"/>
        <function-ref name="getRetries" scoped="" ref="0x2b4ad19c88c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b4ad19c8a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b4ad19c8bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad19bd988" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad19bd988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad19bdcd8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad19bde60"/>
        <function-ref name="start" scoped="" ref="0x2b4ad19f8020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad19f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad19f55c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad19f55c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad19f5918"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad19f5aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad19f5c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad19f4020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad19f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad19f4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad19f8430" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad19f8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad19f8780"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad19f8908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad19f8a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad19f72e8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad19f72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad19f7638"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad19f77c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad19f7948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad19f7ad0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad19f7c58"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad19f7de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b4ad19f6060" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad19f6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b4ad19f63b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b4ad19f6538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b4ad19f66c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b4ad19f6848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b4ad19f6b30" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b4ad19f6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad19f6e80"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad19f5030"/>
        <function-ref name="start" scoped="" ref="0x2b4ad19f51b8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad19f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad19f8d18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad19f8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad19f70a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad19f45f8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad19f45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad19f4948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad19f4ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad19f4c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad19f4de0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad19f3020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad19f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b4ad234f458" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b4ad234f458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b4ad234f7a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b4ad234f930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b4ad234fab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b4ad234fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad1a2b270" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad1a2b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1a2b5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad1a2b748"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1a2b8d0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1a2ba58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b4ad1a285d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4ad1a285d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad1a28928"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad1a28ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1a28c38"/>
        <function-ref name="done" scoped="" ref="0x2b4ad1a28dc0"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad1a79020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1a791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad1a2bce0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad1a2bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1a2a0a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1a2a228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1a2a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b4ad1a79c98" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1a79c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1a78020"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1a781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad1a2a638" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad1a2a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1a2a988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b4ad1a793f0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1a793f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1a79740"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1a798c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1a79a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b4ad1a2abd0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad1a2abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b4ad1a28020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1a281a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1a28330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad2348870" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad2348870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad2348bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad2348d48"/>
        <function-ref name="start" scoped="" ref="0x2b4ad2346020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad23461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b4ad2346430" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad2346430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad2346780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b4ad2344450" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4ad2344450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad23447a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad2344928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad2344ab0"/>
        <function-ref name="done" scoped="" ref="0x2b4ad2344c38"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad2344dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad2343020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad2346a08" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad2346a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad2346d58"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad2345020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad23451a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b4ad23414f0" loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b4ad23414f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad2341840"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad23419c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b4ad2342578" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad2342578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad23428c8"/>
        <function-ref name="header" scoped="" ref="0x2b4ad2342a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b4ad2341c90" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b4ad2341c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad2340020"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad23401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad2345430" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad2345430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad2345780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b4ad2342d18" loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b4ad2342d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad23410a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad2341228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b4ad2343c98" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad2343c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad2342020"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad23421a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad2342330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b4ad23459c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b4ad23459c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b4ad2345d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad2344020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad23441a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b4ad2343268" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b4ad2343268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b4ad23435b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b4ad2343740"/>
        <function-ref name="resume" scoped="" ref="0x2b4ad23438c8"/>
        <function-ref name="run" scoped="" ref="0x2b4ad2343a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad1acd0c0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad1acd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1acd410"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1acd598"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1acd720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad1acd9a8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1acd9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1acdcf8"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1acde80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b4ad1acc0f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad1acc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4ad1acc440"/>
        <function-ref name="wait" scoped="" ref="0x2b4ad1acc5c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1acc750"/>
        <function-ref name="isFree" scoped="" ref="0x2b4ad1acc8d8"/>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1acca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad1accce8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad1accce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b4ad1aca0a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b4ad1aca228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b4ad1aca3b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b4ad1aca538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad1a7a8c8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1a7a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1a7ac18"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1a7ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4ad1a7a020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1a7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1a7a370"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1a7a4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1a7a680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad2380d38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad2380d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad237f0d8"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad237f260"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad237f3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad237f670" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad237f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad237f9c0"/>
        <function-ref name="header" scoped="" ref="0x2b4ad237fb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b4ad237fd90" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad237fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4ad237e170"/>
        <function-ref name="wait" scoped="" ref="0x2b4ad237e2f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad237e480"/>
        <function-ref name="isFree" scoped="" ref="0x2b4ad237e608"/>
        <function-ref name="getNow" scoped="" ref="0x2b4ad237e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b4ad237e9d8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b4ad237e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b4ad237ed28"/>
        <function-ref name="rand32" scoped="" ref="0x2b4ad237d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad237d2a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad237d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b4ad237d5f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b4ad237d780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b4ad237d908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b4ad237da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad2380578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad2380578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad23808c8"/>
        <function-ref name="header" scoped="" ref="0x2b4ad2380a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4ad2382b58" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad2382b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad2380020"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad23801a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad2380330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2b4ad237dd58" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2b4ad237dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad237c0d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad237c260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b4ad1a8e690" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b4ad1a8e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b4ad1a8e9e0"/>
        <function-ref name="rand32" scoped="" ref="0x2b4ad1a8eb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b4ad1a8c668" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b4ad1a8c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1a8e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad1a92940" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad1a92940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1a92c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b4ad1a87568" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b4ad1a87568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b4ad1a878b8"/>
        <function-ref name="rand32" scoped="" ref="0x2b4ad1a87a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b4ad1a88528" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b4ad1a88528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1a870c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad1a8bb40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad1a8bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1a88020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad1aef020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad1aef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1aef370"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1aef4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1aef680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad1aef908" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1aef908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1aefc58"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1aefde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b4ad1aee060" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad1aee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4ad1aee3b0"/>
        <function-ref name="wait" scoped="" ref="0x2b4ad1aee538"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1aee6c0"/>
        <function-ref name="isFree" scoped="" ref="0x2b4ad1aee848"/>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1aee9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2b4ad1aedd60" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b4ad1aedd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1aec0d8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1aec260"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1aec3e8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1aec570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad1aeec58" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad1aeec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b4ad1aed020"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b4ad1aed1a8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4ad1aed330"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b4ad1aed4b8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b4ad1aed640"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b4ad1aed7c8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4ad1aed950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4ad1aedad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad1ac5e00" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1ac5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1af01a8"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1af0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4ad1ac5558" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1ac5558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1ac58a8"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1ac5a30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1ac5bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b4ad1af0578" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4ad1af0578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad1af08c8"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad1af0a50"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad1af0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2b4ad1aec7f8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2b4ad1aec7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1aecb48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1aeccd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1aece58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1aeb020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1aeb1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1aeb330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad1ae87e0" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1ae87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1ae8b30"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1ae8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad1ae8020" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1ae8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1ae8370"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1ae84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b4ad1ada020" loc="21:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4ad1ada020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b4ad1ada370"/>
        <function-ref name="getDSN" scoped="" ref="0x2b4ad1ada4f8"/>
        <function-ref name="setFCF" scoped="" ref="0x2b4ad1ada680"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b4ad1ada808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b4ad1ada990"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b4ad1adab18"/>
        <function-ref name="setDSN" scoped="" ref="0x2b4ad1adaca0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b4ad1adae28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b4ad1ad9020"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b4ad1ad91a8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b4ad1ad9330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b4ad1ad94b8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b4ad1ad9640"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4ad1ad98c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b4ad1ad9a50"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b4ad1ad9bd8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b4ad1ad9d60"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b4ad1ad8020"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b4ad1ad81a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1ad8330"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4ad1ad84b8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b4ad1ad8640"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4ad1ad87c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b4ad1ad8950"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b4ad1ad8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1DriverConfig" ref="0x2b4ad1ad7020" loc="22:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b4ad1ad7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b4ad1ad7370"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b4ad1ad74f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1ad7680"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b4ad1ad7808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1ad7990"/>
        <function-ref name="setAck" scoped="" ref="0x2b4ad1ad7b18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1ad7ca0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b4ad1ad7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b4ad1ad4180" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad1ad4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4ad1ad44f0"/>
        <function-ref name="wait" scoped="" ref="0x2b4ad1ad4678"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1ad4800"/>
        <function-ref name="isFree" scoped="" ref="0x2b4ad1ad4988"/>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1ad4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b4ad1ad3190" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad1ad3190"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4ad0ff16b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1ad0918"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1ad2980"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1ad0310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1ad2e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1ad0da0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1ad2020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1ad24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b4ad242e5a0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4ad242e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4ad242e910"/>
        <function-ref name="wait" scoped="" ref="0x2b4ad242ea98"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad242ec20"/>
        <function-ref name="isFree" scoped="" ref="0x2b4ad242eda8"/>
        <function-ref name="getNow" scoped="" ref="0x2b4ad242d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b4ad242d4d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad242d4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4ad0ff16b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad242ac88"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad242bd08"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad242a680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad242a1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad2429150"/>
        <function-ref name="start" scoped="" ref="0x2b4ad242b3a8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad242b880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b4ad2429528" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b4ad2429528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b4ad2429878"/>
        <function-ref name="suspend" scoped="" ref="0x2b4ad2429a00"/>
        <function-ref name="resume" scoped="" ref="0x2b4ad2429b88"/>
        <function-ref name="run" scoped="" ref="0x2b4ad2429d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad1b0c338" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad1b0c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1b0c688"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad1b0c810"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1b0c998"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1b0cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b4ad1b08b10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1b08b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4ad1b08e60"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1b07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad1b02020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad1b02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1b02370"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1b024f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1b02680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad1b02908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1b02908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1b02c58"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1b02de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b4ad1b0abe0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4ad1b0abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad1b09020"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad1b091a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1b09330"/>
        <function-ref name="done" scoped="" ref="0x2b4ad1b094b8"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad1b09640"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1b097c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad1b07268" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1b07268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1b075b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1b07740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1b078c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1b07a50"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1b07bd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1b07d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b4ad1b03020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b4ad1b03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad1b03470"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad1b035f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1b03780"/>
        <function-ref name="done" scoped="" ref="0x2b4ad1b03908"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad1b03a90"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1b03c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b4ad1b06020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4ad1b06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4ad1b06370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad1b083f0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1b083f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1b08740"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1b088c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b4ad1b05a08" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b4ad1b05a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1b05d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b4ad1b06658" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b4ad1b06658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1b069a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad1b06b30"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1b06cb8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1b06e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad1b01800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1b01800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1b01b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1b01cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1b01e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1b00020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1b001a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1b00330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b4ad1b0a648" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b4ad1b0a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1b0a998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad1b005b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad1b005b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4ad1b00908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b4ad1b05120" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b4ad1b05120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1b05470"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1b055f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1b05780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4ad1b09a10" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1b09a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1b09d60"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1b08020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1b081a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b4ad1b010a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4ad1b010a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4ad1b013f0"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1b01578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b4ad1b0cd68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b4ad1b0cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1b0a0f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1b0a278"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1b0a400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b4ad1b94da0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4ad1b94da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1b93170"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1b932f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1b93480"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1b93608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad1b96020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1b96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1b96370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1b964f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1b96680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1b96808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1b96990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1b96b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad1b94020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1b94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1b94370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1b944f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1b94680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1b94808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1b94990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1b94b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b4ad1b9a598" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad1b9a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad1b99a88"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad1b97190"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad1b993a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1b97870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b4ad1b95020" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad1b95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1b95ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b4ad1b9e920" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad1b9e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad1b9dd78"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad1b9b4b8"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad1b9d698"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1b9bb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b4ad2405b30" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4ad2405b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad2405e80"/>
        <function-ref name="get" scoped="" ref="0x2b4ad2404030"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad24041b8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad2404340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad2406cd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad2406cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad24050a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad2405228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad24053b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad2405538"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad24056c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad2405848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad24018a8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad24018a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad2401bf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad2401d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad2400020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad24001a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad2400330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad24004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b4ad24092d0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4ad24092d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad2408768"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad2408e48"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad2408088"/>
        <function-ref name="set" scoped="" ref="0x2b4ad2406558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b4ad24046d0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad24046d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad24033a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b4ad24038c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b4ad24038c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad2401490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b4ad240c688" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4ad240c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad240bae0"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad240a1f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad240b400"/>
        <function-ref name="set" scoped="" ref="0x2b4ad240a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4ad1b59380" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1b59380"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1b57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4ad1b56ab0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1b56ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1ba3658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4ad1ba3c80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad1ba3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a299d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b4ad0a29d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1ba2a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad1ba14a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad1ba1020"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1ba1930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad1b8da70" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1b8da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1b8ddc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1bc6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1bc61a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1bc6330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1bc64b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1bc6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad1bc6928" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1bc6928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1bc6c78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1bc6e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1bc5020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1bc51a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1bc5330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1bc54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b4ad1b8d020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b4ad1b8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1b8d390"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1b8d518"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1b8d6a0"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1b8d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad1bc3268" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad1bc3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1bc35b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad1bc3740"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1bc38c8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1bc3a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b4ad1bc0988" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1bc0988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4ad1bc0cd8"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1bc0e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad1bba020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad1bba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1bba370"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1bba4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1bba680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad1bba908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1bba908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1bbac58"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1bbade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b4ad1bc2b10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4ad1bc2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad1bc2e60"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad1bc1020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1bc11a8"/>
        <function-ref name="done" scoped="" ref="0x2b4ad1bc1330"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad1bc14b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1bc1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad1bbe0e0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1bbe0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1bbe430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1bbe5b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1bbe740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1bbe8c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1bbea50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1bbebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b4ad1bbb020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b4ad1bbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad1bbb470"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad1bbb5f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1bbb780"/>
        <function-ref name="done" scoped="" ref="0x2b4ad1bbb908"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad1bbba90"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1bbbc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b4ad1bbee60" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4ad1bbee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4ad1bbd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad1bc0268" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1bc0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1bc05b8"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1bc0740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b4ad1bbc908" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b4ad1bbc908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1bbcc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b4ad1bbd4d0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b4ad1bbd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1bbd820"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad1bbd9a8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1bbdb30"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1bbdcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad1bb9800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1bb9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1bb9b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1bb9cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1bb9e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1bb8020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1bb81a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1bb8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b4ad1bc2578" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b4ad1bc2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1bc28c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad1bb85b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad1bb85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4ad1bb8908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b4ad1bbc020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b4ad1bbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1bbc370"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1bbc4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1bbc680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4ad1bc1888" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1bc1888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1bc1bd8"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1bc1d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1bc0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b4ad1bb90a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4ad1bb90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4ad1bb93f0"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1bb9578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b4ad1bc3c98" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b4ad1bc3c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1bc2020"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1bc21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1bc2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4ad1bb3d08" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4ad1bb3d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1bb20a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad1bb2228"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1bb23b0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1bb2538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b4ad1baf3f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1baf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4ad1baf740"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1baf8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4ad1baa8c8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4ad1baa8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1baac18"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1baada0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1ba9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4ad1ba92a8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4ad1ba92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1ba95f8"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1ba9780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b4ad1bb15f8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4ad1bb15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad1bb1948"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad1bb1ad0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1bb1c58"/>
        <function-ref name="done" scoped="" ref="0x2b4ad1bb1de0"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad1bb0020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1bb01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad1bafb10" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1bafb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1bafe60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1bae020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1bae1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1bae330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1bae4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1bae640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b4ad1baba08" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b4ad1baba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad1babe58"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad1baa020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1baa1a8"/>
        <function-ref name="done" scoped="" ref="0x2b4ad1baa330"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad1baa4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1baa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b4ad1bae8c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4ad1bae8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4ad1baec18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad1bb0c98" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1bb0c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1baf020"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1baf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b4ad1bab430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b4ad1bab430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1bab780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b4ad1bad020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b4ad1bad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4ad1bad370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4ad1bad4f8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1bad680"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1bad808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad1ba82a8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1ba82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1ba85f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1ba8780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1ba8908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1ba8a90"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1ba8c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1ba8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b4ad1bb1060" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b4ad1bb1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1bb13b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad1ba7060" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad1ba7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4ad1ba73b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b4ad1bada90" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b4ad1bada90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1badde0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1bab020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1bab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4ad1bb03f0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1bb03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1bb0740"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1bb08c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1bb0a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b4ad1ba9a08" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4ad1ba9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4ad1ba9d58"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1ba8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b4ad1bb2780" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b4ad1bb2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1bb2ad0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1bb2c58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1bb2de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2b4ad1c23b60" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad1c23b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b4ad1c22020"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b4ad1c221a8"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b4ad1c22330"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b4ad1c224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad1c22700" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1c22700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c22a50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1c22bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1c22d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1c21020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1c211a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1c21330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2b4ad1bfaa50" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1bfaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c230c0"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c25b68"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c25658"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c235d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4ad1c200c0" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4ad1c200c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c20410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1c20598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1c20720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1c208a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1c20a30"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1c20bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntCtrlFlag" ref="0x2b4ad1c21618" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntCtrlFlag" scoped="" ref="0x2b4ad1c21618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c21968"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c21af0"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1c21c78"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c21e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RxModeLock" ref="0x2b4ad1bfa1e8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2b4ad1bfa1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1bfa538"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1bfa6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b4ad1c16020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1c16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4ad1c16370"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1c164f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b4ad1c0f020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1c0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c0e608"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c0e0f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c0fba0"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c0eb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2b4ad1c4ee28" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad1c4ee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b4ad1c4d1a8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b4ad1c4d330"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b4ad1c4d4b8"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b4ad1c4d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b4ad1c54020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4ad1c54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad1c53478"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c53b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad1c54d70"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c51278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b4ad1c4b020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b4ad1c4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c4b370"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c4b4f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1c4b680"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c4b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b4ad1c18020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4ad1c18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad1c18370"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad1c184f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1c18680"/>
        <function-ref name="done" scoped="" ref="0x2b4ad1c18808"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad1c18990"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1c18b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b4ad1c11b10" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad1c11b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c10190"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c14c38"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c14728"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c106a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad1c167b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1c167b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c16b00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1c16c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1c16e10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1c15020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1c151a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1c15330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad1c56a48" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad1c56a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b4ad1c56d98"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b4ad1c55020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1c551a8"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b4ad1c55330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1c554b8"/>
        <function-ref name="setAck" scoped="" ref="0x2b4ad1c55640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1c557c8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b4ad1c55950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad1c17748" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1c17748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1c17a98"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1c17c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad1c044b8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad1c044b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4ad0ff16b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1c02c88"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1c03d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1c02680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1c021f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1c00150"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1c033a8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1c03880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b4ad1c0c3b0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b4ad1c0c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c0ba40"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c0b530"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c0b020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c09020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2b4ad1c51c80" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1c51c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c4e2a8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c50d68"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c50858"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c4e7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2b4ad1c4a860" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2b4ad1c4a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1c4abb0"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1c4ad38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2b4ad1c4d9c8" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2b4ad1c4d9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1c4dd18"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1c4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftAckAlarm" ref="0x2b4ad1c008e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftAckAlarm" scoped="" ref="0x2b4ad1c008e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4ad0ff16b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1c56020"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1c58020"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1c58930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1c584a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1c564a8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1bff660"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1bffb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b4ad1c05220" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4ad1c05220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1c05da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4ad1c18dc0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1c18dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1c17170"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1c172f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1c17480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b4ad1c09860" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad1c09860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c08e30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c08920"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c08410"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c07388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b4ad1c4bb78" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b4ad1c4bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c4a020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c4a1a8"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1c4a330"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c4a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b4ad1c4c3c0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b4ad1c4c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c4c710"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c4c898"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1c4ca20"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c4cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b4ad1c079d0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad1c079d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b4ad1c07d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2b4ad1c112b8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2b4ad1c112b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b4ad1c11608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b4ad1c41d70" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b4ad1c41d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4ad1c400f0"/>
        <function-ref name="request" scoped="" ref="0x2b4ad1c40278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b4ad1c2d498" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b4ad1c2d498"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4ad0a27c50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b4ad1c30220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b4ad1c3b0c8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b4ad1c3b0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c3a6a0"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c3a190"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c3bc48"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c3abb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b4ad1c804f0" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b4ad1c804f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c80840"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c809c8"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1c80b50"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c80cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2b4ad1c78c78" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b4ad1c78c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b4ad1c77020"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b4ad1c771a8"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b4ad1c77330"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b4ad1c774b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b4ad1c43788" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b4ad1c43788"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1c43ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b4ad1c7fe50" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4ad1c7fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4ad1c7d300"/>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c7d9e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b4ad1c7ebe8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c7b0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b4ad1c43d88" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4ad1c43d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4ad1c42170"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4ad1c422f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4ad1c42480"/>
        <function-ref name="done" scoped="" ref="0x2b4ad1c42608"/>
        <function-ref name="standby" scoped="" ref="0x2b4ad1c42790"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4ad1c42918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b4ad1c307f0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1c307f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4ad0ff12b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1c2c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b4ad1c3fcf0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4ad1c3fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c3c388"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c3ee00"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c3e8f0"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c3c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4ad1c40530" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4ad1c40530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c40880"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1c40a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1c40b90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1c40d18"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1c3f020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1c3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4ad1c82588" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4ad1c82588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b4ad1c828d8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b4ad1c82a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1c82be8"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b4ad1c82d70"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4ad1c81020"/>
        <function-ref name="setAck" scoped="" ref="0x2b4ad1c811a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4ad1c81330"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b4ad1c814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4ad1c415f8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4ad1c415f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1c41948"/>
        <function-ref name="header" scoped="" ref="0x2b4ad1c41ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2b4ad1c75498" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2b4ad1c75498"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1c757e8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1c75970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b4ad1c31168" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4ad1c31168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b4ad1c314b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2b4ad1c7bb00" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b4ad1c7bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c780f8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c7abb8"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c7a6a8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c78608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b4ad1c38458" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b4ad1c38458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c37a40"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c37530"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c37020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b4ad1c44c10" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b4ad1c44c10"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad1c43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2b4ad1c77840" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2b4ad1c77840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b4ad1c77d90"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1c76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b4ad1c35860" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4ad1c35860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c34e30"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c34920"/>
        <function-ref name="isSet" scoped="" ref="0x2b4ad1c34410"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c32388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4ad1c42bc0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4ad1c42bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1c41020"/>
        <function-ref name="ready" scoped="" ref="0x2b4ad1c411a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1c41330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b4ad1c76d68" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b4ad1c76d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b4ad1c750f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x2b4ad1c2ca30" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b4ad1c2ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad1c83b80"/>
        <function-ref name="test" scoped="" ref="0x2b4ad1c854a8"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1c85020"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c865d8"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad1c85930"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad1c82088"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad1c836f8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c86a60"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1c85db8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1c83270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b4ad1c7f0e0" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b4ad1c7f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c7f430"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c7f5b8"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1c7f740"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c7f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b4ad1c81858" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b4ad1c81858"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1c81ba8"/>
        <function-ref name="get" scoped="" ref="0x2b4ad1c81d30"/>
        <function-ref name="setValue" scoped="" ref="0x2b4ad1c80020"/>
        <function-ref name="set" scoped="" ref="0x2b4ad1c801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b4ad1c329d0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4ad1c329d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b4ad1c32e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b4ad1c762b0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b4ad1c762b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b4ad1c76600"/>
        <function-ref name="suspend" scoped="" ref="0x2b4ad1c76788"/>
        <function-ref name="resume" scoped="" ref="0x2b4ad1c76910"/>
        <function-ref name="run" scoped="" ref="0x2b4ad1c76a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2b4ad1c3f498" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2b4ad1c3f498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b4ad1c3f7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b4ad1d59b28" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b4ad1d59b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4ad0a278f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4ad0a27c50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b4ad1d568f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4ad1d51188" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1d51188"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1d51d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4ad1d4f560" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4ad1d4f560"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1d4e130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4ad1d4e758" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4ad1d4e758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4ad1d4d578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4ad1d4b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4ad1d4da00"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad1d4b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad1d52160" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad1d52160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1d48918"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1d49980"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1d48310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1d49e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1d48da0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1d49020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1d494f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b4ad248e610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad248e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad248b6f8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad248c020"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad248db30"/>
        <function-ref name="force" scoped="" ref="0x2b4ad2489088"/>
        <function-ref name="get" scoped="" ref="0x2b4ad248d1d0"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad248c4a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad248bbd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad248b270"/>
        <function-ref name="set" scoped="" ref="0x2b4ad248d658"/>
        <function-ref name="start" scoped="" ref="0x2b4ad248c930"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad248cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad2497ab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad2497ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad2493150"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad24951f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad2495b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad2495680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad24935d8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad2496828"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad2496d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad2493b18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad2493b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad2490c20"/>
        <function-ref name="test" scoped="" ref="0x2b4ad2491548"/>
        <function-ref name="get" scoped="" ref="0x2b4ad2492728"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad24919d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad248e130"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad24910c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad2490798"/>
        <function-ref name="set" scoped="" ref="0x2b4ad2492bb0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad2491e58"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad2490310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b4ad2476c28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad2476c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad2472db8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad2473658"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad24731d0"/>
        <function-ref name="force" scoped="" ref="0x2b4ad2471778"/>
        <function-ref name="get" scoped="" ref="0x2b4ad2475820"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad2473ae0"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad24712f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad2472930"/>
        <function-ref name="set" scoped="" ref="0x2b4ad2475ca8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad2472020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad24724a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad247e020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad247e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad247c690"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad247d6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad247c088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad247db80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad247cb18"/>
        <function-ref name="start" scoped="" ref="0x2b4ad247ed70"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad247d270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad247f810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad247f810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad247fb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad247a0a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad247a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad2476270"/>
        <function-ref name="test" scoped="" ref="0x2b4ad2479a58"/>
        <function-ref name="get" scoped="" ref="0x2b4ad247ac20"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad2477020"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad2476748"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad24795d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad2477db8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad24790f8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad24774a8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad2477930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad1d9f230" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad1d9f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad1d9d918"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad1d9e980"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad1d9d310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad1d9ee08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad1d9dda0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad1d9e020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad1d9e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b4ad24d0610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad24d0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad24cc6f8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad24cd020"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad24ceb30"/>
        <function-ref name="force" scoped="" ref="0x2b4ad24cb088"/>
        <function-ref name="get" scoped="" ref="0x2b4ad24ce1d0"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad24cd4a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad24ccbd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad24cc270"/>
        <function-ref name="set" scoped="" ref="0x2b4ad24ce658"/>
        <function-ref name="start" scoped="" ref="0x2b4ad24cd930"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad24cddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad24d8ab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad24d8ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad24d5150"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad24d61f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad24d6b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad24d6680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad24d55d8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad24d7828"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad24d7d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad24d5b18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad24d5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad24d1c20"/>
        <function-ref name="test" scoped="" ref="0x2b4ad24d2548"/>
        <function-ref name="get" scoped="" ref="0x2b4ad24d3728"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad24d29d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad24d0130"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad24d20c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad24d1798"/>
        <function-ref name="set" scoped="" ref="0x2b4ad24d3bb0"/>
        <function-ref name="start" scoped="" ref="0x2b4ad24d2e58"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad24d1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b4ad24b7c28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b4ad24b7c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad24b3db8"/>
        <function-ref name="test" scoped="" ref="0x2b4ad24b5658"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad24b51d0"/>
        <function-ref name="force" scoped="" ref="0x2b4ad24b2778"/>
        <function-ref name="get" scoped="" ref="0x2b4ad24b6820"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad24b5ae0"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad24b22f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad24b3930"/>
        <function-ref name="set" scoped="" ref="0x2b4ad24b6ca8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad24b3020"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad24b34a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4ad24bf020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4ad24bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b4ad0a35078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b4ad0a35360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4ad24bd690"/>
        <function-ref name="fired" scoped="" ref="0x2b4ad24be6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4ad24bd088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4ad24beb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4ad24bdb18"/>
        <function-ref name="start" scoped="" ref="0x2b4ad24bfd70"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad24be270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4ad24c1810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4ad24c1810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b4ad082c570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4ad24c1b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b4ad24bb0a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b4ad24bb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b4ad24b7270"/>
        <function-ref name="test" scoped="" ref="0x2b4ad24baa58"/>
        <function-ref name="get" scoped="" ref="0x2b4ad24bbc20"/>
        <function-ref name="reset" scoped="" ref="0x2b4ad24b9020"/>
        <function-ref name="getMode" scoped="" ref="0x2b4ad24b7748"/>
        <function-ref name="overflow" scoped="" ref="0x2b4ad24ba5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b4ad24b9db8"/>
        <function-ref name="set" scoped="" ref="0x2b4ad24ba0f8"/>
        <function-ref name="start" scoped="" ref="0x2b4ad24b94a8"/>
        <function-ref name="stop" scoped="" ref="0x2b4ad24b9930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad1decc20" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad1decc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1deb020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1deb1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1deb330"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1deb4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1deb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad1deb888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad1deb888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1debbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1debd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1dea020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1dea1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1dea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad1dea578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1dea578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad1dea8c8"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1deaa50"/>
        <function-ref name="address" scoped="" ref="0x2b4ad1deabd8"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1dead60"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad1de9020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad1de91a8"/>
        <function-ref name="type" scoped="" ref="0x2b4ad1de9330"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad1de94b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1de9640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad1de97c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad1de9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b4ad1de9bd8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b4ad1de9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad1de8020"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad1de81a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad1de8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad2517400" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad2517400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad2517750"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad25178d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad2517a60"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad2517be8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad2517d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad2516020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad2516020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad2516370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad25164f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad2516680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad2516808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad2516990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad2516bd8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad2516bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad2515020"/>
        <function-ref name="source" scoped="" ref="0x2b4ad25151a8"/>
        <function-ref name="address" scoped="" ref="0x2b4ad2515330"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad25154b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad2515640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad25157c8"/>
        <function-ref name="type" scoped="" ref="0x2b4ad2515950"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad2515ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad2515c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad2515de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad2514020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b4ad25142a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b4ad25142a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4ad25145f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b4ad2514780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4ad2514908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4ad250b790" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad250b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad250bae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad250bc68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad250bdf0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad250a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad250a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b4ad250a450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad250a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad250a7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad250a928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad250aab0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad250ac38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad250adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b4ad2508060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad2508060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad25083b0"/>
        <function-ref name="source" scoped="" ref="0x2b4ad2508538"/>
        <function-ref name="address" scoped="" ref="0x2b4ad25086c0"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad2508848"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad25089d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad2508b58"/>
        <function-ref name="type" scoped="" ref="0x2b4ad2508ce0"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad2508e68"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad2507020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad25071a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad2507330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad1e03020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad1e03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1e03370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1e034f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1e03680"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1e03808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1e03990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b4ad1dff6f8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4ad1dff6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1dffa68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1dffbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1dffd78"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1dfe020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1dfe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4ad1e018a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4ad1e018a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4ad1e01c18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1e01da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1dff020"/>
        <function-ref name="cancel" scoped="" ref="0x2b4ad1dff1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4ad1dff330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b4ad1dfda10" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad1dfda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1dfdd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1dfc020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1dfc1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1dfc330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1dfc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b4ad1dfc780" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b4ad1dfc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad1dfcad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad1dfcc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b4ad1dfb020" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b4ad1dfb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4ad1dfb370"/>
        <function-ref name="runTask" scoped="" ref="0x2b4ad1dfb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b4ad1dfe3f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1dfe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad1dfe740"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1dfe8c8"/>
        <function-ref name="address" scoped="" ref="0x2b4ad1dfea50"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1dfebd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad1dfed60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad1dfd020"/>
        <function-ref name="type" scoped="" ref="0x2b4ad1dfd1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad1dfd330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1dfd4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad1dfd640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad1dfd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4ad1ddfa28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4ad1ddfa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4ad1ddfd78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4ad1dde020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4ad1dde1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4ad1dde330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4ad1dde4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4ad1ddf490" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4ad1ddf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4ad1ddf7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4ad1dde700" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4ad1dde700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4ad1ddea50"/>
        <function-ref name="source" scoped="" ref="0x2b4ad1ddebd8"/>
        <function-ref name="address" scoped="" ref="0x2b4ad1dded60"/>
        <function-ref name="destination" scoped="" ref="0x2b4ad1ddd020"/>
        <function-ref name="setSource" scoped="" ref="0x2b4ad1ddd1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4ad1ddd330"/>
        <function-ref name="type" scoped="" ref="0x2b4ad1ddd4b8"/>
        <function-ref name="setType" scoped="" ref="0x2b4ad1ddd640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4ad1ddd7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4ad1ddd950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4ad1dddad8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b4ad09fb600" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.&#10;&#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b4ad09fc1d8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b4ad0a04408" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b4ad0a04198" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b4ad09f8b78" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b4ad0a065a0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b4ad0a06330" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b4ad0a050a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b4ad0a06db8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b4ad0a058f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b4ad0a63178" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b4ad0a63840" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b4ad0a643a0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b4ad0a766f8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4ad0a64a40" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b4ad0a76020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4ad0a69670" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b4ad0a69ce0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b4ad0848a38" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b4ad0846258" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0b2c020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0b2c020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b4ad0b25918" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b4ad0b293e0" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b4ad0b26020" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b4ad0b28a60" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b4ad0b28d78" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b4ad0b28328" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b4ad0b3a878" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b4ad0b3a070" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b4ad0b29b10" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b4ad0b2caf0" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b4ad0b2c880" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b4ad0b25020" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b4ad0b26950" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b4ad0b26c68" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b4ad0b2a570" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b4ad0b2a300" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4ad0b2ad18" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0b5b748" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0b5b748"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4ad0b5b978" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b5b978"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b4ad0b54258" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b5b978"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b4ad0b57418" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b4ad0b558e0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b5b978"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b5b978"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b4ad0b55340" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b5b978"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b4ad0b55660" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b5b978"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b4ad0b57b60" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b4ad0b549d8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b5b978"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4ad0b584a8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b5b978"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b4ad0b58238" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0b5b978"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4ad0b58c78" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCompare" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b4ad0bd0758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
          <interfacedef-ref qname="HplAtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bd0758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b4ad0bc8bb8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b4ad0bc8948" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b4ad0bcb740" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b4ad0bcb070" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x2b4ad0bdf9f0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4ad0bcc070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bd0758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b4ad0bcbde8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b4ad0bdf328" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b4ad0bc8290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4ad0bcc970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bd0758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b4ad0bcc700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bd0758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4ad0bca4e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4ad0bcab80" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCounter" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b4ad0bc4758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
          <interfacedef-ref qname="HplAtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bc4758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b4ad0bbdc50" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b4ad0bbd9e0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b4ad0bbf7a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4ad0bc1070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bc4758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b4ad0bbfe50" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b4ad0bbc378" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b4ad0bbf0d8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b4ad0bbd328" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4ad0bc1970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bc4758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b4ad0bc1700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0bc4758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4ad0bbe560" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4ad0bbec00" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCapture" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b4ad0c35068" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
          <interfacedef-ref qname="HplAtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0c35068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b4ad0c304e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b4ad0c30270" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b4ad0c32070" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b4ad0c34958" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4ad0c35920" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0c35068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b4ad0c32718" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b4ad0c30be0" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b4ad0c31b88" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4ad0c34290" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0c35068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b4ad0c34020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0c35068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4ad0c32de0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4ad0c314b8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b4ad09d8cd8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the&#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b4ad09861a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10;&#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b4ad09ccda0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b4ad09e3428" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b4ad09e3b60" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b4ad09e2328" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b4ad09e11d8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b4ad09e0810" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4ad09de020" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b4ad09e2a40" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4ad09deb20" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b4ad09de8b0" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b4ad09d4cd8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b4ad09e1948" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b4ad09e00d8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b4ad09ae360" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad0ce7a38" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad0ce7a38"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4ad0ce7c68" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0ce7c68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b4ad0ce4528" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad0ce7c68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b4ad0ce3550" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b4ad0ce4d38" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b4ad0ce3c40" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b4ad0e1fe20" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b4ad0e1fbb0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b4ad0e1c838" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b4ad0e1d910" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b4ad0e1d020" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b4ad0e1c0d8" loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b4ad0e1b258" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b4ad0e2e6b0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b4ad0e35d70" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b4ad0e2e100" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad0e2e420" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4ad0e2da48" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b4ad0e2bda0" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b4ad0e2d140" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad0e2d460" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b4ad0e2d7a8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast&#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast&#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b4ad0e334a8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even&#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad0e33238" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b4ad0e31778" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad0e31508" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b4ad0e33ca0" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till&#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till&#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b4ad0e30290" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad0e30020" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side&#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b4ad0e43c98" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b4ad0e434e8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b4ad0e5a440" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b4ad0e51c40" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b4ad0e55818" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b4ad0e50610" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b4ad0e503a0" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b4ad0e5bcd8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b4ad0e52338" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b4ad0e520c8" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b4ad0e560a8" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b4ad0e57dd0" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b4ad0e59328" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Read the SPI data register&#10; </short>
          <long>&#10; Read the SPI data register&#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b4ad0e6fde0" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b4ad0e6fb70" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b4ad0e567e0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b4ad0e4e690" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b4ad0e4e420" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b4ad0e4d538" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b4ad0e51518" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b4ad0e512a8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b4ad0e6f4a0" loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b4ad0e53290" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b4ad0e53020" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b4ad0e59c78" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Write the SPI data register&#10; </short>
          <long>&#10; Write the SPI data register&#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad0e59a08" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b4ad0e55118" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b4ad0e56e80" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b4ad0e52b48" loc="123:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b4ad0e50d18" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b4ad0e4ed80" loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b4ad0e4dc80" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b4ad0e539a8" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b4ad0e5ab58" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b4ad0e57630" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete.&#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad0e573c0" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b4ad0ea90d8" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4ad0ea98b0" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b4ad0f0b328" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b4ad0f0bbf0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b4ad0f088d0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b4ad0f07110" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10;&#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b4ad0f24620" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b4ad0f098a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b4ad0f243b0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b4ad0f098a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b4ad0f27720" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b4ad0f25290" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b4ad0f098a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b4ad0f25020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b4ad0f098a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b4ad0f25b30" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue.&#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b4ad0f098a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <short>&#10; The interface to a TinyOS task scheduler.</short>
        <long>&#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b4ad022ccb0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Initialize the scheduler.</short>
          <long>&#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b4ad08b7bf0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b4ad08b7450" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long>&#10; Run the next task if one is waiting, otherwise return immediately.&#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b4ad103e378" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b4ad103e108" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b4ad103d780" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b4ad103d510" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4ad1041748" loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         starting or the device was off and the device is now ready to turn&#10;         on.  After receiving this return value, you should expect a&#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4ad103eb60" loc="130:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         stopping or the device was on and the device is now ready to turn&#10;         off.  After receiving this return value, you should expect a&#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b4ad1034920" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b4ad1034020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b4ad1034380" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad1034690" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b4ad102ec68" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad102e6a0" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad102e9b0" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b4ad1032e28" loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b4ad1031be8" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1031978" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4ad1032030" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1030a60" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b4ad1030d88" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b4ad1045bc8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b4ad1045bc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b4ad103aa40" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad103a7d0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4ad103a108" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b4ad1045bc8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad103be60" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b4ad103b710" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad103b4a0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4ad1038728" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the&#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b4ad1045bc8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1038160" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b4ad10384a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b4ad1045bc8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b4ad1043d80" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
              <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1043480" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b4ad10437a8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad1043ab8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b4ad1036b90" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1036920" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b4ad105bcb0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad105ba40" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b4ad1059020" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad105ac38" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b4ad1057630" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b4ad1035e48" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b4ad1035bd8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b4ad1057d90" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis&#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b4ad1049020" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b4ad1022cb8" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b4ad1029e30" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b4ad1029bc0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b4ad102a328" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b4ad102ad80" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b4ad102ab10" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b4ad10256f8" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b4ad1025140" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4ad1025478" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b4ad10262a0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b4ad1028ba0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4ad1026020" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b4ad1021a00" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b4ad1021790" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b4ad1020ce0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b4ad1020760" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b4ad1020a60" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b4ad0fe4848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b4ad10238c8" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b4ad1023658" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b4ad10473e0" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b4ad1049e00" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b4ad1047160" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b4ad1046178" loc="195:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <short>&#10; The basic message data type accessors.</short>
        <long>&#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b4ad10b4c68" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad10b49f8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b4ad10b0c70" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength().&#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad10b0a00" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b4ad10ade78" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than&#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad10ad8b0" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad10adbc0" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b4ad10ad020" loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b4ad10b1050" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad10afa90" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad10afda0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b4ad10a3c50" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad10a36c0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad10a39d0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b4ad10c82d8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad10cac90" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad10c8020" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b4ad10ca488" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b4ad10cc0a8" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad10a2e08" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4ad10cb5c8" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;&#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad10cb020" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b4ad10cb348" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Protection" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <short>&#10; Protection (Serial) Interface&#10; </short>
        <long>&#10; Protection (Serial) Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="sendLost" ref="0x2b4ad113e1d8" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="17:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered after invalid data found in protection component, following the reset&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="amTypeMismatch" ref="0x2b4ad11113a0" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered if the message am_type in the sendDone event DO NOT match that used in send command&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleSendDone" ref="0x2b4ad1111ac0" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="13:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered when  'idle' protection component catch the sendDone event&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RestartControl" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <short>&#10; Serial Restart Interface&#10; </short>
        <long>&#10; Serial Restart Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="restart" ref="0x2b4ad1113700" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <interfacedef-ref qname="RestartControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b4ad1185498" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4ad1185c38" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialReset" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <short>&#10; Reset interface for Serial Protector&#10;&#10; </short>
        <long>&#10; Reset interface for Serial Protector&#10;&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="txReset" ref="0x2b4ad118fe70" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <interfacedef-ref qname="SerialReset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b4ad11b3800" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b4ad11b3260" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad11b3580" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b4ad11ad290" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b4ad11ad020" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b4ad11ac020" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b4ad11ada08" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad11add28" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b4ad11af020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b4ad11ab8f8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b4ad11ab020" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad11ab340" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b4ad11ab668" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b4ad11af898" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4ad11b1020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b4ad11b06c8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad11b09e8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b4ad11b0d10" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b4ad1188020" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad118a988" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b4ad118ace8" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b4ad118b258" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b4ad118a0b8" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.&#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad118ba70" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b4ad118bdb8" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b4ad11fb020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b4ad11cd778" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b4ad11d3710" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b4ad11d2ab0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b4ad11cf578" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.&#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad11cf308" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b4ad11d1328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b4ad11d2290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad11d2020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b4ad11cfd70" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b4ad11d1b78" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been&#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b4ad11dbba0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b4ad11da4b8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b4ad11db2a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2b4ad11deb98" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
          <variable name="first_byte" ref="0x2b4ad11db020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b4ad11d9020" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b4ad11dad40" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b4ad11ddd48" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2b4ad11ddad8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b4ad11d69f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad11d6780" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b4ad11d54b8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b4ad11d5248" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b4ad13a74a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b4ad13a7238" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b4ad13a62a0" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b4ad13a7c98" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b4ad13a6020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b4ad13ca3e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b4ad13cb5b0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b4ad13c79f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad13c7780" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b4ad13c9a38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b4ad13cc730" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b4ad13cce50" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b4ad13cbcd0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b4ad13caac0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b4ad13c93a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad13c9138" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b4ad13c7110" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b4ad1561b18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b4ad1561b18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b4ad159b0d8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b4ad1561b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b4ad15999a0" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b4ad1561b18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b4ad1599730" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b4ad1561b18"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b4ad0233488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2b4ad0233488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b4ad1598870" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.&#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b4ad1561b18"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4ad1598600" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x2b4ad159ea80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b4ad159c968" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b4ad159bbf8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b4ad1561b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b4ad159e378" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b4ad159c1d8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b4ad15b6560" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b4ad15b62f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sniff" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <short>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; </short>
        <long>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; @author tango&#10; @date 2014/03/12&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="catch" ref="0x2b4ad15ef5c0" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
          <short>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; </short>
          <long>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; @param 'message_t* ONE msg'        the receied packet&#10; @param 'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param len      the length of the data region pointed to by payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Sniff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad15f2b78" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b4ad15ef020" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad15ef330" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b4ad15eb2a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10;&#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b4ad15f1b60" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b4ad15eb020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b4ad15e4860" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad15e4278" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b4ad15e45e0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b4ad15e2948" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad15e26d8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b4ad15e6a60" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b4ad15e6108" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b4ad15e9e58" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad161b130" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad161b130"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4ad161b360" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad161b360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b4ad1618020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad161b360"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1619d78" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b4ad1617108" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1618e38" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b4ad161be80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad161bc10" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4ad1615348" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad161b360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1617d30" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b4ad16150c8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad161b360"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b4ad161f800" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad161f590" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b4ad15e3b30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad15e3548" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b4ad15e38b0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b4ad16218a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1621630" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b4ad1620e48" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1620860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b4ad1620bc8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b4ad161d728" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad161d4b8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad16375f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad16375f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b4ad1637e80" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short>&#10; Return current time.</short>
          <long>&#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b4ad1638e30" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1638bc0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AntennaDiversityConfig" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <short>&#10; antenna user mode manager&#10;&#10; </short>
        <long>&#10; antenna user mode manager&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rxModeSet" ref="0x2b4ad167d640" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rxmode" ref="0x2b4ad167d3d0" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rxModeGet" ref="0x2b4ad167dd38" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeSet" ref="0x2b4ad167c6d8" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txmode" ref="0x2b4ad167c468" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeGet" ref="0x2b4ad167cdd0" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b4ad16539a0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1653730" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b4ad1654590" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b4ad1653020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1654cd0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b4ad1650388" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1651d50" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4ad1650108" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b4ad16516b8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16510c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4ad1651438" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b4ad164f630" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4ad0fef5e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad164f3c0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b4ad164d2e0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4ad0fef5e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad164fca8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b4ad164d060" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4ad0fef5e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b4ad1650ca8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1650a38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b4ad164d9e8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4ad0fef5e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b4ad165e5c0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b4ad1661c98" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b4ad165e020" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad165e330" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b4ad165a988" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad165a3c0" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4ad165a6d0" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b4ad165bb70" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b4ad165c338" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad165c0c8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4ad165b2a0" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad165cc68" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b4ad165b020" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b4ad16874d0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b4ad169a290" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad169a020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b4ad168b108" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad168ce30" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b4ad1689758" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up,&#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16894e8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b4ad168da48" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad168d7d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b4ad168f3d0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad168f160" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b4ad168c718" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad168c160" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4ad168c498" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b4ad168d0b8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad168fad8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4ad168fe10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b4ad168bd88" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad168b7d8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b4ad168bb08" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b4ad169ce68" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b4ad1694790" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b4ad1691830" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16915c0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b4ad1692290" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1692020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b4ad1692d18" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1692aa8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b4ad16acb60" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b4ad16adce0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b4ad0ff16b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b4ad16ada70" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b4ad0ff16b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b4ad16ac458" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b4ad16ad290" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b4ad16ab328" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4ad0ff16b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b4ad1666c68" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16669f8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b4ad16a2178" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b4ad16a39b0" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad16a33d0" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b4ad16a3730" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b4ad16a77a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16a7538" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b4ad16a6290" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16a6020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b4ad16a5118" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified&#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad16a6b10" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b4ad16a6e70" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b4ad1665020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b4ad1665d28" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16657b0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b4ad1665aa8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b4ad16a5c08" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16a5998" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses. It also&#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b4ad16bb4e8" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16bb278" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b4ad16becc8" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16bea58" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b4ad16c9a18" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used,&#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16c9478" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b4ad16c9798" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b4ad16c6a90" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16c6820" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b4ad16b62a0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16b8ba0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4ad16b6020" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b4ad16c6020" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16c7cf0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b4ad16bda78" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16bd4e8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b4ad16bd7f8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b4ad16c33c0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a&#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad16c5db8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b4ad16c3140" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b4ad16b8468" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16b81f8" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b4ad16c74e8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16c7278" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b4ad16c2d28" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16c2ab8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b4ad16c22a0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4ad16c3c10" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b4ad16c2020" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b4ad16b37b0" loc="178:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4ad0fef9d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b4ad16b6ca0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16b6a30" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b4ad16b3020" loc="173:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4ad0fef5e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b4ad16b9a20" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16b9470" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4ad16b97a0" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b4ad16c55b8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16c5348" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b4ad16be2e0" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16bfce0" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b4ad16be060" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b4ad16ba2a0" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16bbc40" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b4ad16ba020" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b4ad16b2290" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16b2020" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b4ad16c1a78" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16c1500" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b4ad16c17f8" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b4ad1690cb0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used,&#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1690a40" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b4ad16b5750" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16b54e0" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b4ad16baca8" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16baa38" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b4ad16bf538" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16bf2c8" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b4ad169ea60" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad169e4b0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b4ad169e7e0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b4ad169d258" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b4ad16a0290" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16a0020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b4ad16a0cb0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16a0a40" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b4ad1697338" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16970c8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b4ad1699840" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16995d0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b4ad1697b20" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b4ad16965b8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1696348" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b4ad16e8468" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16e81f8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b4ad16a8968" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16a86f8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b4ad16ea020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b4ad16eb710" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16eb160" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b4ad16eb490" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b4ad16b0e60" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure&#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16b0bf0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b4ad16eaa38" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad16ea7c8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b4ad1669da8" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if addressRecognition enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b4ad1669338" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAddressRecognition' TRUE to enable address recognition&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b4ad16690c8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b4ad166c258" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckEnabled" ref="0x2b4ad16670d8" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if ack enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b4ad166fa50" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad166f7e0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAck" ref="0x2b4ad1668730" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAck' TRUE to enable acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAck" ref="0x2b4ad16684c0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b4ad166cd10" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad166caa0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b4ad166b7e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad166b570" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.&#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b4ad17430d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the&#10; run event is currently not executing, then it  is called immediately&#10; and this command returns only after the completion of the run event.&#10; If the run event is currently executed, then this method returns at&#10; once, and makes sure that the run event is called once more when&#10; it is finished. If this method is called from a task, then by the&#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b4ad1743978" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b4ad1742328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from&#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b4ad1747990" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b4ad17952c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
              <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1795020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b4ad179bda0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a task. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad179bb30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b4ad17977a8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1797538" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4ad1798cd0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1798728" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b4ad1798a50" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b4ad1782db8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b4ad1781c48" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b4ad1781558" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b4ad17825d8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b4ad1782020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4ad0fe4bf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b4ad1782358" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b4ad1947e70" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
              <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1947bc8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b4ad1947290" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1947020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b4ad1984020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4ad1985c58" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b4ad1984790" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4ad193ec80" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4ad193ea10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4ad19855b8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4ad1985348" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b4ad193b030" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4ad193cd90" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b4ad19394a8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1].&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b4ad1939238" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b4ad193bac0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4ad193b850" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b4ad1938020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4ad1939ca8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b4ad193c5c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not&#10; found in the table, then the value NEIGHBORHOOD is  returned,&#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b4ad193c358" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4ad0fe2020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b4ad19ea760" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time. The radio cannot send or receive in this state&#10; and releases all access to shared resources (e.g. SPI bus).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b4ad19e7790" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages&#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b4ad19e6290" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b4ad19e6020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b4ad19e69f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b4ad19e7020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b4ad19e51d8" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4ad0238160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b4ad19e9e10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a tasklet. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad19e9ba0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b4ad19e11d8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept&#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept&#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4ad19e2998" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b4ad19e2728" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <short>&#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long>&#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b4ad1a67d88" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4ad0238bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b4ad1a675f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4ad02396a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b4ad1a8f518" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b4ad1a8f518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b4ad1a8c020" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b4ad1a8f518"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b4ad1a8fd50" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b4ad1a8f518"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b4ad1abbe50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1abbbe0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4ad1ac0dd8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1ac0b68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b4ad1abdab0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1abd520" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b4ad1abd830" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b4ad082e818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4ad1abb4e8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4ad1abb278" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b4ad1018490"/>
                <typename><typedef-ref name="message_t" ref="0x2b4ad10179e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b4ad1b15020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b4ad1b16c68" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b4ad1b164e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCalibration" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <short>&#10; FTN/CF/DCU Calibration Interface, recommanded to do it every 5 min or less&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="run" ref="0x2b4ad1c11020" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <interfacedef-ref qname="RadioCalibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4ad08385d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4ad1c2e0f0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4ad1c2e0f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4ad1c2e320" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad1c2e320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b4ad1c2edb8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad1c2e320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b4ad1c2eb48" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4ad1c2e320"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
