<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:TestUsbStationAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aabfa079020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aabf9a68598"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aabf9a68598"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aabfa005640"/></to>
    </wire>
    <wire loc="17:TestUsbStationAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aabfa07b920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aabfa08a8e8"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aabfa08a8e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aabfa0cd110"/></to>
    </wire>
    <wire loc="21:TestUsbStationAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2aabfa0809a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aabfa635c48"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aabfa635c48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aabf9bba510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:TestUsbStationAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2aabfa0a9bc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfa669e18"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfa669e18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfa67e440"/></to>
    </wire>
    <wire loc="29:TestUsbStationAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfa098b08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfae5cc20"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfae5cc20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfb587400"/></to>
    </wire>
    <wire loc="30:TestUsbStationAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfa0b24b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfae5a578"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfae5a578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfb586bd8"/></to>
    </wire>
    <wire loc="34:TestUsbStationAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfa0ac4b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfae4f490"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfae4f490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfa663020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:TestUsbStationAppC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfa0a4c30"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfa6aa020"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfa6aa020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfa6b3348"/></to>
    </wire>
    <wire loc="37:TestUsbStationAppC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa0c5998"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa659af0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa659af0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa672968"/></to>
    </wire>
    <wire loc="38:TestUsbStationAppC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2aabfa0c10d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2aabfa6ba020"/></to>
    </wire>
    <wire loc="231:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2aabfa6ba020"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2aabfaa99bd0"/></to>
    </wire>
    <wire loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2aabfacb3788"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfaafbb40"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2aabfb3b6430"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfa9d6238"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfb373de8"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfb2d0020"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfa63d888"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2aabfa4857f0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2aabfa4ba688"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfa443d18"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfa205b88"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfa6292d0"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfaff8d08"/></to>
    </wire>
    <wire loc="16:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabf9c1a378"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2aabfa005c78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2aabf9890020"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2aabf9890020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2aabf9a1e2a8"/></to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2aabfa0046a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2aabfacb4c10"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2aabfa0046a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabf9a6a888"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aabf9a6a888"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabf9a73e78"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2aabfa004d70"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aabf9a70790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aabf9ab08b8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2aabf9a63538"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfa103480"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2aabf9a6cbd8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x2aabf9a63538"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x2aabf9a6c578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabf9a76560"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aabf9a76560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabf9aa1ab0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="Max706Init" scoped="" ref="0x2aabf9a7d340"/></from>
      <to><interface-ref name="Max706Init" scoped="" ref="0x2aabf9acb5c0"/></to>
    </wire>
    <wire loc="21:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="Max706Init" scoped="" ref="0x2aabf9acb5c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabf9ad6518"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="At45dbInit" scoped="" ref="0x2aabf9a7d9b0"/></from>
      <to><interface-ref name="At45dbOff" scoped="" ref="0x2aabf9e75820"/></to>
    </wire>
    <wire loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <from><interface-ref name="At45dbOff" scoped="" ref="0x2aabf9e75820"/></from>
      <to><interface-ref name="At45dbOff" scoped="" ref="0x2aabf9e94728"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2aabf9a76c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfb530810"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2aabf9a76c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfb4ef810"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2aabf9a76c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfb238cc0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2aabf9a76c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfaf4c508"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2aabf9a76c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfaf75848"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2aabf9aa0858"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x2aabf9a76c48"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x2aabf9a9f020"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x2aabf9a75320"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x2aabf9a9f688"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x2aabf9a85b80"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2aabf9aa01f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabf9ab0288"/></to>
    </wire>
    <wire loc="18:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aabf9ad6b20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aabf9a68598"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="WDI" scoped="" ref="0x2aabf9ba3e38"/></from>
      <to><interface-ref name="WDI" scoped="" ref="0x2aabf9ae2a10"/></to>
    </wire>
    <wire loc="15:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
      <from><interface-ref name="WDI" scoped="" ref="0x2aabf9ae2a10"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x2aabf9b02af0"/></to>
    </wire>
    <wire loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="TimerWD" scoped="" ref="0x2aabf9ba6dd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aabf9e7c128"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aabf9e7c128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aabf9bba510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="Reflush" scoped="" ref="0x2aabf9b9b1d8"/></from>
      <to><interface-ref name="Reflush" scoped="" ref="0x2aabf9acbc50"/></to>
    </wire>
    <wire loc="161:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2aabf9b02af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b56d28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2aabf9b0c7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b64020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2aabf9afe348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b4d7c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2aabf9b07348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b5ca88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2aabf9b12020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b56d28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2aabf9b1a4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b64020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2aabf9aec020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b15b28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2aabf9b01c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b56d28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2aabf9aea348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b45020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2aabf9af34d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b3f370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2aabf9afb7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b4d7c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2aabf9b047e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b5ca88"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2aabf9ade7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b15b28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2aabf9ae77e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b45020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2aabf9af0968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b3f370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2aabf9af8c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b4d7c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2aabf9b0e4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b56d28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2aabf9b1c1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b64020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2aabf9b09020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b5ca88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2aabf9adbc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b15b28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2aabf9ae4e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b45020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2aabf9b0be00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b64020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2aabf9af51a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b3f370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2aabf9afd4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b4d7c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2aabf9b064d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b5ca88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2aabf9b111a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b56d28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2aabf9aeb1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b15b28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2aabf9ae94d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b45020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2aabf9af2658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b3f370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2aabf9afa968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b4d7c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2aabf9b03968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b5ca88"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2aabf9add968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b15b28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2aabf9ae6968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b45020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2aabf9aefaf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b3f370"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2aabf9b0d658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b56d28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2aabf9b00e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b4d7c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2aabf9b081a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b5ca88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2aabf9b14e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b56d28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2aabf9b1b348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b64020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2aabf9adae00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b15b28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2aabf9af6020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b45020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2aabf9af4348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b3f370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2aabf9afc658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b4d7c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2aabf9b05658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b5ca88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2aabf9b10348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b56d28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2aabf9ad2578"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b15b28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2aabf9ae8658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b45020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2aabf9af17e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b3f370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2aabf9af9af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b4d7c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2aabf9b1d020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b64020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2aabf9af7e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b5ca88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2aabf9aedc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b3f370"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2aabf9adcaf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b15b28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2aabf9ae5c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2aabf9b45020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <from><interface-ref name="wd_task" scoped="" ref="0x2aabf9bb1360"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2aabf9bba510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aabf9e69af8"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabf9e2d648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabf9dfd1a8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabf9dfd1a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfaefcc10"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2aabf9e64e80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aabf9e13290"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2aabfaef51e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfaf02d30"/></to>
    </wire>
    <wire loc="17:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfaf02d30"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x2aabf9bca988"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabfaef7020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9da4610"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabf9da4610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9d9c270"/></to>
    </wire>
    <wire loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="ClientAlarm" scoped="" ref="0x2aabf9bca988"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabf9c1acc0"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2aabf9c14020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabf9d8fe10"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabf9d8fe10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfaf29d68"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfaf29d68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfaf74020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfaf25dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9c97a88"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabf9c97a88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9cb1ad0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfaf20ab0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aabf9c90be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfaf700a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfaf25dd8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfaf6cc28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfaf20ab0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2aabf9ca30c8"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2aabf9cb5e00"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aabf9c90be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2aabf9caa700"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aabf9c90be0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2aabf9cbf988"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aabf9c90be0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2aabf9cbab88"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9cc8148"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9a451e0"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9a432b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabfaca1168"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9a432b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabfa545c68"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9a432b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabfa4b74d8"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9a432b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9f17558"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9a432b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9ccaa50"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabf9d522b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9d69dd8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabf9d69dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabfaf4ccb0"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabf9d96020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9c97a88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfaf4ae70"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabf9d96020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2aabf9dbc450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9d522b0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2aabf9e2a5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2aabf9e7f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aabf9e875e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aabf9ea0978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <from><interface-ref name="SSN" scoped="" ref="0x2aabf9e94dc0"/></from>
      <to><interface-ref name="SSN" scoped="" ref="0x2aabf9fd8220"/></to>
    </wire>
    <wire loc="24:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="SSN" scoped="" ref="0x2aabf9fd8220"/></from>
      <to><interface-ref name="PortG2" scoped="" ref="0x2aabf9b1d020"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2aabf9eb7c20"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2aabf9f06020"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2aabf9ea2020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2aabf9f07020"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aabf9e92918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabf9f08978"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2aabf9e9c668"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2aabf9f075b8"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aabf9ea0978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aabf9fbb748"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aabf9fbb748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aabfaff5100"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabf9fe0550"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabf9f06860"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2aabf9f050a0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2aabf9f238b0"/></to>
    </wire>
    <wire loc="83:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2aabf9f238b0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2aabf9f1b738"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9f03d20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9a451e0"/></to>
    </wire>
    <wire loc="288:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2aabf9f02368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2aabf9f344d8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9a451e0"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2aabf9f17c08"/></from>
      <to><interface-ref name="PortG2" scoped="" ref="0x2aabf9b1d020"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="OSS" scoped="" ref="0x2aabf9f16de0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2aabf9aea348"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2aabf9f13020"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2aabf9ae94d0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2aabf9f12190"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2aabf9ae8658"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2aabf9f35338"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2aabf9ae77e0"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2aabf9fba510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2aabfaff5df8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2aabf9fbac50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2aabfaff4578"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabfaff4e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabf9fe0550"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2aabfaff35d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2aabfaff7328"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2aabfaff2100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="WPN" scoped="" ref="0x2aabf9fd2ca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2aabf9fe7c68"/></to>
    </wire>
    <wire loc="30:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2aabf9fd3b30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2aabf9fe9958"/></to>
    </wire>
    <wire loc="28:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2aabf9fd6688"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2aabf9ae77e0"/></to>
    </wire>
    <wire loc="26:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2aabf9fd74f0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2aabf9ae94d0"/></to>
    </wire>
    <wire loc="29:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2aabf9fd49a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2aabf9fcf5d8"/></to>
    </wire>
    <wire loc="27:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2aabf9fd5810"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2aabf9ae8658"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf9a1d1c8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2aabf9a1a668"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2aabf9994cb8"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aabfa103480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfa0d0b20"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2aabfa0cc850"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2aabfa106020"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2aabfa106020"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2aabf9ae5c78"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2aabfa0cbae0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2aabfa105190"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2aabfa105190"/></from>
      <to><interface-ref name="PortG5" scoped="" ref="0x2aabf9b1a4d0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2aabfa0f6c68"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2aabfa104338"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2aabfa104338"/></from>
      <to><interface-ref name="PortG0" scoped="" ref="0x2aabf9b0c7e0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2aabfa6280f8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2aabfa5d2748"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfa622790"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfa5d9c58"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfa5d9c58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfb023958"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfa621430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa5d8888"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfa5d8888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa187d78"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2aabfa646e58"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2aabfa626898"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfa187d78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa1dcb98"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfa5d7578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa1869b0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfa1869b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa1dd618"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2aabfa5d6bd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa1841a0"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa1841a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa1db888"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfb0225d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfa127a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfb021268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa1869b0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfa127a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfa193e40"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfa192bd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfa1885b0"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfa1885b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfa1aa310"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfa191888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa1869b0"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfa18e020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa187d78"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2aabfa18ec58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2aabfa18d470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfa18b5f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfa2022e8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfa2022e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfa3dcb88"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Protection" scoped="" ref="0x2aabfa17f4c8"/></from>
      <to><interface-ref name="Protection" scoped="" ref="0x2aabfa4256b8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfa1877a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfa1dd060"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="RestartControl" scoped="" ref="0x2aabfa183998"/></from>
      <to><interface-ref name="RestartControl" scoped="" ref="0x2aabfa3fa430"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aabfa205b88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfa3dc5f0"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aabfa1fe298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aabfa182020"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aabfa1d95b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aabfa182020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfa3fb968"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfa2022e8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfa1da308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfa201ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfa1d9020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfa201270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2aabfa1f7168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2aabfa41c080"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2aabfa41c080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2aabfa4183d8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2aabfa218338"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2aabfa41c848"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2aabfa41c848"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2aabfa412498"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2aabfa1f8928"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2aabfa404448"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfa3dcb88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfb0dd0e0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfa201ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfa3dbe78"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfa3dbe78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfb0d2e18"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aabfa3dc5f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfb0deac8"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfa201270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfa3db7e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfa3db7e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfb0d2740"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2aabfa1fc130"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2aabfa3daa80"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2aabfa3daa80"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2aabfb0d0a28"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2aabfa40d740"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2aabfa1f63c8"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2aabfa3d81c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2aabfa1f8928"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aabfa3d8a88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aabfa1fe298"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2aabfa40e0a0"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2aabfa1f7168"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2aabfa40e7c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2aabfa218338"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2aabfb0cf1c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2aabfa3d81c0"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aabfb0d93f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aabfa3d8a88"/></to>
    </wire>
    <wire loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aabfb0cd430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aabfa3d8a88"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2aabfb0c1b98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2aabfa3d8a88"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2aabfb0cfa88"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2aabfb0dc578"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2aabfb0ce3f0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2aabfb0ddb10"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2aabfb0cee60"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2aabfb0dce20"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2aabfb0da450"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2aabfb0c4c80"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2aabfb0d79c8"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2aabfa40d740"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2aabfb0d8a50"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2aabfa40e0a0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2aabfb0c3bf8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2aabfa40e7c0"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x2aabfb0ccb58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aabfb127ac0"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2aabfb127ac0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2aabf9bba510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2aabfb0d67c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2aabfb0d58c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2aabfb0d6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2aabfb0d5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2aabfb0c7ae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2aabfb0c62e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2aabfa416b60"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2aabfa418b90"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2aabfa418b90"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2aabfa474a88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2aabfa412498"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2aabfa4722a8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2aabfa41a4a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2aabfa4114a0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2aabfa4114a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2aabfa4712a8"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2aabfa4183d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2aabfa474328"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabfa411d68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabfa506758"/></to>
    </wire>
    <wire loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabfa506758"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabfa4fe3c0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabfa46e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabfa411d68"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2aabfa4718c0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2aabfa48a060"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2aabfa48a060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2aabfa482020"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2aabfa4700a0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2aabfa48a8b8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2aabfa48a8b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2aabfa4828b8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2aabfa470840"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2aabfa489158"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2aabfa489158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2aabfa481158"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2aabfa487860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2aabfa4b8020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2aabfa4886b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2aabfa4bad98"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2aabfa487020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2aabfa4b96b8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aabfa4b7b48"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aabf9a70790"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2aabfa4b6950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9a451e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2aabfa4b6950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9a451e0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabfa4fe3c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabfa5eb270"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfa5b56d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabfa4f9060"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabfa4f9060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2aabfa522020"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2aabfa5e9450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabfa5b85a8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabfa5b85a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabfb2364f8"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2aabfa52a4f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2aabfa549268"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aabfa52f2c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2aabfa51ec48"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aabfa52f2c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2aabfa519df0"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2aabfa52f2c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2aabfa54e118"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2aabfa544390"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9a451e0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb2346d0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfa5b56d0"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2aabfa61b4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2aabfa63c020"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2aabfa646e58"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2aabfa632020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2aabf9a68598"/></to>
    </wire>
    <wire loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2aabfa632700"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfa18b5f8"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfa67e440"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfa69bb78"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2aabfa65ca80"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2aabfa678c88"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2aabfa678c88"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2aabfa694498"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa6601c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa6777d8"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa6777d8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa693020"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfa6607a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa6755f8"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfa6755f8"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2aabfa690550"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfa666db8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfa67b3c8"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfa67b3c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfa698c30"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2aabfa663b68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2aabfa6781c8"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2aabfa6781c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2aabfa695968"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfa6501d8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfa671318"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfa671318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfa6bc6a8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfa663020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfa6794e8"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfa6794e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfa697dc0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfa656020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfa6a5848"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfa6a5848"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfa6eea48"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa672968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa6c6cf8"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2aabfa657020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2aabfa671db0"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2aabfa671db0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2aabfa6bb2d0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfa65e448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa6732c0"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfa6732c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa692e50"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfa683e48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfa69f758"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfa69f758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfa6e69d8"/></to>
    </wire>
    <wire loc="219:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfa69bb78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfaa2d988"/></to>
    </wire>
    <wire loc="332:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfa6b3348"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfac7f020"/></to>
    </wire>
    <wire loc="278:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfa6e69d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfac0d920"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2aabfa694498"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2aabfa886020"/></to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa693020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa8866f8"/></to>
    </wire>
    <wire loc="137:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2aabfa690550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa88a578"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfa698c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfa889388"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2aabfa695968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2aabfa8877e0"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfa66dbd8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfa6b6020"/></to>
    </wire>
    <wire loc="330:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfa6b6020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfac81b10"/></to>
    </wire>
    <wire loc="220:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfa6bc6a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfaa66060"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfa697dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfa8870c8"/></to>
    </wire>
    <wire loc="277:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfa6eea48"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfac0a598"/></to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfa6a2430"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfa6ef630"/></to>
    </wire>
    <wire loc="334:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfa6ef630"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfac75220"/></to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfa66f828"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfa6bab78"/></to>
    </wire>
    <wire loc="331:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfa6bab78"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfac79860"/></to>
    </wire>
    <wire loc="255:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa6c6cf8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfab60578"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfa6763c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfa693be0"/></to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfa693be0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfa886e10"/></to>
    </wire>
    <wire loc="198:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2aabfa6bb2d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2aabfaa37268"/></to>
    </wire>
    <wire loc="136:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfa692e50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa88b020"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2aabfa670bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2aabfa6ba020"/></to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfa6a4808"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfa6eadb8"/></to>
    </wire>
    <wire loc="333:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfa6eadb8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfac769d0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfa675020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfa692860"/></to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfa692860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfa885550"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfaa2d988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2aabfaa66b30"/></to>
    </wire>
    <wire loc="317:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfa6ea0d0"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfac93b60"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfac7f020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfacab0c8"/></to>
    </wire>
    <wire loc="171:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2aabfa6ce218"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa8c6268"/></to>
    </wire>
    <wire loc="159:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2aabfa6c8020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aabfa8b2d88"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aabfa8b2d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aabfb2ce390"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2aabfa886020"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2aabfb2b7858"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa8866f8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2aabfb2b6020"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfa889388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfb2bacf8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2aabfa8877e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2aabfb2b7180"/></to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2aabfa6bdc80"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2aabfa9c2900"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2aabfa9c2900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2aabfb34c020"/></to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2aabfa6c6060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa8c9340"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfac81b10"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfacafcf0"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfaa66060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfb3bf458"/></to>
    </wire>
    <wire loc="316:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfa6b0838"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfac6aa50"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfa88a578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfb2ba020"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfa8870c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfb2b8a28"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfac0a598"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfb4782d0"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfac75220"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aabfadc1188"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfac79860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfaca5860"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2aabfa6cad80"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2aabfa8c8020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfa886e10"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfb2b6738"/></to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2aabfaa37268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2aabfaa33470"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2aabfaa99bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2aabfb3b59c8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfa88b020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfb2bc888"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfac0d920"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfb47c688"/></to>
    </wire>
    <wire loc="170:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2aabfa6cfaf0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2aabfa8c8c18"/></to>
    </wire>
    <wire loc="105:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfac769d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfaca29d0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfa885550"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfb2b6e50"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfa722858"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfa9c5980"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfa9c5980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfb34f020"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfa71a640"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfa77f2e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aabfa71f8b8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfac0a598"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2aabfa714810"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac867b0"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac867b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfacb0530"/></to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfa7d52d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfac744b8"/></to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfac744b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfadc2160"/></to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfa883a08"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2aabfa6f9b48"/></to>
    </wire>
    <wire loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfa884a50"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2aabfa87cb40"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfa883430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2aabfa920908"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfa885ba8"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2aabfa91f020"/></to>
    </wire>
    <wire loc="148:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2aabfa8b6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2aabfa8b2d88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfa87b618"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2aabfa920020"/></to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfa8c6860"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfa9c5980"/></to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfa8c2740"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2aabfa906230"/></to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfa8c1060"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2aabfa906b18"/></to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aabfa8c3900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2aabfa921120"/></to>
    </wire>
    <wire loc="180:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfa91fe00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfa9f8470"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfa9f8470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfb376d98"/></to>
    </wire>
    <wire loc="181:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfa91e740"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfaa39bd0"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfaa39bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aabfaa355b8"/></to>
    </wire>
    <wire loc="182:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfa91ed18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfa9c1b98"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aabfa9c1b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfb34b268"/></to>
    </wire>
    <wire loc="187:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfa9c0ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfaa37e20"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aabfaa37e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aabfaa35b90"/></to>
    </wire>
    <wire loc="192:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfa9f6580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2aabfa70d5f0"/></to>
    </wire>
    <wire loc="193:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfa9f7510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfaa392e8"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfaa392e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aabfaa36c38"/></to>
    </wire>
    <wire loc="199:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfaa34a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfab60578"/></to>
    </wire>
    <wire loc="200:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfaa36c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfaa68430"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfaa68430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aabfaa655c8"/></to>
    </wire>
    <wire loc="201:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfaa355b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfaa68d18"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfaa68d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aabfaa63020"/></to>
    </wire>
    <wire loc="202:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfaa35b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfaa672e8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aabfaa672e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aabfaa635f8"/></to>
    </wire>
    <wire loc="215:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2aabfaa66b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfaa9b270"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfaa9b270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2aabfb3b7870"/></to>
    </wire>
    <wire loc="216:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfaa655c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfaa9bce0"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfaa9bce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfb3b6a08"/></to>
    </wire>
    <wire loc="217:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfaa63020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfaa99638"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2aabfaa99638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2aabfb3b5430"/></to>
    </wire>
    <wire loc="218:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfaa635f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac06020"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac06020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfb476cd8"/></to>
    </wire>
    <wire loc="228:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aabfaa973f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aabfaaea020"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aabfaaea020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aabfb3f2b58"/></to>
    </wire>
    <wire loc="229:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aabfaa97c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfa9f8d18"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aabfa9f8d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfb3736c8"/></to>
    </wire>
    <wire loc="230:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aabfaa985d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2aabfac32b10"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aabfac32b10"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2aabfac2b020"/></to>
    </wire>
    <wire loc="235:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfa9f7df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfaaea8c8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aabfaaea8c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfb3f0578"/></to>
    </wire>
    <wire loc="244:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfaae7ce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2aabfa706950"/></to>
    </wire>
    <wire loc="245:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfaae80c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aabfab35558"/></to>
    </wire>
    <wire loc="246:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfaae89a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfab57020"/></to>
    </wire>
    <wire loc="247:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfaae70f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfa77f2e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfab42190"/></from>
      <to><interface-ref name="SoftAckAlarm" scoped="" ref="0x2aabfac708e0"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftAckAlarm" scoped="" ref="0x2aabfac708e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfadb0230"/></to>
    </wire>
    <wire loc="253:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2aabfab5dd60"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aabfabfd020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="254:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfab5e060"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfab43180"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="256:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfab5ec58"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2aabfa712468"/></to>
    </wire>
    <wire loc="257:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfab5f020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aabfab79a10"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aabfab79a10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aabfab72020"/></to>
    </wire>
    <wire loc="258:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfab5f908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfab783f0"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aabfab783f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aabfab72908"/></to>
    </wire>
    <wire loc="259:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2aabfab5b7f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac867b0"/></to>
    </wire>
    <wire loc="260:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfab577e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfab35e00"/></to>
    </wire>
    <wire loc="261:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfab4a020"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfa9c5980"/></to>
    </wire>
    <wire loc="262:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2aabfab47020"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2aabfa6d73a8"/></to>
    </wire>
    <wire loc="267:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfab705b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2aabfa6f77b0"/></to>
    </wire>
    <wire loc="268:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfab72020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aabfac30888"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aabfac30888"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aabfac2a020"/></to>
    </wire>
    <wire loc="269:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfab72908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfac2f268"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aabfac2f268"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aabfac2a908"/></to>
    </wire>
    <wire loc="270:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2aabfab710a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2aabfac86020"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2aabfac86020"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2aabfacb1d70"/></to>
    </wire>
    <wire loc="275:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfac05020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfac75220"/></to>
    </wire>
    <wire loc="276:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfac04020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfabfda70"/></to>
    </wire>
    <wire loc="279:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2aabfac04da0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aabfabfd020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="284:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfac36928"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac92700"/></to>
    </wire>
    <wire loc="294:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfac275b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2aabfa6f77b0"/></to>
    </wire>
    <wire loc="295:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfac2a020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aabfac203f0"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aabfac203f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aabfac1a8c8"/></to>
    </wire>
    <wire loc="296:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfac2a908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfac87748"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aabfac87748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfacb15f8"/></to>
    </wire>
    <wire loc="297:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2aabfac2b020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2aabfac215f8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aabfac215f8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2aabfac1ba08"/></to>
    </wire>
    <wire loc="306:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2aabfac1ba08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2aabfac88020"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aabfac88020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2aabfacb3d88"/></to>
    </wire>
    <wire loc="307:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfac1a8c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aabfac88dc0"/></to>
    </wire>
    <wire loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aabfac88dc0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aabfacb2bc0"/></to>
    </wire>
    <wire loc="312:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntCtrlFlag" scoped="" ref="0x2aabfac90618"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aabfabfd020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="313:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfacbee28"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfac93b60"/></to>
    </wire>
    <wire loc="314:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfacc1c80"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfac6aa50"/></to>
    </wire>
    <wire loc="315:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2aabfacbd9c8"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2aabfac6a1e8"/></to>
    </wire>
    <wire loc="318:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfa752998"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfac93b60"/></to>
    </wire>
    <wire loc="319:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfa755698"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfac6aa50"/></to>
    </wire>
    <wire loc="323:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfac8f0c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac867b0"/></to>
    </wire>
    <wire loc="328:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfac6ca48"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2aabfa6d73a8"/></to>
    </wire>
    <wire loc="329:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aabfacc4020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfac0a598"/></to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aabfacbc3c0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aabfabfd020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="337:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2aabfacbb020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aabfabfd020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="338:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aabfacbbb78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2aabfabfd020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfa77f2e8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfb2561a0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfb255020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfa7d52d0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2aabfb251020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2aabfa7e3c30"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aabfb2b2268"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aabfa85b4d8"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfb2b54d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aabfa885ba8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfb2b42a8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aabfa884a50"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfb2b4b90"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aabfa883430"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfb2b32a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aabfa883a08"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2aabfa8b1af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2aabfb2cd0c8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2aabfa8b0268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2aabfb2cd808"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabfb2cc100"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabfa8b0ae8"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2aabfb2cc880"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2aabfb2d05f8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2aabfb2ca470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aabfb34a060"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aabfa85b4d8"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfb34aad0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aabfa9c0ab0"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2aabfb3e5020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2aabfa9dcd70"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2aabfa9dcd70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2aabfa9d6850"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aabfb3e5bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aabfb3e2140"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aabfb3e2140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aabfa9d4b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfb371458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aabfa9f7510"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfb371d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aabfa9f7df8"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2aabfb3704a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aabfa9f6580"/></to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2aabfaa32100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfaa34a10"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aabfb3b4450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2aabfaa985d8"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2aabfb3b3268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2aabfa7e3c30"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2aabfb3b3c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2aabfaa973f0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aabfb3b2578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2aabfaa97c98"/></to>
    </wire>
    <wire loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2aabfb3b04f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2aabfb3b0c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2aabfb3b2d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2aabfb3f0d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2aabfaae80c0"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfb3ed2a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aabfaae7ce8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2aabfb3ef670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aabfaae89a8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfb3efd90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfaae70f0"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2aabfb3ee9d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2aabfaafd690"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2aabfaafd690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2aabfaaf7568"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2aabfb3edd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2aabfaafc668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2aabfaaf8528"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2aabfab02940"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2aabfaafbb40"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfab43180"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfb49d5a0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfb49c4d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfab42190"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2aabfb499528"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2aabfa7e3c30"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfab7b338"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2aabfab76658"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2aabfab78b10"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2aabfab710a0"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2aabfab7abe0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2aabfab73020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aabfab77268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aabfab71800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aabfab76020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aabfab705b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2aabfab7a648"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2aabfab74a08"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2aabfab7bd68"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2aabfab74120"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2aabfb4718a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aabfac04020"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfb4736d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfac05020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2aabfb4728c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aabfabc8380"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2aabfabc8380"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aabfabc6ab0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2aabfb475b30"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2aabfac04da0"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabfabc5c80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9da4610"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfac33268"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2aabfac2d4d0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2aabfac2f988"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2aabfac290a0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac2e0e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aabfac29800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aabfac2ee60"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aabfac275b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2aabfac32578"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2aabfac2c908"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2aabfac33c98"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2aabfac2c020"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2aabfac23d08"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2aabfac1c020"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2aabfac1f3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2aabfac19a08"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac1fb10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2aabfac182a8"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aabfac1e8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aabfac17060"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2aabfac20c98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2aabfac192a8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2aabfac21060"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2aabfac1b430"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2aabfac22780"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2aabfac1ca90"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfadc2160"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfb507ab0"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2aabfac7c3b0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2aabfaca8458"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfadb0230"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfb548ab0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2aabfadc1188"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aabfadbf560"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCalibration" scoped="" ref="0x2aabfac812b8"/></from>
      <to><interface-ref name="RadioCalibration" scoped="" ref="0x2aabfacaf498"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2aabfacf2588"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2aabfac6ca48"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aabfacf1858"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aabfacbc3c0"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2aabfacf04f0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2aabfacbb020"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aabfacef0e0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aabfacbbb78"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aabfacefe50"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aabfacc4020"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2aabfac9f7f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2aabfadc1188"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2aabfac9ca30"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2aabf9ca30c8"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2aabface62b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2aabfa7e3c30"/></to>
    </wire>
    <wire loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2aabfac9d498"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2aabfadc9b28"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2aabface6d68"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9a451e0"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="ExtAmpControl" scoped="" ref="0x2aabface5498"/></from>
      <to><interface-ref name="ExtAmpControl" scoped="" ref="0x2aabfacba860"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfacebb00"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfacc1c80"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabface8c78"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfacbee28"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2aabface7840"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2aabfacbd9c8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2aabfadbe758"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9d522b0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfb507ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfb4ee020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb503b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9c97a88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb4fe610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aabf9c90be0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb4ea0a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb503b18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb4e6c28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb4fe610"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2aabfb548ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2aabfb52f020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb544b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2aabf9c97a88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb53f610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2aabf9c90be0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb52b0a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb544b18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb527c28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb53f610"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfb587400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfb57a790"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfae5b888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfb586020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfb586020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa6607a0"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfb586bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa65e448"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2aabfae59bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2aabfb5842a8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2aabfb5842a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa659af0"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfb579450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfae73020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfb578060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa65e448"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2aabfae73020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2aabfae708a8"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2aabfae6f6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2aabfa666db8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfae6e3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa65e448"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfae6da10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa6607a0"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2aabfae6c780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2aabfae6b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2aabfae4fa28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2aabfa6607a0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2aabfae4e700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2aabfa65e448"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc" safe="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Max706C" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
        <short>&#10; External Watchdog Chip Max706reua&#10;&#10; </short>
        <long>&#10; External Watchdog Chip Max706reua&#10;&#10; @author tango&#10; @date 2013/10/15&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMax706PinsC" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
        <short>&#10; pins connection of Max706 (External WatchDog Component)&#10;&#10; </short>
        <long>&#10; pins connection of Max706 (External WatchDog Component)&#10;&#10; @author tango&#10; @date 2013/12/02&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Max706P" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
        <short>&#10; External Watchdog Chip Max706reua&#10;&#10; </short>
        <long>&#10; External Watchdog Chip Max706reua&#10;&#10; @author tango&#10; @date 2013/10/15&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Max706C.TimerWDC" loc="44(Max706C.TimerWDC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C" loc="7(TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="MuxAlarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.VirtualizeAlarmC" loc="46(MuxAlarm62khz32C_.VirtualizeAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C" loc="37(MuxAlarm62khz32C_.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9c20d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c1d4a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC" loc="35(Counter62khz32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9d68020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9d68748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbOffC" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
        <short>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; </short>
        <long>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; @author tango&#10; @date 2013/06/26&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbOffP" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
        <short>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; </short>
        <long>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; @author tango&#10; @date 2013/06/26&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.SpiMaster" loc="89(Atm128SpiC.SpiMaster):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128SpiP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbPinsC" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
        <short>&#10; HPL implemenation for AT45DB custom pins&#10; </short>
        <long>&#10; HPL implemenation for AT45DB custom pins&#10; @author tango&#10; @date 2013/06/27&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbPinsC.NP0" loc="16(HplAt45dbPinsC.NP0):/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbPinsC.NP1" loc="16(HplAt45dbPinsC.NP1):/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbPinsC.NP2" loc="16(HplAt45dbPinsC.NP2):/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestUsbStationC" loc="11:TestUsbStationC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC" loc="51(SerialDispatcherC.SerialDispatcherCommonC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherCommonC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP" loc="62(SerialDispatcherC.SerialDispatcherCommonC.SerialP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <instance number="0">
        <component-ref qname="SerialP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC" loc="47(SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HdlcTranslateC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC" loc="44(SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SR" loc="1(SerialActiveMessageC.SR):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <instance number="0">
        <component-ref qname="SerialRestartControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SerialProtectorC" loc="11(SerialActiveMessageC.SerialProtectorC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DummySerialProtectorC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short>&#10; Private component of the Atmega1281 serial port HPL.</short>
        <long>&#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC" loc="35(CounterMcu32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2aabf9a91960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP" loc="35(CounterMcu32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9d68020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9d68748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2aabf9a91960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2aabf9a91960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.Timer0" loc="44(TestUsbStationAppC.Timer0):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.RadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a&#10; specific random number generator, it should wire to that component&#10; directly.&#10;&#10; @author  Barbara Hohlt&#10; @author  Phil Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative&#10;  linear congruential generator,&#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1)&#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAddressRecognitionLayerC" loc="11(RFA1RadioC.SoftwareAddressRecognitionLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SoftwareAddressRecognitionLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC" loc="37(RFA1RadioC.SoftwareAckRadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ADLayerC" loc="10(RFA1RadioC.ADLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AntennaDiversityLayerC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9c20d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c1d4a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC" loc="37(RFA1DriverLayerC.SoftAckAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="2">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9c20d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c1d4a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC" loc="47(TestUsbStationAppC.AMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC.SenderC" loc="47(TestUsbStationAppC.AMSenderC.SenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.AMReceiverC" loc="43(TestUsbStationAppC.AMReceiverC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x2aabf9b177f0" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2aabf9b17b58" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2aabf9b27020" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeAlarmC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc" abstract="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9bdccd8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9bdccd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aabf9bd9460" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bd9460"/></type-var>
        </typedef>
        <constant name="num_alarms" ref="0x2aabf9bd9770" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9c20d40" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9c20d40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aabf9c1d4a0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c1d4a0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2aabf9c1d7c0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2aabf9c1daf8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9c47cd8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9c47cd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aabf9c43460" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c43460"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2aabf9c43780" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2aabf9c43ab8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9d68020" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9d68020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aabf9d68748" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9d68748"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2aabf9d68a68" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9d5fbe8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9d5fbe8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aabf9d5c348" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9d5c348"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2aabf9d5c668" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2aabf9d9eab8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2aabf9d9eab8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2aabf9d9b278" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2aabf9d9b278"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2aabf9d9b640" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2aabf9d9b640"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2aabf9d9bdb8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2aabf9d9bdb8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2aabf9d991a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2aabf9d99930" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2aabf9d99930"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2aabf9da2b48" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2aabf9da2b48"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2aabf9db5348" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2aabf9db5348"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2aabf9db5710" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2aabf9db5710"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2aabf9dd2020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2aabf9dd2020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2aabf9dd23c8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9df6370" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9df6370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9e24020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9e24020"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2aabf9e24330" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc" abstract="" safe="">
      <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2aabf9f7b060" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2aabf9f75d98" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2aabfa0f9020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2aabfa1198c0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2aabfa123db0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherCommonC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc" abstract="">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2aabfa1f35c0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
          <component-ref qname="SerialDispatcherCommonC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2aabfa309c88" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
          <component-ref qname="SerialDispatcherP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialRestartControlP" loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummySerialProtectorC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2aabfa5d4e78" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2aabfa5d4e78"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2aabfa5d1200" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAddressRecognitionLayerC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aabfabc4450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabfabc4450"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AntennaDiversityLayerC" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="rxmode_dfl" ref="0x2aabfac69020" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
        <constant name="txmode_dfl" ref="0x2aabfac69378" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2aabfae27a78" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2aabfae205b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2aabfae54398" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2aabf9a67aa8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aabf9a67aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a67df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2aabf9a68598" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aabf9a68598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aabf9a688e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabf9a6a888" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabf9a6a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a6abd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2aabf9a70790" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aabf9a70790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2aabf9a70ae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2aabf9a70c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2aabf9a70df0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2aabf9a63020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2aabf9a631a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2aabf9a63538" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2aabf9a63538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a63888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabf9a73e78" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabf9a73e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a6c1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Max706Init" ref="0x2aabf9a7d340" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Max706Init" scoped="" ref="0x2aabf9a7d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a7d690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbInit" ref="0x2aabf9a7d9b0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbInit" scoped="" ref="0x2aabf9a7d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a7dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2aabf9a6cbd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2aabf9a6cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a7d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x2aabf9a6c578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x2aabf9a6c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a6c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabf9a76560" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabf9a76560"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a768b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2aabf9a75320" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2aabf9a75320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a75670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2aabf9a76c48" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2aabf9a76c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a75020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x2aabf9a9f688" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x2aabf9a9f688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a9f9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabf9aa1ab0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabf9aa1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9aa1e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2aabf9a9f020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2aabf9a9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a9f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2aabf9aa01f0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2aabf9aa01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9aa0540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2aabf9aa0858" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2aabf9aa0858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9aa0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabf9ab0288" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabf9ab0288"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9ab05d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2aabf9ab08b8" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aabf9ab08b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2aabf9ab0c08"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2aabf9ab0d90"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2aabf9aaf020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2aabf9aaf1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2aabf9aaf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x2aabf9a85b80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x2aabf9a85b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9aca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Reflush" ref="0x2aabf9acbc50" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <component-ref qname="Max706C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reflush" scoped="" ref="0x2aabf9acbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aabf9ad8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Max706Init" ref="0x2aabf9acb5c0" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <component-ref qname="Max706C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Max706Init" scoped="" ref="0x2aabf9acb5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9acb910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WDI" ref="0x2aabf9ae2a10" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
      <component-ref qname="HplMax706PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDI" scoped="" ref="0x2aabf9ae2a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ae2d60"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ad4020"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ad41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ad4330"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ad44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ad4640"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ad47c8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ad4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2aabf9b0c7e0" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2aabf9b0c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b0b020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b0b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b0b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b0b4b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b0b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b0b7c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b0b950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b0bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2aabf9afe348" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2aabf9afe348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9afe698"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9afe820"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9afe9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9afeb30"/>
        <function-ref name="get" scoped="" ref="0x2aabf9afecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9afee40"/>
        <function-ref name="set" scoped="" ref="0x2aabf9afd020"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9afd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2aabf9b07348" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2aabf9b07348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b07698"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b07820"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b079a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b07b30"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b07cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b07e40"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b06020"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2aabf9b12020" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2aabf9b12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b12370"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b124f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b12680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b12808"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b12990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b12b18"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b12ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b12e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2aabf9b1a4d0" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2aabf9b1a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b1a820"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b1a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b1ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b1acb8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b1ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b19020"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b191a8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b19330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2aabf9aec020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2aabf9aec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9aec370"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9aec4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9aec680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9aec808"/>
        <function-ref name="get" scoped="" ref="0x2aabf9aec990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9aecb18"/>
        <function-ref name="set" scoped="" ref="0x2aabf9aecca0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9aece28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2aabf9b01c78" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2aabf9b01c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b14020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b141a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b14330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b144b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b14640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b147c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b14950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b14ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2aabf9aea348" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2aabf9aea348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9aea698"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9aea820"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9aea9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9aeab30"/>
        <function-ref name="get" scoped="" ref="0x2aabf9aeacb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9aeae40"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ae9020"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ae91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2aabf9af34d0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2aabf9af34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9af3820"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9af39a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9af3b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9af3cb8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9af3e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9af2020"/>
        <function-ref name="set" scoped="" ref="0x2aabf9af21a8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9af2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2aabf9afb7e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2aabf9afb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9afbb30"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9afbcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9afbe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9afa020"/>
        <function-ref name="get" scoped="" ref="0x2aabf9afa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9afa330"/>
        <function-ref name="set" scoped="" ref="0x2aabf9afa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9afa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2aabf9b047e0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2aabf9b047e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b04b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b04cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b04e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b03020"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b03330"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b034b8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b03640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2aabf9ade7e0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2aabf9ade7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9adeb30"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9adecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9adee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9add020"/>
        <function-ref name="get" scoped="" ref="0x2aabf9add1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9add330"/>
        <function-ref name="set" scoped="" ref="0x2aabf9add4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9add640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2aabf9ae77e0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2aabf9ae77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ae7b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ae7cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ae7e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ae6020"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ae61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ae6330"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ae64b8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ae6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2aabf9af0968" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2aabf9af0968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9af0cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9af0e40"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9aef020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9aef1a8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9aef330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9aef4b8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9aef640"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9aef7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2aabf9af8c78" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2aabf9af8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9af7020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9af71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9af7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9af74b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9af7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9af77c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9af7950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9af7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2aabf9b0e4d0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2aabf9b0e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b0e820"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b0e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b0eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b0ecb8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b0ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b0d020"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b0d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b0d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2aabf9b1c1a0" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2aabf9b1c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b1c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b1c678"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b1c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b1c988"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b1cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b1cc98"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b1ce20"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2aabf9b09020" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2aabf9b09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b09370"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b094f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b09680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b09808"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b09990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b09b18"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b09ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b09e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2aabf9adbc78" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2aabf9adbc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ada020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ada1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ada330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ada4b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ada640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ada7c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ada950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9adaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2aabf9ae4e00" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2aabf9ae4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ae31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ae3330"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ae34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ae3640"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ae37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ae3950"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ae3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ae3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2aabf9b0be00" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2aabf9b0be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b1e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b1e330"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b1e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b1e640"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b1e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b1e950"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b1ead8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b1ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2aabf9af51a0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2aabf9af51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9af54f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9af5678"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9af5800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9af5988"/>
        <function-ref name="get" scoped="" ref="0x2aabf9af5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9af5c98"/>
        <function-ref name="set" scoped="" ref="0x2aabf9af5e20"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9af4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2aabf9afd4d0" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2aabf9afd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9afd820"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9afd9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9afdb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9afdcb8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9afde40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9afc020"/>
        <function-ref name="set" scoped="" ref="0x2aabf9afc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9afc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2aabf9b064d0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2aabf9b064d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b06820"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b069a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b06b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b06cb8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b06e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b05020"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b051a8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b05330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2aabf9b111a0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2aabf9b111a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b114f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b11678"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b11800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b11988"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b11b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b11c98"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b11e20"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2aabf9aeb1a0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2aabf9aeb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9aeb4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9aeb678"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9aeb800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9aeb988"/>
        <function-ref name="get" scoped="" ref="0x2aabf9aebb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9aebc98"/>
        <function-ref name="set" scoped="" ref="0x2aabf9aebe20"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9aea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2aabf9ae94d0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2aabf9ae94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ae9820"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ae99a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ae9b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ae9cb8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ae9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ae8020"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ae81a8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ae8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2aabf9af2658" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2aabf9af2658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9af29a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9af2b30"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9af2cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9af2e40"/>
        <function-ref name="get" scoped="" ref="0x2aabf9af1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9af11a8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9af1330"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9af14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2aabf9afa968" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2aabf9afa968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9afacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9afae40"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9af9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9af91a8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9af9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9af94b8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9af9640"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9af97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2aabf9b03968" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2aabf9b03968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b03cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b03e40"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b02020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b021a8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b02330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b024b8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b02640"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b027c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2aabf9add968" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2aabf9add968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9addcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9adde40"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9adc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9adc1a8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9adc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9adc4b8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9adc640"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9adc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2aabf9ae6968" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2aabf9ae6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ae6db8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ae5020"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ae51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ae5330"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ae54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ae5640"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ae57c8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ae5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2aabf9aefaf0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2aabf9aefaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9aefe40"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9aed020"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9aed1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9aed330"/>
        <function-ref name="get" scoped="" ref="0x2aabf9aed4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9aed640"/>
        <function-ref name="set" scoped="" ref="0x2aabf9aed7c8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9aed950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2aabf9b0d658" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2aabf9b0d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b0d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b0db30"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b0dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b0de40"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b0c1a8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b0c330"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b0c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2aabf9b00e00" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2aabf9b00e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9aff3e8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9aff570"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9aff6f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9aff880"/>
        <function-ref name="get" scoped="" ref="0x2aabf9affa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9affb90"/>
        <function-ref name="set" scoped="" ref="0x2aabf9affd18"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9afe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2aabf9b081a0" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2aabf9b081a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b084f0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b08678"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b08800"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b08988"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b08b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b08c98"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b08e20"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2aabf9b14e00" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2aabf9b14e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b131a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b13330"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b134b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b13640"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b137c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b13950"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b13ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b13c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2aabf9b1b348" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2aabf9b1b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b1b698"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b1b820"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b1b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b1bb30"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b1bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b1be40"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b1a020"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2aabf9adae00" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2aabf9adae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ad91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ad9330"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ad94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ad9640"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ad97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ad9950"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ad9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ad9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2aabf9af6020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2aabf9af6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9af6370"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9af64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9af6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9af6808"/>
        <function-ref name="get" scoped="" ref="0x2aabf9af6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9af6b18"/>
        <function-ref name="set" scoped="" ref="0x2aabf9af6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9af6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2aabf9b02af0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2aabf9b02af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b02e40"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b01020"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b011a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b01330"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b014b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b01640"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b017c8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b01950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2aabf9af4348" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2aabf9af4348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9af4698"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9af4820"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9af49a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9af4b30"/>
        <function-ref name="get" scoped="" ref="0x2aabf9af4cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9af4e40"/>
        <function-ref name="set" scoped="" ref="0x2aabf9af3020"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9af31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2aabf9afc658" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2aabf9afc658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9afc9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9afcb30"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9afccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9afce40"/>
        <function-ref name="get" scoped="" ref="0x2aabf9afb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9afb1a8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9afb330"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9afb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2aabf9b05658" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2aabf9b05658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b059a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b05b30"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b05cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b05e40"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b04020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b041a8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b04330"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b044b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2aabf9b10348" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2aabf9b10348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b10698"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b10820"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b109a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b10b30"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b10cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b10e40"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b0e020"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2aabf9ad2578" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2aabf9ad2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ad28c8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ad2a50"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ad2bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ad2d60"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ade020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ade1a8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ade330"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ade4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2aabf9ae8658" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2aabf9ae8658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ae89a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ae8b30"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ae8cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ae8e40"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ae7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ae71a8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ae7330"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ae74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2aabf9af17e0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2aabf9af17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9af1b30"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9af1cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9af1e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9af0020"/>
        <function-ref name="get" scoped="" ref="0x2aabf9af01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9af0330"/>
        <function-ref name="set" scoped="" ref="0x2aabf9af04b8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9af0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2aabf9af9af0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2aabf9af9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9af9e40"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9af8020"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9af81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9af8330"/>
        <function-ref name="get" scoped="" ref="0x2aabf9af84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9af8640"/>
        <function-ref name="set" scoped="" ref="0x2aabf9af87c8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9af8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2aabf9b1d020" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2aabf9b1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b1d370"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b1d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b1d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b1d808"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b1d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b1db18"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b1dca0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b1de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2aabf9af7e00" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2aabf9af7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b0a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b0a330"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b0a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b0a640"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b0a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b0a950"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b0aad8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b0ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2aabf9aedc78" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2aabf9aedc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b00020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b001a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b00330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b004b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b00640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b007c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b00950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b00ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2aabf9adcaf0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2aabf9adcaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9adce40"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9adb020"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9adb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9adb330"/>
        <function-ref name="get" scoped="" ref="0x2aabf9adb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9adb640"/>
        <function-ref name="set" scoped="" ref="0x2aabf9adb7c8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9adb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2aabf9ae5c78" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2aabf9ae5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ae4020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ae41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ae4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ae44b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ae4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ae47c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ae4950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ae4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2aabf9b15b28" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2aabf9b15b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b38020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b381a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b38330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b384b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b38640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b387c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b38950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b38ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2aabf9b45020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2aabf9b45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b45390"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b45518"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b456a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b45828"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b459b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b45b38"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b45cc0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b45e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2aabf9b3f370" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2aabf9b3f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b3f6e0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b3f868"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b3f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b3fb78"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b3fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b3d020"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b3d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b3d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2aabf9b4d7c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2aabf9b4d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b4db30"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b4dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b4de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b4c020"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b4c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b4c330"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b4c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b4c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2aabf9b5ca88" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2aabf9b5ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b5cdf8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b5b020"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b5b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b5b330"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b5b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b5b640"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b5b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b5b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2aabf9b56d28" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2aabf9b56d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b540d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b54260"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b543e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b54570"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b546f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b54880"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b54a08"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b54b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2aabf9b64020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2aabf9b64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9b64390"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9b64518"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9b646a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9b64828"/>
        <function-ref name="get" scoped="" ref="0x2aabf9b649b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9b64b38"/>
        <function-ref name="set" scoped="" ref="0x2aabf9b64cc0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9b64e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wd_task" ref="0x2aabf9bb1360" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wd_task" scoped="" ref="0x2aabf9bb1360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabf9bb16b0"/>
        <function-ref name="runTask" scoped="" ref="0x2aabf9bb1838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2aabf9ad6b20" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aabf9ad6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aabf9ad6e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Reflush" ref="0x2aabf9b9b1d8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reflush" scoped="" ref="0x2aabf9b9b1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aabf9b9b528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabf9ad6518" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabf9ad6518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9ad6868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerWD" ref="0x2aabf9ba6dd8" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerWD" scoped="" ref="0x2aabf9ba6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9ba30c0"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9b99798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabf9ba44d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabf9ba4088"/>
        <function-ref name="getdt" scoped="" ref="0x2aabf9ba3960"/>
        <function-ref name="gett0" scoped="" ref="0x2aabf9ba3510"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9b99be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabf9b9a9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabf9ba4aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabf9b9ae80"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9b99348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WDI" ref="0x2aabf9ba3e38" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDI" scoped="" ref="0x2aabf9ba3e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9ba21c0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9ba2348"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9ba24d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9ba2658"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ba27e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9ba2968"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ba2af0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9ba2c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aabf9e7c128" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Max706C.TimerWDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aabf9e7c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9e785f0"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9e7ba48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabf9e798c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabf9e79470"/>
        <function-ref name="getdt" scoped="" ref="0x2aabf9e77020"/>
        <function-ref name="gett0" scoped="" ref="0x2aabf9e78a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9e79020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabf9e7cc70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabf9e78020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabf9e7b158"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9e7b5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2aabf9bba510" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2aabf9bba510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9bb6768"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9bb9e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabf9bb7b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabf9bb7728"/>
        <function-ref name="getdt" scoped="" ref="0x2aabf9bb5088"/>
        <function-ref name="gett0" scoped="" ref="0x2aabf9bb6bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9bb72d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabf9bb9088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabf9bb6198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabf9bb9528"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9bb99c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabf9dfd1a8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabf9dfd1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9dfa918"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9dfc980"/>
        <function-ref name="startAt" scoped="" ref="0x2aabf9dfa310"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9dfce08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabf9dfada0"/>
        <function-ref name="start" scoped="" ref="0x2aabf9dfc020"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9dfc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfaf02d30" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfaf02d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfaefe410"/>
        <function-ref name="fired" scoped="" ref="0x2aabfaeff4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfaeffdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfaeff930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfaefe898"/>
        <function-ref name="start" scoped="" ref="0x2aabfaf00ac0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaeff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientAlarm" ref="0x2aabf9bca988" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <component-ref qname="MuxAlarm62khz32C_"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClientAlarm" scoped="" ref="0x2aabf9bca988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9bde020"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9bdf0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2aabf9bdf9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9bdf548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabf9bde4a8"/>
        <function-ref name="start" scoped="" ref="0x2aabf9bc9730"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9bc9c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabf9c1acc0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabf9c1acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9c16470"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9c184c8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabf9c18e18"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9c18970"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabf9c16918"/>
        <function-ref name="start" scoped="" ref="0x2aabf9c19ac0"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9c18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabf9c1a378" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabf9c1a378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9c1a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2aabf9c14020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2aabf9c14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9c12690"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9c136f8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabf9c12088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9c13b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabf9c12b18"/>
        <function-ref name="start" scoped="" ref="0x2aabf9c14d70"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9c13270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabf9d8fe10" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabf9d8fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9d8c628"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9d8d580"/>
        <function-ref name="startAt" scoped="" ref="0x2aabf9d8c020"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9d8da08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabf9d8cab0"/>
        <function-ref name="start" scoped="" ref="0x2aabf9d8ebe8"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9d8d0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2aabfaf20ab0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfaf20ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfaf1cb80"/>
        <function-ref name="test" scoped="" ref="0x2aabfaf1e4a8"/>
        <function-ref name="fired" scoped="" ref="0x2aabfaf1e020"/>
        <function-ref name="force" scoped="" ref="0x2aabfaf1b510"/>
        <function-ref name="get" scoped="" ref="0x2aabfaf1f658"/>
        <function-ref name="reset" scoped="" ref="0x2aabfaf1e930"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfaf1b088"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfaf1c6f8"/>
        <function-ref name="set" scoped="" ref="0x2aabfaf1fae0"/>
        <function-ref name="start" scoped="" ref="0x2aabfaf1edb8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaf1c270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfaf29d68" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfaf29d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfaf25410"/>
        <function-ref name="fired" scoped="" ref="0x2aabfaf274a8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfaf27db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfaf27930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfaf25898"/>
        <function-ref name="start" scoped="" ref="0x2aabfaf28af8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaf27020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabfaf25dd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfaf25dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfaf200f8"/>
        <function-ref name="test" scoped="" ref="0x2aabfaf23980"/>
        <function-ref name="get" scoped="" ref="0x2aabfaf24a18"/>
        <function-ref name="reset" scoped="" ref="0x2aabfaf23e08"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfaf205d0"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfaf234f8"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfaf22c20"/>
        <function-ref name="set" scoped="" ref="0x2aabfaf23020"/>
        <function-ref name="start" scoped="" ref="0x2aabfaf22310"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaf22798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2aabfaf6cc28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfaf6cc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfaf68db8"/>
        <function-ref name="test" scoped="" ref="0x2aabfaf69658"/>
        <function-ref name="fired" scoped="" ref="0x2aabfaf691d0"/>
        <function-ref name="force" scoped="" ref="0x2aabfaf67778"/>
        <function-ref name="get" scoped="" ref="0x2aabfaf6b820"/>
        <function-ref name="reset" scoped="" ref="0x2aabfaf69ae0"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfaf672f0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfaf68930"/>
        <function-ref name="set" scoped="" ref="0x2aabfaf6bca8"/>
        <function-ref name="start" scoped="" ref="0x2aabfaf68020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaf684a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfaf74020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfaf74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfaf71690"/>
        <function-ref name="fired" scoped="" ref="0x2aabfaf736f8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfaf71088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfaf73b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfaf71b18"/>
        <function-ref name="start" scoped="" ref="0x2aabfaf74d70"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaf73270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfaf75848" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfaf75848"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfaf75b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabfaf700a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfaf700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfaf6c270"/>
        <function-ref name="test" scoped="" ref="0x2aabfaf6fa58"/>
        <function-ref name="get" scoped="" ref="0x2aabfaf70c20"/>
        <function-ref name="reset" scoped="" ref="0x2aabfaf6d020"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfaf6c748"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfaf6f5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfaf6ddb8"/>
        <function-ref name="set" scoped="" ref="0x2aabfaf6f0f8"/>
        <function-ref name="start" scoped="" ref="0x2aabfaf6d4a8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaf6d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabf9c97a88" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabf9c97a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabf9c91b80"/>
        <function-ref name="test" scoped="" ref="0x2aabf9c924a8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9c94658"/>
        <function-ref name="reset" scoped="" ref="0x2aabf9c92930"/>
        <function-ref name="getMode" scoped="" ref="0x2aabf9c90088"/>
        <function-ref name="overflow" scoped="" ref="0x2aabf9c92020"/>
        <function-ref name="isOn" scoped="" ref="0x2aabf9c916f8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9c94ae0"/>
        <function-ref name="start" scoped="" ref="0x2aabf9c92db8"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9c91270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2aabf9ca30c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2aabf9ca30c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabf9cb2270"/>
        <function-ref name="test" scoped="" ref="0x2aabf9ca2a58"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9ca25d0"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ca3c48"/>
        <function-ref name="reset" scoped="" ref="0x2aabf9c9a020"/>
        <function-ref name="getMode" scoped="" ref="0x2aabf9cb2748"/>
        <function-ref name="isOn" scoped="" ref="0x2aabf9c9adb8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ca20f8"/>
        <function-ref name="start" scoped="" ref="0x2aabf9c9a4a8"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9c9a930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aabf9c90be0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2aabf9c90be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabf9ca6db8"/>
        <function-ref name="test" scoped="" ref="0x2aabf9c8d5b8"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9c8d130"/>
        <function-ref name="force" scoped="" ref="0x2aabf9ca4778"/>
        <function-ref name="get" scoped="" ref="0x2aabf9c8e7a0"/>
        <function-ref name="reset" scoped="" ref="0x2aabf9c8da40"/>
        <function-ref name="getMode" scoped="" ref="0x2aabf9ca42f0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabf9ca6930"/>
        <function-ref name="set" scoped="" ref="0x2aabf9c8ec28"/>
        <function-ref name="start" scoped="" ref="0x2aabf9ca6020"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9ca64a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2aabf9caa700" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2aabf9caa700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabf9cc0930"/>
        <function-ref name="test" scoped="" ref="0x2aabf9ca81f8"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9ca9d08"/>
        <function-ref name="force" scoped="" ref="0x2aabf9cbf310"/>
        <function-ref name="get" scoped="" ref="0x2aabf9ca93a8"/>
        <function-ref name="reset" scoped="" ref="0x2aabf9ca8680"/>
        <function-ref name="getMode" scoped="" ref="0x2aabf9cc0e08"/>
        <function-ref name="isOn" scoped="" ref="0x2aabf9cc04a8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ca9830"/>
        <function-ref name="start" scoped="" ref="0x2aabf9ca8b08"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9cc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2aabf9ccaa50" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9ccaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aabf9ccada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2aabf9cbf988" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2aabf9cbf988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabf9cbbb80"/>
        <function-ref name="test" scoped="" ref="0x2aabf9cbd4a8"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9cbd020"/>
        <function-ref name="force" scoped="" ref="0x2aabf9cba510"/>
        <function-ref name="get" scoped="" ref="0x2aabf9cbe560"/>
        <function-ref name="reset" scoped="" ref="0x2aabf9cbd930"/>
        <function-ref name="getMode" scoped="" ref="0x2aabf9cba088"/>
        <function-ref name="isOn" scoped="" ref="0x2aabf9cbb6f8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9cbe9e8"/>
        <function-ref name="start" scoped="" ref="0x2aabf9cbddb8"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9cbb270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabf9cb1ad0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabf9cb1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabf9cacb80"/>
        <function-ref name="test" scoped="" ref="0x2aabf9cad4a8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9cae690"/>
        <function-ref name="reset" scoped="" ref="0x2aabf9cad930"/>
        <function-ref name="getMode" scoped="" ref="0x2aabf9caa088"/>
        <function-ref name="overflow" scoped="" ref="0x2aabf9cad020"/>
        <function-ref name="isOn" scoped="" ref="0x2aabf9cac6f8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9caeb18"/>
        <function-ref name="start" scoped="" ref="0x2aabf9caddb8"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9cac270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2aabf9cc8148" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9cc8148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aabf9cc8498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2aabf9cb5e00" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2aabf9cb5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabf9cca0f8"/>
        <function-ref name="test" scoped="" ref="0x2aabf9ccc980"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9ccc4f8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9cb4a18"/>
        <function-ref name="reset" scoped="" ref="0x2aabf9ccce08"/>
        <function-ref name="getMode" scoped="" ref="0x2aabf9cca5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabf9ccbc20"/>
        <function-ref name="set" scoped="" ref="0x2aabf9ccc020"/>
        <function-ref name="start" scoped="" ref="0x2aabf9ccb310"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9ccb798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2aabf9cbab88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2aabf9cbab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabf9cb6db8"/>
        <function-ref name="test" scoped="" ref="0x2aabf9cb7580"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9cb70f8"/>
        <function-ref name="force" scoped="" ref="0x2aabf9cb5778"/>
        <function-ref name="get" scoped="" ref="0x2aabf9cb9760"/>
        <function-ref name="reset" scoped="" ref="0x2aabf9cb7a08"/>
        <function-ref name="getMode" scoped="" ref="0x2aabf9cb52f0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabf9cb6930"/>
        <function-ref name="set" scoped="" ref="0x2aabf9cb9be8"/>
        <function-ref name="start" scoped="" ref="0x2aabf9cb6020"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9cb64a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2aabf9a432b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9a432b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aabf9a43600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabf9a47468" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabf9a47468"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2aabf9899e78"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2aabf9899e78"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabf9a477b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabf9a47940"/>
        <function-ref name="led1On" scoped="" ref="0x2aabf9a47ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabf9a47c50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabf9a47dd8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9a46020"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabf9a461a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabf9a467c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9a46330"/>
        <function-ref name="led0On" scoped="" ref="0x2aabf9a464b8"/>
        <function-ref name="led2On" scoped="" ref="0x2aabf9a46640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2aabf9994cb8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2aabf9994cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aabf9a380a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2aabf9a451e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9a451e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aabf9a45530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabf9d522b0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabf9d522b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabf9d4e088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabf9d4e998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabf9d4e510"/>
        <function-ref name="overflow" scoped="" ref="0x2aabf9d4ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabf9d69dd8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabf9d69dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabf9d7abe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabf9d79548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabf9d790c0"/>
        <function-ref name="overflow" scoped="" ref="0x2aabf9d799d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabf9d96020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabf9d96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabf9d920f8"/>
        <function-ref name="test" scoped="" ref="0x2aabf9d949e8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9d96ba0"/>
        <function-ref name="reset" scoped="" ref="0x2aabf9d94e70"/>
        <function-ref name="getMode" scoped="" ref="0x2aabf9d925d0"/>
        <function-ref name="overflow" scoped="" ref="0x2aabf9d94560"/>
        <function-ref name="isOn" scoped="" ref="0x2aabf9d93c30"/>
        <function-ref name="set" scoped="" ref="0x2aabf9d94088"/>
        <function-ref name="start" scoped="" ref="0x2aabf9d93320"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9d937a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfaf4c508" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfaf4c508"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfaf4c858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabfaf4ccb0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfaf4ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfaf4ba28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfaf4a4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfaf4a020"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfaf4a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabfaf4ae70" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfaf4ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfafac0f8"/>
        <function-ref name="test" scoped="" ref="0x2aabfafaf980"/>
        <function-ref name="get" scoped="" ref="0x2aabfafb0a18"/>
        <function-ref name="reset" scoped="" ref="0x2aabfafafe08"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfafac5d0"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfafaf4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfafaec20"/>
        <function-ref name="set" scoped="" ref="0x2aabfafaf020"/>
        <function-ref name="start" scoped="" ref="0x2aabfafae310"/>
        <function-ref name="stop" scoped="" ref="0x2aabfafae798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabf9da4610" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabf9da4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabf9da13a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabf9da1cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabf9da1830"/>
        <function-ref name="overflow" scoped="" ref="0x2aabf9d9f190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2aabf9dbc450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2aabf9dbc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabf9dbb1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabf9dbbae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabf9dbb658"/>
        <function-ref name="overflow" scoped="" ref="0x2aabf9db9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabf9d9c270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabf9d9c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabf9dbd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabf9dbd930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabf9dbd4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2aabf9dbddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfaefcc10" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfaefcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfaef8410"/>
        <function-ref name="fired" scoped="" ref="0x2aabfaefa4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfaefadb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfaefa930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfaef8898"/>
        <function-ref name="start" scoped="" ref="0x2aabfaefb9f0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaefa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2aabfaef51e8" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2aabfaef51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfaef2918"/>
        <function-ref name="fired" scoped="" ref="0x2aabfaef4980"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfaef2310"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfaef4e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfaef2da0"/>
        <function-ref name="start" scoped="" ref="0x2aabfaef4020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaef44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aabfaef7020" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfaef7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfaef7d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfaef66b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfaef6230"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfaef6b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2aabf9e2a5e8" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2aabf9e2a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabf9e2a938"/>
        <function-ref name="runTask" scoped="" ref="0x2aabf9e2aac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aabf9e2d648" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabf9e2d648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9e2bcc0"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9e2cd50"/>
        <function-ref name="startAt" scoped="" ref="0x2aabf9e2b6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9e2b230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabf9e2a190"/>
        <function-ref name="start" scoped="" ref="0x2aabf9e2c3f0"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9e2c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aabf9e13290" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aabf9e13290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9e2f5f0"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9e31ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabf9e308c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabf9e30470"/>
        <function-ref name="getdt" scoped="" ref="0x2aabf9e2d020"/>
        <function-ref name="gett0" scoped="" ref="0x2aabf9e2fa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9e30020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabf9e13dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabf9e2f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabf9e312b8"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9e31758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2aabf9e7f020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2aabf9e7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabf9e7f370"/>
        <function-ref name="runTask" scoped="" ref="0x2aabf9e7f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2aabf9e64e80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2aabf9e64e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9e80238"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9e83910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabf9e82648"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabf9e821f8"/>
        <function-ref name="getdt" scoped="" ref="0x2aabf9e80ad8"/>
        <function-ref name="gett0" scoped="" ref="0x2aabf9e80688"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9e83d60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabf9e849f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabf9e82c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabf9e83020"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9e834c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aabf9e69af8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aabf9e69af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabf9e64020"/>
        <function-ref name="fired" scoped="" ref="0x2aabf9e67530"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabf9e652d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabf9e67e10"/>
        <function-ref name="getdt" scoped="" ref="0x2aabf9e64900"/>
        <function-ref name="gett0" scoped="" ref="0x2aabf9e64490"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabf9e679a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabf9e686f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabf9e658c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabf9e68bb0"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9e670c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbOff" ref="0x2aabf9e75820" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <component-ref qname="At45dbOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbOff" scoped="" ref="0x2aabf9e75820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9e75b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x2aabf9ea5270" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x2aabf9ea5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2aabf9ea55c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2aabf9e8e1b0" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2aabf9e8e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9e8e500"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9e8e688"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9e8e810"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9e8e998"/>
        <function-ref name="get" scoped="" ref="0x2aabf9e8eb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9e8eca8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9e8ee30"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9e8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbOff" ref="0x2aabf9e94728" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbOff" scoped="" ref="0x2aabf9e94728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9e94a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2aabf9e8f020" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2aabf9e8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9e8f370"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9e8f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9e8f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9e8f808"/>
        <function-ref name="get" scoped="" ref="0x2aabf9e8f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9e8fb18"/>
        <function-ref name="set" scoped="" ref="0x2aabf9e8fca0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9e8fe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SSN" ref="0x2aabf9e94dc0" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SSN" scoped="" ref="0x2aabf9e94dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9e91170"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9e912f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9e91480"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9e91608"/>
        <function-ref name="get" scoped="" ref="0x2aabf9e91790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9e91918"/>
        <function-ref name="set" scoped="" ref="0x2aabf9e91aa0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9e91c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2aabf9e875e8" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aabf9e875e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aabf9e87938"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aabf9e87ac0"/>
        <function-ref name="request" scoped="" ref="0x2aabf9e87c48"/>
        <function-ref name="granted" scoped="" ref="0x2aabf9e87dd0"/>
        <function-ref name="isOwner" scoped="" ref="0x2aabf9e8b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2aabf9e8d378" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2aabf9e8d378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9e8d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9e8d850"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9e8d9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9e8db60"/>
        <function-ref name="get" scoped="" ref="0x2aabf9e8dce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9e8de70"/>
        <function-ref name="set" scoped="" ref="0x2aabf9e8c020"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9e8c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2aabf9eb7c20" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2aabf9eb7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabf9ea0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabf9ea01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2aabf9ea2020" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2aabf9ea2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2aabf9ea2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabf9e92918" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabf9e92918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9e92c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2aabf9e9c668" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2aabf9e9c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2aabf9e9c9b8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2aabf9e9cb40"/>
        <function-ref name="splitRead" scoped="" ref="0x2aabf9e9ccc8"/>
        <function-ref name="write" scoped="" ref="0x2aabf9e9ce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aabf9ea0978" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aabf9ea0978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aabf9ea0cc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aabf9ea0e50"/>
        <function-ref name="request" scoped="" ref="0x2aabf9e9b020"/>
        <function-ref name="granted" scoped="" ref="0x2aabf9e9b1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2aabf9e9b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2aabf9f06860" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabf9f06860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aabf9f06bd0"/>
        <function-ref name="configure" scoped="" ref="0x2aabf9f06d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2aabf9f02368" loc="288:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2aabf9f02368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabf9f026b8"/>
        <function-ref name="runTask" scoped="" ref="0x2aabf9f02840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2aabf9f06020" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2aabf9f06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabf9f06370"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabf9f064f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2aabf9f07020" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2aabf9f07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2aabf9f07370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabf9f08978" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabf9f08978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9f08cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2aabf9f050a0" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2aabf9f050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2aabf9f053f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2aabf9f03950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2aabf9f05700"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2aabf9f03ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2aabf9f05a10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2aabf9f05b98"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2aabf9f05d20"/>
        <function-ref name="read" scoped="" ref="0x2aabf9f04020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2aabf9f041a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2aabf9f04330"/>
        <function-ref name="setClock" scoped="" ref="0x2aabf9f044b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aabf9f04640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2aabf9f047c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2aabf9f04a50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2aabf9f04bd8"/>
        <function-ref name="write" scoped="" ref="0x2aabf9f04d60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2aabf9f03020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2aabf9f031a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2aabf9f03330"/>
        <function-ref name="getClock" scoped="" ref="0x2aabf9f034b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2aabf9f03640"/>
        <function-ref name="sleep" scoped="" ref="0x2aabf9f05578"/>
        <function-ref name="dataReady" scoped="" ref="0x2aabf9f05888"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2aabf9f037c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2aabf9f075b8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2aabf9f075b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2aabf9f07908"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2aabf9f07a90"/>
        <function-ref name="splitRead" scoped="" ref="0x2aabf9f07c18"/>
        <function-ref name="write" scoped="" ref="0x2aabf9f07da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2aabf9f03d20" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aabf9f03d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aabf9f020a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2aabf9f238b0" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2aabf9f238b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2aabf9f23c00"/>
        <function-ref name="sleep" scoped="" ref="0x2aabf9f1e1a8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2aabf9f20020"/>
        <function-ref name="dataReady" scoped="" ref="0x2aabf9f1e330"/>
        <function-ref name="initMaster" scoped="" ref="0x2aabf9f20330"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2aabf9f204b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2aabf9f20640"/>
        <function-ref name="read" scoped="" ref="0x2aabf9f207c8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2aabf9f20950"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2aabf9f20ad8"/>
        <function-ref name="setClock" scoped="" ref="0x2aabf9f20c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aabf9f20de8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2aabf9f1f020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2aabf9f1f2a8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2aabf9f1f430"/>
        <function-ref name="write" scoped="" ref="0x2aabf9f1f5b8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2aabf9f1f740"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2aabf9f1f8c8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2aabf9f1fa50"/>
        <function-ref name="getClock" scoped="" ref="0x2aabf9f1fbd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2aabf9f1fd60"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2aabf9f23d88"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2aabf9f201a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2aabf9f1e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2aabf9f12190" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2aabf9f12190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9f124e0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9f12668"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9f127f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9f12978"/>
        <function-ref name="get" scoped="" ref="0x2aabf9f12b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9f12c88"/>
        <function-ref name="set" scoped="" ref="0x2aabf9f12e10"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9f35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2aabf9f35338" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2aabf9f35338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9f35688"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9f35810"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9f35998"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9f35b20"/>
        <function-ref name="get" scoped="" ref="0x2aabf9f35ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9f35e30"/>
        <function-ref name="set" scoped="" ref="0x2aabf9f34020"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9f341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2aabf9f17558" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabf9f17558"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aabf9f178a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2aabf9f13020" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2aabf9f13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9f13370"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9f134f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9f13680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9f13808"/>
        <function-ref name="get" scoped="" ref="0x2aabf9f13990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9f13b18"/>
        <function-ref name="set" scoped="" ref="0x2aabf9f13ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9f13e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2aabf9f17c08" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2aabf9f17c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9f16020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9f161a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9f16330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9f164b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9f16640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9f167c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9f16950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9f16ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2aabf9f15cc8" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2aabf9f15cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabf9f170a0"/>
        <function-ref name="stop" scoped="" ref="0x2aabf9f17228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2aabf9f344d8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2aabf9f344d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aabf9f34828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2aabf9f1b738" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2aabf9f1b738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2aabf9f1ba88"/>
        <function-ref name="sleep" scoped="" ref="0x2aabf9f18020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2aabf9f1bd98"/>
        <function-ref name="dataReady" scoped="" ref="0x2aabf9f181a8"/>
        <function-ref name="initMaster" scoped="" ref="0x2aabf9f1a1a8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2aabf9f1a330"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2aabf9f1a4b8"/>
        <function-ref name="read" scoped="" ref="0x2aabf9f1a640"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2aabf9f1a7c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2aabf9f1a950"/>
        <function-ref name="setClock" scoped="" ref="0x2aabf9f1aad8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2aabf9f1ac60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2aabf9f1ade8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2aabf9f19120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2aabf9f192a8"/>
        <function-ref name="write" scoped="" ref="0x2aabf9f19430"/>
        <function-ref name="enableSpi" scoped="" ref="0x2aabf9f195b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2aabf9f19740"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2aabf9f198c8"/>
        <function-ref name="getClock" scoped="" ref="0x2aabf9f19a50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2aabf9f19bd8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2aabf9f1bc10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2aabf9f1a020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2aabf9f19d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OSS" ref="0x2aabf9f16de0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OSS" scoped="" ref="0x2aabf9f16de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9f14170"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9f142f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9f14480"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9f14608"/>
        <function-ref name="get" scoped="" ref="0x2aabf9f14790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9f14918"/>
        <function-ref name="set" scoped="" ref="0x2aabf9f14aa0"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9f14c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aabf9fba510" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aabf9fba510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aabf9fba880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aabf9fbaa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aabf9fe0550" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabf9fe0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aabf9fe08c0"/>
        <function-ref name="configure" scoped="" ref="0x2aabf9fe0a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aabf9fbb748" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aabf9fbb748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aabf9fbbab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aabf9fbbc40"/>
        <function-ref name="request" scoped="" ref="0x2aabf9fbbdc8"/>
        <function-ref name="granted" scoped="" ref="0x2aabf9fba020"/>
        <function-ref name="isOwner" scoped="" ref="0x2aabf9fba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aabf9fbac50" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aabf9fbac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aabf9fe0020"/>
        <function-ref name="userId" scoped="" ref="0x2aabf9fe01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfaff8d08" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfaff8d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfaff70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2aabfaff7328" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2aabfaff7328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aabfaff7678"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aabfaff7800"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aabfaff7988"/>
        <function-ref name="dequeue" scoped="" ref="0x2aabfaff7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aabfaff5df8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aabfaff5df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aabfaff41a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aabfaff4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aabfaff4e18" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabfaff4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aabfaff31c0"/>
        <function-ref name="configure" scoped="" ref="0x2aabfaff3348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2aabfaff35d0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2aabfaff35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aabfaff3920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aabfaff3aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aabfaff3c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2aabfaff3db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aabfaff5100" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aabfaff5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aabfaff5470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aabfaff55f8"/>
        <function-ref name="request" scoped="" ref="0x2aabfaff5780"/>
        <function-ref name="granted" scoped="" ref="0x2aabfaff5908"/>
        <function-ref name="isOwner" scoped="" ref="0x2aabfaff5a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aabfaff4578" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aabfaff4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aabfaff48c8"/>
        <function-ref name="userId" scoped="" ref="0x2aabfaff4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2aabfaff2100" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2aabfaff2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfaff2450"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfaff25d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WPN" ref="0x2aabf9fd2ca8" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WPN" scoped="" ref="0x2aabf9fd2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fd1020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fd11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fd1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fd14b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fd1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fd17c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fd1950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fd1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2aabf9fd3b30" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2aabf9fd3b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fd3e80"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fd2030"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fd21b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fd2340"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fd24c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fd2650"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fd27d8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fd2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MISO" ref="0x2aabf9fd6688" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2aabf9fd6688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fd69d8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fd6b60"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fd6ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fd6e70"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fd5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fd51a8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fd5330"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fd54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x2aabf9fd74f0" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2aabf9fd74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fd7840"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fd79c8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fd7b50"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fd7cd8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fd7e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fd6020"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fd61a8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fd6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SSN" ref="0x2aabf9fd8220" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SSN" scoped="" ref="0x2aabf9fd8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fd8570"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fd86f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fd8880"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fd8a08"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fd8b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fd8d18"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fd7020"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x2aabf9fd49a0" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2aabf9fd49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fd4cf0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fd4e78"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fd3030"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fd31b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fd3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fd34c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fd3650"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fd37d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MOSI" ref="0x2aabf9fd5810" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2aabf9fd5810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fd5b60"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fd5ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fd5e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fd4020"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fd41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fd4330"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fd44b8"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fd4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2aabf9fcf5d8" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <component-ref qname="HplAt45dbPinsC.NP0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x2aabf9fcf5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fcf928"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fcfab0"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fcfc38"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fcfdc0"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fce1a8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fce330"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fce4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2aabf9fe9958" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <component-ref qname="HplAt45dbPinsC.NP1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x2aabf9fe9958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fe9ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fe9e30"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fe8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fe81a8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fe8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fe84b8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fe8640"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fe87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2aabf9fe7c68" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <component-ref qname="HplAt45dbPinsC.NP2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x2aabf9fe7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabf9fe6020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabf9fe61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabf9fe6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabf9fe64b8"/>
        <function-ref name="get" scoped="" ref="0x2aabf9fe6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabf9fe67c8"/>
        <function-ref name="set" scoped="" ref="0x2aabf9fe6950"/>
        <function-ref name="clr" scoped="" ref="0x2aabf9fe6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2aabfa004d70" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aabfa004d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa0030f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2aabfa005640" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aabfa005640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aabfa005990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2aabfa0046a8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aabfa0046a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa0049f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2aabfa005c78" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aabfa005c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa004020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aabfa0041a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aabfa004330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aabf98b2b18" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2aabf98b2b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabf98b2e68"/>
        <function-ref name="runTask" scoped="" ref="0x2aabf995c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aabf9890020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aabf9890020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9890370"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aabf98904f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aabf9890680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2aabf9a1d1c8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2aabf9a1d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabf9a1d518"/>
        <function-ref name="runTask" scoped="" ref="0x2aabf9a1d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2aabf9a1a668" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2aabf9a1a668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2aabf9a1a9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2aabf9a1e2a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2aabf9a1e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabf9a1e5f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2aabf9a1e780"/>
        <function-ref name="runNextTask" scoped="" ref="0x2aabf9a1e908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2aabfa0809a0" loc="13:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2aabfa0809a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfa07cbc0"/>
        <function-ref name="fired" scoped="" ref="0x2aabfa07e2e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabfa07c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabfa07eb88"/>
        <function-ref name="getdt" scoped="" ref="0x2aabfa07b4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2aabfa07b088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfa07e738"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabfa07f528"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabfa07c5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabfa07f9c8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa07fe68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2aabfa0a9bc0" loc="22:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2aabfa0a9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfa0b1020"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfa0b11a8"/>
        <function-ref name="start" scoped="" ref="0x2aabfa0b1330"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa0b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2aabfa079020" loc="15:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aabfa079020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aabfa079370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2aabfa098b08" loc="17:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa098b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa098e58"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa078020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa0781a8"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa078330"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa0784b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x2aabfa0a4c30" loc="24:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfa0a4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa0a3270"/>
        <function-ref name="get" scoped="" ref="0x2aabfa0b0d30"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfa0b0820"/>
        <function-ref name="set" scoped="" ref="0x2aabfa0a3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2aabfa0ac4b0" loc="20:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfa0ac4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa0ac800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabfa07b920" loc="14:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfa07b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfa07bc70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfa07bdf8"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfa07a020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfa07a1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfa07a330"/>
        <function-ref name="get" scoped="" ref="0x2aabfa07a4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfa07a640"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfa07ac60"/>
        <function-ref name="set" scoped="" ref="0x2aabfa07a7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfa07a950"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfa07aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2aabfa0c5998" loc="26:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa0c5998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfa0c5ce8"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfa0c5e70"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfa0a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioChannel" ref="0x2aabfa0c10d0" loc="27:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aabfa0c10d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aabfa0c1420"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfa0c15a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfa0c1730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2aabfa0b24b8" loc="18:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfa0b24b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa0b2808"/>
        <function-ref name="source" scoped="" ref="0x2aabfa0b2990"/>
        <function-ref name="address" scoped="" ref="0x2aabfa0b2b18"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa0b2ca0"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa0b2e28"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa099020"/>
        <function-ref name="type" scoped="" ref="0x2aabfa0991a8"/>
        <function-ref name="setType" scoped="" ref="0x2aabfa099330"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa0994b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa099640"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfa0997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2aabfa08a8e8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfa08a8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfa08ac38"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfa08adc0"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfa0d1020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfa0d11a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfa0d1330"/>
        <function-ref name="get" scoped="" ref="0x2aabfa0d14b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfa0d1640"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfa0d1c60"/>
        <function-ref name="set" scoped="" ref="0x2aabfa0d17c8"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfa0d1950"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfa0d1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2aabfa0cc850" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2aabfa0cc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabfa0ccba0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabfa0ccd28"/>
        <function-ref name="toggle" scoped="" ref="0x2aabfa0cb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabfa0cb1a8"/>
        <function-ref name="get" scoped="" ref="0x2aabfa0cb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabfa0cb4b8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa0cb640"/>
        <function-ref name="clr" scoped="" ref="0x2aabfa0cb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfa0d0b20" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfa0d0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa0d0e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2aabfa0cbae0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2aabfa0cbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabfa0cbe30"/>
        <function-ref name="isInput" scoped="" ref="0x2aabfa0f6020"/>
        <function-ref name="toggle" scoped="" ref="0x2aabfa0f61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabfa0f6330"/>
        <function-ref name="get" scoped="" ref="0x2aabfa0f64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabfa0f6640"/>
        <function-ref name="set" scoped="" ref="0x2aabfa0f67c8"/>
        <function-ref name="clr" scoped="" ref="0x2aabfa0f6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2aabfa0cd110" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfa0cd110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfa0cd460"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfa0cd5e8"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfa0cd770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfa0cd8f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfa0cda80"/>
        <function-ref name="get" scoped="" ref="0x2aabfa0cdc08"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfa0cdd90"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfa0cc4b8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa0cc020"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfa0cc1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfa0cc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2aabfa0f6c68" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2aabfa0f6c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabfa0f5020"/>
        <function-ref name="isInput" scoped="" ref="0x2aabfa0f51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabfa0f5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabfa0f54b8"/>
        <function-ref name="get" scoped="" ref="0x2aabfa0f5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabfa0f57c8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa0f5950"/>
        <function-ref name="clr" scoped="" ref="0x2aabfa0f5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2aabfa106020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2aabfa106020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabfa106370"/>
        <function-ref name="isInput" scoped="" ref="0x2aabfa1064f8"/>
        <function-ref name="toggle" scoped="" ref="0x2aabfa106680"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabfa106808"/>
        <function-ref name="get" scoped="" ref="0x2aabfa106990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabfa106b18"/>
        <function-ref name="set" scoped="" ref="0x2aabfa106ca0"/>
        <function-ref name="clr" scoped="" ref="0x2aabfa106e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2aabfa105190" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2aabfa105190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabfa1054e0"/>
        <function-ref name="isInput" scoped="" ref="0x2aabfa105668"/>
        <function-ref name="toggle" scoped="" ref="0x2aabfa1057f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabfa105978"/>
        <function-ref name="get" scoped="" ref="0x2aabfa105b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabfa105c88"/>
        <function-ref name="set" scoped="" ref="0x2aabfa105e10"/>
        <function-ref name="clr" scoped="" ref="0x2aabfa104020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2aabfa103480" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfa103480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa1037d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2aabfa104338" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2aabfa104338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2aabfa104688"/>
        <function-ref name="isInput" scoped="" ref="0x2aabfa104810"/>
        <function-ref name="toggle" scoped="" ref="0x2aabfa104998"/>
        <function-ref name="isOutput" scoped="" ref="0x2aabfa104b20"/>
        <function-ref name="get" scoped="" ref="0x2aabfa104ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2aabfa104e30"/>
        <function-ref name="set" scoped="" ref="0x2aabfa103020"/>
        <function-ref name="clr" scoped="" ref="0x2aabfa1031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfa5d9c58" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa5d9c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa5d8020"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa5d81a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa5d8330"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa5d84b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa5d8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfa5d8888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfa5d8888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa5d8bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa5d8d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa5d7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa5d71a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa5d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfa5d7578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfa5d7578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa5d78c8"/>
        <function-ref name="source" scoped="" ref="0x2aabfa5d7a50"/>
        <function-ref name="address" scoped="" ref="0x2aabfa5d7bd8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa5d7d60"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa5d6020"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa5d61a8"/>
        <function-ref name="type" scoped="" ref="0x2aabfa5d6330"/>
        <function-ref name="setType" scoped="" ref="0x2aabfa5d64b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa5d6640"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa5d67c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfa5d6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2aabfa5d6bd8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2aabfa5d6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfa5d5020"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfa5d51a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfa5d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfb023958" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfb023958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb023ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfb023e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb022020"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb0221a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb022330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2aabfb0225d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfb0225d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb022928"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfb022ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb022c38"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb022dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb021020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2aabfb021268" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfb021268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfb0215b8"/>
        <function-ref name="source" scoped="" ref="0x2aabfb021740"/>
        <function-ref name="address" scoped="" ref="0x2aabfb0218c8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfb021a50"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfb021bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfb021d60"/>
        <function-ref name="type" scoped="" ref="0x2aabfb089020"/>
        <function-ref name="setType" scoped="" ref="0x2aabfb0891a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfb089330"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfb0894b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfb089640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfa127a70" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfa127a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa127dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa124020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa1241a8"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa124330"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa1244b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2aabfa192bd0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa192bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa191020"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa1911a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa191330"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa1914b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa191640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfa193e40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfa193e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa1921e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa192370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa1924f8"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa192680"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa192808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2aabfa18e020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfa18e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa18e370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa18e4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa18e680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa18e808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa18e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2aabfa18ec58" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2aabfa18ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfa18d020"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfa18d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2aabfa18d470" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2aabfa18d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfa18d7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfa18d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2aabfa191888" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfa191888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa191bd8"/>
        <function-ref name="source" scoped="" ref="0x2aabfa191d60"/>
        <function-ref name="address" scoped="" ref="0x2aabfa18f020"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa18f1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa18f330"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa18f4b8"/>
        <function-ref name="type" scoped="" ref="0x2aabfa18f640"/>
        <function-ref name="setType" scoped="" ref="0x2aabfa18f7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa18f950"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa18fad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfa18fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfa18b5f8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfa18b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfa18b948"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfa18bad0"/>
        <function-ref name="start" scoped="" ref="0x2aabfa18bc58"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa18bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfa1885b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa1885b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa188900"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa188a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa188c10"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa188d98"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa187020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfa187d78" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfa187d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa1860f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa186278"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa186400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa186588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa186710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2aabfa17f4c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2aabfa17f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2aabfa17f818"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2aabfa17f9a0"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2aabfa17fb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfa1877a0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfa1877a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa187af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2aabfa183998" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2aabfa183998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2aabfa183ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabfa182020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfa182020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfa182370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfa1824f8"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfa182680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfa182808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfa182990"/>
        <function-ref name="get" scoped="" ref="0x2aabfa182b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfa182ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfa17e330"/>
        <function-ref name="set" scoped="" ref="0x2aabfa182e28"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfa17e020"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfa17e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aabfa1841a0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa1841a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfa1844f0"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfa184678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfa184800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfa1869b0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfa1869b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa186d00"/>
        <function-ref name="source" scoped="" ref="0x2aabfa185020"/>
        <function-ref name="address" scoped="" ref="0x2aabfa1851a8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa185330"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa1854b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa185640"/>
        <function-ref name="type" scoped="" ref="0x2aabfa1857c8"/>
        <function-ref name="setType" scoped="" ref="0x2aabfa185950"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa185ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa185c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfa185de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfa1da308" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfa1da308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa1da658"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa1da7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa1da968"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa1daaf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa1dac78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfa1d9020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfa1d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa1d9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfa1aa310" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa1aa310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa1aa680"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa1aa808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa1aa990"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa1aab18"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa1aaca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfa1dcb98" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfa1dcb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa1db020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa1db1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa1db330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa1db4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa1db640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfa1dd060" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfa1dd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa1dd3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabfa1d95b8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfa1d95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfa1d9908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfa1d9a90"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfa1d9c18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfa1d9da0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfa207020"/>
        <function-ref name="get" scoped="" ref="0x2aabfa2071a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfa207330"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfa207950"/>
        <function-ref name="set" scoped="" ref="0x2aabfa207640"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfa2074b8"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfa2077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aabfa1db888" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa1db888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfa1dbbd8"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfa1dbd60"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfa1da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfa1dd618" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfa1dd618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa1dd968"/>
        <function-ref name="source" scoped="" ref="0x2aabfa1ddaf0"/>
        <function-ref name="address" scoped="" ref="0x2aabfa1ddc78"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa1dde00"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa1dc020"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa1dc1a8"/>
        <function-ref name="type" scoped="" ref="0x2aabfa1dc330"/>
        <function-ref name="setType" scoped="" ref="0x2aabfa1dc4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa1dc640"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa1dc7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfa1dc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfa2022e8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfa2022e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfa202638"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfa2027c0"/>
        <function-ref name="start" scoped="" ref="0x2aabfa202948"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa202ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2aabfa1f7168" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2aabfa1f7168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa1f74b8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa1f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfa201ce8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfa201ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2aabfa06ad88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa2000a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa200228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa2003b0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa200538"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa2006c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfa205b88" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfa205b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa202020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfa201270" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfa201270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2aabfa06ad88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa2015c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2aabfa1fc130" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2aabfa1fc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfa1fc480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabfa1fe298" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfa1fe298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfa1fe5e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfa1fe770"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfa1fe8f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfa1fea80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfa1fec08"/>
        <function-ref name="get" scoped="" ref="0x2aabfa1fed90"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfa1fd020"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfa1fd640"/>
        <function-ref name="set" scoped="" ref="0x2aabfa1fd1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfa1fd330"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfa1fd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2aabfa218338" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2aabfa218338"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa218688"/>
        <function-ref name="receivedByte" scoped="" ref="0x2aabfa218810"/>
        <function-ref name="receive" scoped="" ref="0x2aabfa218998"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2aabfa218b20"/>
        <function-ref name="receiveDone" scoped="" ref="0x2aabfa218ca8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2aabfa218e30"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa1f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2aabfa1f63c8" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2aabfa1f63c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfa1f6718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2aabfa1f8928" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2aabfa1f8928"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2aabfa06ad88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2aabfa1f8c78"/>
        <function-ref name="offset" scoped="" ref="0x2aabfa1f8e00"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2aabfa1fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfa3dcb88" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfa3dcb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfa3db020"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfa3db1a8"/>
        <function-ref name="start" scoped="" ref="0x2aabfa3db330"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa3db4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2aabfa40e0a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2aabfa40e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa40e3f0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa40e578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfa3dbe78" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfa3dbe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2aabfa06ad88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa3da218"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa3da3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa3da528"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa3da6b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa3da838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfa3dc5f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfa3dc5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa3dc940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfa3db7e0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfa3db7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2aabfa06ad88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa3dbb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2aabfa3daa80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2aabfa3daa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfa3dadd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabfa3d8a88" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfa3d8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfa3d8dd8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfa3d7020"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfa3d71a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfa3d7330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfa3d74b8"/>
        <function-ref name="get" scoped="" ref="0x2aabfa3d7640"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfa3d77c8"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfa3d7de8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa3d7ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfa3d7950"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfa3d7c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2aabfa40e7c0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2aabfa40e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa40eb10"/>
        <function-ref name="receivedByte" scoped="" ref="0x2aabfa40ec98"/>
        <function-ref name="receive" scoped="" ref="0x2aabfa40ee20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2aabfa40d020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2aabfa40d1a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2aabfa40d330"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa40d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2aabfa40d740" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2aabfa40d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfa40da90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2aabfa3d81c0" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2aabfa3d81c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2aabfa06ad88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2aabfa3d8530"/>
        <function-ref name="offset" scoped="" ref="0x2aabfa3d86b8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2aabfa3d8840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfb0dd0e0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfb0dd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfb0dd430"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfb0dd5b8"/>
        <function-ref name="start" scoped="" ref="0x2aabfb0dd740"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb0dd8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2aabfb0d67c0" loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2aabfb0d67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb0d6b10"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb0d6c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2aabfb0d8a50" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2aabfb0d8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfb0d8da0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb0d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2aabfb0d58c0" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2aabfb0d58c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb0d5c10"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb0d5d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfb0deac8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfb0deac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfb0dee18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2aabfb0d7268" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2aabfb0d7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2aabfb0d75b8"/>
        <function-ref name="flush" scoped="" ref="0x2aabfb0d7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2aabfb0dce20" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2aabfb0dce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfb0da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2aabfb0d6020" loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2aabfb0d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb0d6370"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb0d64f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2aabfb0da450" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2aabfb0da450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2aabfb0da7a0"/>
        <function-ref name="resetSend" scoped="" ref="0x2aabfb0da928"/>
        <function-ref name="dataReceived" scoped="" ref="0x2aabfb0daab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2aabfb0dac38"/>
        <function-ref name="putData" scoped="" ref="0x2aabfb0dadc0"/>
        <function-ref name="putDone" scoped="" ref="0x2aabfb0d9020"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2aabfb0d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabfb0d93f0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfb0d93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfb0d9740"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfb0d98c8"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfb0d9a50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfb0d9bd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfb0d9d60"/>
        <function-ref name="get" scoped="" ref="0x2aabfb0d8020"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfb0d81a8"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfb0d87c8"/>
        <function-ref name="set" scoped="" ref="0x2aabfb0d84b8"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfb0d8330"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfb0d8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2aabfb0d5020" loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2aabfb0d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb0d5470"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb0d55f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2aabfb0d79c8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2aabfb0d79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfb0d7d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2aabfb0ddb10" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2aabfb0ddb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2aabfb0dde60"/>
        <function-ref name="nextByte" scoped="" ref="0x2aabfb0dc020"/>
        <function-ref name="startSend" scoped="" ref="0x2aabfb0dc1a8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2aabfb0dc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2aabfb0dc578" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2aabfb0dc578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2aabfb0dc8c8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2aabfb0dca50"/>
        <function-ref name="endPacket" scoped="" ref="0x2aabfb0dcbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2aabfb0c7ae0" loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2aabfb0c7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb0c7e30"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb0c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfb0d2e18" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfb0d2e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2aabfa06ad88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb0d01c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfb0d0348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb0d04d0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb0d0658"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb0d07e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2aabfb0c62e8" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2aabfb0c62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb0c6638"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb0c67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfb0d2740" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfb0d2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2aabfa06ad88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb0d2ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2aabfb0d0a28" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2aabfb0d0a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfb0d0d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2aabfb0cf1c0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2aabfb0cf1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2aabfa06ad88"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2aabfb0cf530"/>
        <function-ref name="offset" scoped="" ref="0x2aabfb0cf6b8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2aabfb0cf840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabfb0cd430" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfb0cd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfb0cd780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfb0cd908"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfb0cda90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfb0cdc18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfb0cdda0"/>
        <function-ref name="get" scoped="" ref="0x2aabfb0cc020"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfb0cc1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfb0cc7c8"/>
        <function-ref name="set" scoped="" ref="0x2aabfb0cc4b8"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfb0cc330"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfb0cc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2aabfb0cee60" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2aabfb0cee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfb0cd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x2aabfb0ccb58" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x2aabfb0ccb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfb0c8d98"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb0ca4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabfb0c81f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabfb0cad78"/>
        <function-ref name="getdt" scoped="" ref="0x2aabfb0c7688"/>
        <function-ref name="gett0" scoped="" ref="0x2aabfb0c7238"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfb0ca928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabfb0cb6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabfb0c87c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabfb0cbb90"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb0ca088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2aabfb0ce3f0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2aabfb0ce3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2aabfb0ce740"/>
        <function-ref name="nextByte" scoped="" ref="0x2aabfb0ce8c8"/>
        <function-ref name="startSend" scoped="" ref="0x2aabfb0cea50"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2aabfb0cebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2aabfb0cfa88" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2aabfb0cfa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2aabfb0cfdd8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2aabfb0ce020"/>
        <function-ref name="endPacket" scoped="" ref="0x2aabfb0ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2aabfb0c3bf8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2aabfb0c3bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb0c1020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2aabfb0c11a8"/>
        <function-ref name="receive" scoped="" ref="0x2aabfb0c1330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2aabfb0c14b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2aabfb0c1640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2aabfb0c17c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb0c1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2aabfb0c4c80" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2aabfb0c4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2aabfb0c3020"/>
        <function-ref name="resetSend" scoped="" ref="0x2aabfb0c31a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2aabfb0c3330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2aabfb0c34b8"/>
        <function-ref name="putData" scoped="" ref="0x2aabfb0c3640"/>
        <function-ref name="putDone" scoped="" ref="0x2aabfb0c37c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2aabfb0c3950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabfb0c1b98" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfb0c1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfb0c0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfb0c01a8"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfb0c0330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfb0c04b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfb0c0640"/>
        <function-ref name="get" scoped="" ref="0x2aabfb0c07c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfb0c0950"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfb0bf020"/>
        <function-ref name="set" scoped="" ref="0x2aabfb0c0c60"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfb0c0ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfb0c0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aabfb127ac0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aabfb127ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfb124d60"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb125470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabfb1241c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabfb125d10"/>
        <function-ref name="getdt" scoped="" ref="0x2aabfb123648"/>
        <function-ref name="gett0" scoped="" ref="0x2aabfb1231f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfb1258c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabfb126658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabfb124790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabfb126af8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb125020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2aabfa404448" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2aabfa404448"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2aabfa404798"/>
        <function-ref name="offset" scoped="" ref="0x2aabfa404920"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2aabfa404aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2aabfa3fb968" loc="2:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfa3fb968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfa3fbcb8"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfa3fbe40"/>
        <function-ref name="start" scoped="" ref="0x2aabfa3fa020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa3fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2aabfa3fa430" loc="3:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2aabfa3fa430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2aabfa3fa780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2aabfa4256b8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <component-ref qname="SerialActiveMessageC.SerialProtectorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2aabfa4256b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2aabfa425a08"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2aabfa425b90"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2aabfa425d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2aabfa416b60" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2aabfa416b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa41a020"/>
        <function-ref name="receive" scoped="" ref="0x2aabfa41a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2aabfa41c848" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2aabfa41c848"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa41cb98"/>
        <function-ref name="receivedByte" scoped="" ref="0x2aabfa41cd20"/>
        <function-ref name="receive" scoped="" ref="0x2aabfa41b020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2aabfa41b1a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2aabfa41b330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2aabfa41b4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa41b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2aabfa41a4a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2aabfa41a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfa41a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2aabfa41c080" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2aabfa41c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa41c3d0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa41c558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2aabfa418b90" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2aabfa418b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa412020"/>
        <function-ref name="receive" scoped="" ref="0x2aabfa4121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2aabfa412498" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2aabfa412498"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa4127e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2aabfa412970"/>
        <function-ref name="receive" scoped="" ref="0x2aabfa412af8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2aabfa412c80"/>
        <function-ref name="receiveDone" scoped="" ref="0x2aabfa412e08"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2aabfa411020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa4111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2aabfa4114a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2aabfa4114a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfa4117f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aabfa411d68" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfa411d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2aabf9a93c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfa410af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfa40f4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfa40f020"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa40f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2aabfa4183d8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2aabfa4183d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa418728"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa4188b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2aabfa474a88" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2aabfa474a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa474dd8"/>
        <function-ref name="receive" scoped="" ref="0x2aabfa472020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2aabfa4718c0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2aabfa4718c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa471c10"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa471d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfa443d18" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfa443d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa4740a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2aabfa4722a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2aabfa4722a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa4725f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2aabfa472780"/>
        <function-ref name="receive" scoped="" ref="0x2aabfa472908"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2aabfa472a90"/>
        <function-ref name="receiveDone" scoped="" ref="0x2aabfa472c18"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2aabfa472da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa471020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2aabfa4712a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2aabfa4712a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2aabfa4715f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2aabfa470840" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2aabfa470840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2aabfa470b90"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2aabfa470d18"/>
        <function-ref name="rxDone" scoped="" ref="0x2aabfa46f020"/>
        <function-ref name="txDone" scoped="" ref="0x2aabfa46f1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2aabfa46f330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2aabfa46f4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2aabfa46f640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2aabfa46f7c8"/>
        <function-ref name="tx" scoped="" ref="0x2aabfa46f950"/>
        <function-ref name="rx" scoped="" ref="0x2aabfa46fad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aabfa46e020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfa46e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2aabf9a93c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfa46ed70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfa46d6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfa46d230"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa46db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2aabfa474328" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2aabfa474328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa474678"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa474800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2aabfa4700a0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2aabfa4700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa4703f0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa470578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2aabfa489158" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2aabfa489158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2aabfa4894a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2aabfa489630"/>
        <function-ref name="rxDone" scoped="" ref="0x2aabfa4897b8"/>
        <function-ref name="txDone" scoped="" ref="0x2aabfa489940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2aabfa489ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2aabfa489c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2aabfa489dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2aabfa488020"/>
        <function-ref name="tx" scoped="" ref="0x2aabfa4881a8"/>
        <function-ref name="rx" scoped="" ref="0x2aabfa488330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2aabfa487860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2aabfa487860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2aabfa487bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2aabfa487d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2aabfa486020"/>
        <function-ref name="txDone" scoped="" ref="0x2aabfa4861a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2aabfa486330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2aabfa4864b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2aabfa486640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2aabfa4867c8"/>
        <function-ref name="tx" scoped="" ref="0x2aabfa486950"/>
        <function-ref name="rx" scoped="" ref="0x2aabfa486ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2aabfa48a8b8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2aabfa48a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa48ac08"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa48ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2aabfa4886b0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2aabfa4886b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa488a00"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa488b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2aabfa487020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2aabfa487020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa487370"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa4874f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2aabfa48a060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2aabfa48a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa48a3b0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa48a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2aabfa4857f0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2aabfa4857f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa485b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2aabfa481158" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2aabfa481158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2aabfa4814a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2aabfa481630"/>
        <function-ref name="rxDone" scoped="" ref="0x2aabfa4817b8"/>
        <function-ref name="txDone" scoped="" ref="0x2aabfa481940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2aabfa481ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2aabfa481c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2aabfa481dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2aabfa4ba020"/>
        <function-ref name="tx" scoped="" ref="0x2aabfa4ba1a8"/>
        <function-ref name="rx" scoped="" ref="0x2aabfa4ba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2aabfa4b74d8" loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabfa4b74d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aabfa4b7828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2aabfa4ba688" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2aabfa4ba688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa4ba9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2aabfa4b8020" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2aabfa4b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2aabfa4b8370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2aabfa4b84f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2aabfa4b8680"/>
        <function-ref name="txDone" scoped="" ref="0x2aabfa4b8808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2aabfa4b8990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2aabfa4b8b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2aabfa4b8ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2aabfa4b8e28"/>
        <function-ref name="tx" scoped="" ref="0x2aabfa4b7020"/>
        <function-ref name="rx" scoped="" ref="0x2aabfa4b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2aabfa4828b8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2aabfa4828b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa482c08"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa482d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2aabfa4bad98" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2aabfa4bad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa4b9170"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa4b92f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2aabfa4b96b8" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2aabfa4b96b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa4b9a08"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa4b9b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2aabfa4b7b48" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2aabfa4b7b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2aabfa4b6020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2aabfa4b61a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2aabfa4b6330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2aabfa4b64b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2aabfa4b6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2aabfa4b6950" loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aabfa4b6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aabfa4b6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2aabfa482020" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2aabfa482020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfa482370"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa4824f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabfa506758" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfa506758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2aabf9a93c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfa503578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfa501020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfa503a00"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa5014a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabfa4fe3c0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfa4fe3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2aabf9a91960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfa4fd150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfa4fda60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfa4fd5d8"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa4fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aabfa52a4f0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2aabfa52a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfa5266f8"/>
        <function-ref name="test" scoped="" ref="0x2aabfa527020"/>
        <function-ref name="fired" scoped="" ref="0x2aabfa529a20"/>
        <function-ref name="get" scoped="" ref="0x2aabfa5290c0"/>
        <function-ref name="reset" scoped="" ref="0x2aabfa5274a8"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfa526bd0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfa526270"/>
        <function-ref name="set" scoped="" ref="0x2aabfa529548"/>
        <function-ref name="start" scoped="" ref="0x2aabfa527930"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa527db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabfa4f9060" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfa4f9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfa531270"/>
        <function-ref name="test" scoped="" ref="0x2aabfa4f7a20"/>
        <function-ref name="get" scoped="" ref="0x2aabfa4f9be0"/>
        <function-ref name="reset" scoped="" ref="0x2aabfa4f6020"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfa531748"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa4f7598"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfa4f6db8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa4f70c0"/>
        <function-ref name="start" scoped="" ref="0x2aabfa4f64a8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa4f6930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2aabfa52f2c8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2aabfa52f2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfa52c4a8"/>
        <function-ref name="test" scoped="" ref="0x2aabfa52ec70"/>
        <function-ref name="fired" scoped="" ref="0x2aabfa52e7e8"/>
        <function-ref name="force" scoped="" ref="0x2aabfa52ce08"/>
        <function-ref name="get" scoped="" ref="0x2aabfa52fe48"/>
        <function-ref name="reset" scoped="" ref="0x2aabfa52d130"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfa52c980"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfa52c020"/>
        <function-ref name="set" scoped="" ref="0x2aabfa52e310"/>
        <function-ref name="start" scoped="" ref="0x2aabfa52d5b8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa52da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2aabfa51ec48" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2aabfa51ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfa51adb8"/>
        <function-ref name="test" scoped="" ref="0x2aabfa51b658"/>
        <function-ref name="fired" scoped="" ref="0x2aabfa51b1d0"/>
        <function-ref name="force" scoped="" ref="0x2aabfa519778"/>
        <function-ref name="get" scoped="" ref="0x2aabfa51d820"/>
        <function-ref name="reset" scoped="" ref="0x2aabfa51bae0"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfa5192f0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfa51a930"/>
        <function-ref name="set" scoped="" ref="0x2aabfa51dca8"/>
        <function-ref name="start" scoped="" ref="0x2aabfa51a020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa51a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2aabfa549268" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2aabfa549268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfa545310"/>
        <function-ref name="test" scoped="" ref="0x2aabfa548c10"/>
        <function-ref name="fired" scoped="" ref="0x2aabfa548788"/>
        <function-ref name="get" scoped="" ref="0x2aabfa549de8"/>
        <function-ref name="reset" scoped="" ref="0x2aabfa5470c0"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfa5457e8"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfa547e58"/>
        <function-ref name="set" scoped="" ref="0x2aabfa5482b0"/>
        <function-ref name="start" scoped="" ref="0x2aabfa547548"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa5479d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2aabfa545c68" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabfa545c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aabfa544020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2aabfa519df0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2aabfa519df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfa5140f8"/>
        <function-ref name="test" scoped="" ref="0x2aabfa516980"/>
        <function-ref name="fired" scoped="" ref="0x2aabfa5164f8"/>
        <function-ref name="force" scoped="" ref="0x2aabfa514a58"/>
        <function-ref name="get" scoped="" ref="0x2aabfa517a18"/>
        <function-ref name="reset" scoped="" ref="0x2aabfa516e08"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfa5145d0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfa515c20"/>
        <function-ref name="set" scoped="" ref="0x2aabfa516020"/>
        <function-ref name="start" scoped="" ref="0x2aabfa515310"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa515798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2aabfa544390" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aabfa544390"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aabfa5446e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2aabfa54e118" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2aabfa54e118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfa54a270"/>
        <function-ref name="test" scoped="" ref="0x2aabfa54dab0"/>
        <function-ref name="fired" scoped="" ref="0x2aabfa54d628"/>
        <function-ref name="force" scoped="" ref="0x2aabfa54abd0"/>
        <function-ref name="get" scoped="" ref="0x2aabfa54ec98"/>
        <function-ref name="reset" scoped="" ref="0x2aabfa54c020"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfa54a748"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfa54cdb8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa54d150"/>
        <function-ref name="start" scoped="" ref="0x2aabfa54c4a8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa54c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aabfa522020" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aabfa522020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfa51e0f8"/>
        <function-ref name="test" scoped="" ref="0x2aabfa5209e8"/>
        <function-ref name="get" scoped="" ref="0x2aabfa522ba0"/>
        <function-ref name="reset" scoped="" ref="0x2aabfa520e70"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfa51e5d0"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa520560"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfa51fc30"/>
        <function-ref name="set" scoped="" ref="0x2aabfa520088"/>
        <function-ref name="start" scoped="" ref="0x2aabfa51f320"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa51f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabfa5b85a8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfa5b85a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2aabf9a91960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfa5b63a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfa5b6cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfa5b6830"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa5b5190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabfa5b56d0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfa5b56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfa5b1930"/>
        <function-ref name="test" scoped="" ref="0x2aabfa5b21f8"/>
        <function-ref name="get" scoped="" ref="0x2aabfa5b43a8"/>
        <function-ref name="reset" scoped="" ref="0x2aabfa5b2680"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfa5b1e08"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa5b4d08"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfa5b14a8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa5b4830"/>
        <function-ref name="start" scoped="" ref="0x2aabfa5b2b08"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa5b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfb238cc0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfb238cc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfb2360a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabfb2364f8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfb2364f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2aabf9a91960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfb2353a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfb235cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfb235830"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfb234190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabfb2346d0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb2346d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfb230930"/>
        <function-ref name="test" scoped="" ref="0x2aabfb2311f8"/>
        <function-ref name="get" scoped="" ref="0x2aabfb2333a8"/>
        <function-ref name="reset" scoped="" ref="0x2aabfb231680"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfb230e08"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfb233d08"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfb2304a8"/>
        <function-ref name="set" scoped="" ref="0x2aabfb233830"/>
        <function-ref name="start" scoped="" ref="0x2aabfb231b08"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb230020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2aabfa5e9450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2aabfa5e9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2aabf9a91960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfa5e71d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfa5e7ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfa5e7658"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa5e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2aabfa5eb270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfa5eb270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2aabf9a91960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfa5ea020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfa5ea930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfa5ea4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfa5eadb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2aabfa5d2748" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2aabfa5d2748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2aabfa5ee4d8"/>
        <function-ref name="enqueue" scoped="" ref="0x2aabfa5ed240"/>
        <function-ref name="element" scoped="" ref="0x2aabfa5ed870"/>
        <function-ref name="full" scoped="" ref="0x2aabfa5f07c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2aabfa5ee088"/>
        <function-ref name="dequeue" scoped="" ref="0x2aabfa5eeb38"/>
        <function-ref name="empty" scoped="" ref="0x2aabfa5f0370"/>
        <function-ref name="size" scoped="" ref="0x2aabfa5f0c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2aabfa6280f8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2aabfa6280f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2aabfa627db0"/>
        <function-ref name="enqueue" scoped="" ref="0x2aabfa624aa8"/>
        <function-ref name="element" scoped="" ref="0x2aabfa622118"/>
        <function-ref name="full" scoped="" ref="0x2aabfa6270c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2aabfa627960"/>
        <function-ref name="dequeue" scoped="" ref="0x2aabfa624448"/>
        <function-ref name="empty" scoped="" ref="0x2aabfa628c40"/>
        <function-ref name="size" scoped="" ref="0x2aabfa627510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2aabfa622790" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa622790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa622ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa622c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa622df0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa621020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa6211a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2aabfa621430" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfa621430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa621780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa621908"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa621a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa621c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa621da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2aabfa61b4d8" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2aabfa61b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfa61b828"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfa61b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfa6292d0" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfa6292d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa629620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2aabfa620080" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2aabfa620080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2aabfa6203d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2aabfa620558"/>
        <function-ref name="led1On" scoped="" ref="0x2aabfa6206e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2aabfa620868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2aabfa6209f0"/>
        <function-ref name="get" scoped="" ref="0x2aabfa620b78"/>
        <function-ref name="led1Off" scoped="" ref="0x2aabfa620d00"/>
        <function-ref name="led2Off" scoped="" ref="0x2aabfa61f4b8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa61f020"/>
        <function-ref name="led0On" scoped="" ref="0x2aabfa61f1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2aabfa61f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2aabfa626898" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2aabfa626898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2aabfa626be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2aabfa646e58" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2aabfa646e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2aabfa6431e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfa63d888" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfa63d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa63dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2aabfa63c020" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2aabfa63c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2aabfa63c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2aabfa632020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2aabfa632020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2aabfa632370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2aabfa632700" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2aabfa632700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfa632a50"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfa632bd8"/>
        <function-ref name="start" scoped="" ref="0x2aabfa632d60"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa631020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2aabfa635c48" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="TestUsbStationAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2aabfa635c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfa66be78"/>
        <function-ref name="fired" scoped="" ref="0x2aabfa66c5a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2aabfa66b2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2aabfa66ce48"/>
        <function-ref name="getdt" scoped="" ref="0x2aabfa66a748"/>
        <function-ref name="gett0" scoped="" ref="0x2aabfa66a2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfa66c9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2aabfa6337e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2aabfa66b8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2aabfa633c88"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa66c158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfa669e18" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfa669e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfa6661a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfa666330"/>
        <function-ref name="start" scoped="" ref="0x2aabfa6664b8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa666640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2aabfa65ca80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2aabfa65ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2aabfa65cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aabfa6601c8" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa6601c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aabfa660518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfa6607a0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfa6607a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa660af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa660c78"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa660e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa65e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa65e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfa666db8" loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa666db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa664170"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa6642f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa664480"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa664608"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa664790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aabfa663b68" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aabfa663b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa662020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aabfa6501d8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfa6501d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aabfa650528"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aabfa6506b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aabfa650838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aabfa6509c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfa663020" loc="33:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfa663020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa663370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2aabfa656020" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfa656020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfa684478"/>
        <function-ref name="clear" scoped="" ref="0x2aabfa684b58"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfa656d70"/>
        <function-ref name="set" scoped="" ref="0x2aabfa683278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aabfa659af0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa659af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfa659e40"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfa658020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfa6581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2aabfa657020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2aabfa657020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aabfa657370"/>
        <function-ref name="setRetries" scoped="" ref="0x2aabfa6574f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2aabfa657680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aabfa657808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aabfa657990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfa65e448" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfa65e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa65e798"/>
        <function-ref name="source" scoped="" ref="0x2aabfa65e920"/>
        <function-ref name="address" scoped="" ref="0x2aabfa65eaa8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa65ec30"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa65edb8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa659020"/>
        <function-ref name="type" scoped="" ref="0x2aabfa6591a8"/>
        <function-ref name="setType" scoped="" ref="0x2aabfa659330"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa6594b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa659640"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfa6597c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aabfa683e48" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfa683e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfa680420"/>
        <function-ref name="clear" scoped="" ref="0x2aabfa680b00"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfa682ce8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa67f278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfa67e440" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfa67e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfa67e790"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfa67e918"/>
        <function-ref name="start" scoped="" ref="0x2aabfa67eaa0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa67ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2aabfa6aa020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfa6aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa6a9608"/>
        <function-ref name="get" scoped="" ref="0x2aabfa6a90f8"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfa6aaba0"/>
        <function-ref name="set" scoped="" ref="0x2aabfa6a9b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aabfa69f758" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfa69f758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfa69ec58"/>
        <function-ref name="clear" scoped="" ref="0x2aabfa69c380"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfa69e578"/>
        <function-ref name="set" scoped="" ref="0x2aabfa69ca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2aabfa678c88" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2aabfa678c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2aabfa677020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aabfa6777d8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa6777d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aabfa677b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfa6755f8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfa6755f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa675948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa675ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa675c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa675de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa673020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfa67b3c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa67b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa67b718"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa67b8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa67ba28"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa67bbb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa67bd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aabfa6781c8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aabfa6781c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa678518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2aabfa66dbd8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfa66dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa6ac208"/>
        <function-ref name="get" scoped="" ref="0x2aabfa6adcb0"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfa6ad7a0"/>
        <function-ref name="set" scoped="" ref="0x2aabfa6ac718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aabfa671318" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfa671318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aabfa671668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aabfa6717f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aabfa671978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aabfa671b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfa6794e8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfa6794e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa679838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2aabfa6a5848" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfa6a5848"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfa6a3cc0"/>
        <function-ref name="clear" scoped="" ref="0x2aabfa6a0420"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfa6a35e0"/>
        <function-ref name="set" scoped="" ref="0x2aabfa6a0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2aabfa6a2430" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfa6a2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfa6a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2aabfa66f828" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfa66f828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa66ee30"/>
        <function-ref name="get" scoped="" ref="0x2aabfa66e920"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfa66e410"/>
        <function-ref name="set" scoped="" ref="0x2aabfa66d388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aabfa672968" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa672968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfa672cb8"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfa672e40"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfa671020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2aabfa6763c8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfa6763c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa676718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2aabfa671db0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2aabfa671db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aabfa6702e8"/>
        <function-ref name="setRetries" scoped="" ref="0x2aabfa670470"/>
        <function-ref name="getRetries" scoped="" ref="0x2aabfa6705f8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aabfa670780"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aabfa670908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfa6732c0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfa6732c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa673610"/>
        <function-ref name="source" scoped="" ref="0x2aabfa673798"/>
        <function-ref name="address" scoped="" ref="0x2aabfa673920"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa673aa8"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa673c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa673db8"/>
        <function-ref name="type" scoped="" ref="0x2aabfa672020"/>
        <function-ref name="setType" scoped="" ref="0x2aabfa6721a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa672330"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa6724b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfa672640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2aabfa670bd0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aabfa670bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aabfa66f020"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfa66f1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfa66f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2aabfa6a4808" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfa6a4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2aabfa6a4b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2aabfa675020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfa675020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa675370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfa69bb78" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfa69bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfa698020"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfa6981a8"/>
        <function-ref name="start" scoped="" ref="0x2aabfa698330"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa6984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2aabfa6ea0d0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfa6ea0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2aabfa6ea620"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2aabfa6ea7a8"/>
        <function-ref name="txModeSet" scoped="" ref="0x2aabfa6ea930"/>
        <function-ref name="txModeGet" scoped="" ref="0x2aabfa6eaab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2aabfa6b3348" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfa6b3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa6b2a40"/>
        <function-ref name="get" scoped="" ref="0x2aabfa6b2530"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfa6b2020"/>
        <function-ref name="set" scoped="" ref="0x2aabfa6b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2aabfa6ce218" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2aabfa6ce218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aabfa6ce668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2aabfa6c8020" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2aabfa6c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aabfa6c8370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aabfa6c84f8"/>
        <function-ref name="request" scoped="" ref="0x2aabfa6c8680"/>
        <function-ref name="granted" scoped="" ref="0x2aabfa6c8808"/>
        <function-ref name="isOwner" scoped="" ref="0x2aabfa6c8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2aabfa694498" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2aabfa694498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2aabfa6947e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aabfa693020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa693020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aabfa693370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfa698c30" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa698c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa697020"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa6971a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa697330"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa6974b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa697640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aabfa695968" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aabfa695968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa695cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2aabfa6bdc80" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2aabfa6bdc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2aabfa6c7020"/>
        <function-ref name="address" scoped="" ref="0x2aabfa6c71a8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa6c7330"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa6c74b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa6c7640"/>
        <function-ref name="pan" scoped="" ref="0x2aabfa6c77c8"/>
        <function-ref name="setPan" scoped="" ref="0x2aabfa6c7950"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa6c7ad8"/>
        <function-ref name="localPan" scoped="" ref="0x2aabfa6c7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2aabfa6c6060" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2aabfa6c6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa6c63b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa6c6538"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa6c66c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa6c6848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa6c69d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2aabfa6b6020" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfa6b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa6b4608"/>
        <function-ref name="get" scoped="" ref="0x2aabfa6b40f8"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfa6b6ba0"/>
        <function-ref name="set" scoped="" ref="0x2aabfa6b4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aabfa6bc6a8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfa6bc6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aabfa6bc9f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aabfa6bcb80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aabfa6bcd08"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aabfa6bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2aabfa6b0838" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfa6b0838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa6afe30"/>
        <function-ref name="get" scoped="" ref="0x2aabfa6af920"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfa6af410"/>
        <function-ref name="set" scoped="" ref="0x2aabfa6f0388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2aabfa690550" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2aabfa690550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa6908a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa690a28"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa690bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa690d38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa68e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfa697dc0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfa697dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa695170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2aabfa6eea48" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfa6eea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfa6e8020"/>
        <function-ref name="clear" scoped="" ref="0x2aabfa6e8700"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfa6e9828"/>
        <function-ref name="set" scoped="" ref="0x2aabfa6e8de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2aabfa6ef630" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfa6ef630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfa6ee220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2aabfa6bab78" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfa6bab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa6b7190"/>
        <function-ref name="get" scoped="" ref="0x2aabfa6b9c38"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfa6b9728"/>
        <function-ref name="set" scoped="" ref="0x2aabfa6b76a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aabfa6c6cf8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfa6c6cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfa6bc0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfa6bc228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfa6bc3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2aabfa6cad80" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2aabfa6cad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa6cf170"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa6cf2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa6cf480"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa6cf608"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa6cf790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2aabfa693be0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfa693be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa692020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2aabfa6bb2d0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2aabfa6bb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aabfa6bb620"/>
        <function-ref name="setRetries" scoped="" ref="0x2aabfa6bb7a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2aabfa6bb930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aabfa6bbab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aabfa6bbc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2aabfa6ba020" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aabfa6ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aabfa6ba370"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfa6ba4f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfa6ba680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfa692e50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfa692e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa6911e8"/>
        <function-ref name="source" scoped="" ref="0x2aabfa691370"/>
        <function-ref name="address" scoped="" ref="0x2aabfa6914f8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa691680"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa691808"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa691990"/>
        <function-ref name="type" scoped="" ref="0x2aabfa691b18"/>
        <function-ref name="setType" scoped="" ref="0x2aabfa691ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa691e28"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa690020"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfa6901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aabfa6e69d8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfa6e69d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfa6e5e48"/>
        <function-ref name="clear" scoped="" ref="0x2aabfa6e3558"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfa6e5768"/>
        <function-ref name="set" scoped="" ref="0x2aabfa6e3c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2aabfa6cfaf0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2aabfa6cfaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa6cfe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2aabfa6eadb8" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfa6eadb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2aabfa6ef170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2aabfa692860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfa692860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa692bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2aabfa752998" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfa752998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2aabfa752ce8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2aabfa752e70"/>
        <function-ref name="txModeSet" scoped="" ref="0x2aabfa751020"/>
        <function-ref name="txModeGet" scoped="" ref="0x2aabfa7511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2aabfa6f77b0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2aabfa6f77b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aabfa6f7b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2aabfa709558" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2aabfa709558"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2aabfa7098a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2aabfa6f9b48" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2aabfa6f9b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa704020"/>
        <function-ref name="checkFrame" scoped="" ref="0x2aabfa7041a8"/>
        <function-ref name="source" scoped="" ref="0x2aabfa704330"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa7044b8"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa704640"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa7047c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa704950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2aabfa701b10" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2aabfa701b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2aabfa701e60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2aabfa705020"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2aabfa7051a8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2aabfa705330"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2aabfa7054b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aabfa71a640" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfa71a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aabfa71a990"/>
        <function-ref name="wait" scoped="" ref="0x2aabfa71ab18"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa71aca0"/>
        <function-ref name="isFree" scoped="" ref="0x2aabfa71ae28"/>
        <function-ref name="getNow" scoped="" ref="0x2aabfa720020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2aabfa71f8b8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aabfa71f8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfa719e10"/>
        <function-ref name="clear" scoped="" ref="0x2aabfa756558"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfa719730"/>
        <function-ref name="set" scoped="" ref="0x2aabfa756c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2aabfa711020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2aabfa711020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2aabfa711370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2aabfa712468" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2aabfa712468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2aabfa7127b8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2aabfa712940"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aabfa712ac8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2aabfa712c50"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2aabfa712dd8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2aabfa6dd020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aabfa6dd1a8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aabfa6dd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2aabfa722858" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfa722858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2aabfa722ba8"/>
        <function-ref name="getDSN" scoped="" ref="0x2aabfa722d30"/>
        <function-ref name="setFCF" scoped="" ref="0x2aabfa6f8020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2aabfa6f81a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2aabfa6f8330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2aabfa6f84b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2aabfa6f8640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2aabfa6f87c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2aabfa6f8950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2aabfa6f8ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2aabfa6f8c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2aabfa6f8de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2aabfa6f6020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aabfa6f62a8"/>
        <function-ref name="localPan" scoped="" ref="0x2aabfa6f6430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2aabfa6f65b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2aabfa6f6740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2aabfa6f68c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2aabfa6f6a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa6f6bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aabfa6f6d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2aabfa721020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aabfa7211a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2aabfa721330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2aabfa7214b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2aabfa755698" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfa755698"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa754dc8"/>
        <function-ref name="get" scoped="" ref="0x2aabfa7548b8"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfa7543a8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa752328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2aabfa70d5f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2aabfa70d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2aabfa70d940"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2aabfa70dac8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2aabfa70dc50"/>
        <function-ref name="getSender" scoped="" ref="0x2aabfa70ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2aabfa706950" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2aabfa706950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2aabfa706ca0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2aabfa706e28"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2aabfa70c020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2aabfa70c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2aabfa714810" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2aabfa714810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa714b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa714ce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa714e70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa71f020"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfa71f1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfa71f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x2aabfa6d73a8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2aabfa6d73a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2aabfa6d76f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2aabfa6d7880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa6d7a08"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2aabfa6d7b90"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfa6d7d18"/>
        <function-ref name="setAck" scoped="" ref="0x2aabfa6de020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfa6de1a8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2aabfa6de330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2aabfa77f2e8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfa77f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aabfa77f658"/>
        <function-ref name="wait" scoped="" ref="0x2aabfa77f7e0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa77f968"/>
        <function-ref name="isFree" scoped="" ref="0x2aabfa77faf0"/>
        <function-ref name="getNow" scoped="" ref="0x2aabfa77fc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aabfa7d52d0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfa7d52d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aabfa05d6b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfa7d3928"/>
        <function-ref name="fired" scoped="" ref="0x2aabfa7d49e8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfa7d3320"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfa7d4e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfa7d3db0"/>
        <function-ref name="start" scoped="" ref="0x2aabfa7d4088"/>
        <function-ref name="stop" scoped="" ref="0x2aabfa7d4560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2aabfb2561a0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfb2561a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aabfb256510"/>
        <function-ref name="wait" scoped="" ref="0x2aabfb256698"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb256820"/>
        <function-ref name="isFree" scoped="" ref="0x2aabfb2569a8"/>
        <function-ref name="getNow" scoped="" ref="0x2aabfb256b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aabfb255020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfb255020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aabfa05d6b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfb252690"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb2546f8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfb252088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfb254b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfb252b18"/>
        <function-ref name="start" scoped="" ref="0x2aabfb255d70"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb254270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2aabfb251020" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2aabfb251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2aabfb251370"/>
        <function-ref name="suspend" scoped="" ref="0x2aabfb2514f8"/>
        <function-ref name="resume" scoped="" ref="0x2aabfb251680"/>
        <function-ref name="run" scoped="" ref="0x2aabfb251808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2aabfa7e3c30" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2aabfa7e3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2aabfa7e0020"/>
        <function-ref name="suspend" scoped="" ref="0x2aabfa7e01a8"/>
        <function-ref name="resume" scoped="" ref="0x2aabfa7e0330"/>
        <function-ref name="run" scoped="" ref="0x2aabfa7e04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfa883430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfa883430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa883780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfa884a50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfa884a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa884da0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa883020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa8831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2aabfa886020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2aabfa886020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2aabfa886390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aabfa8866f8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa8866f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aabfa886a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfa88a578" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfa88a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa88a8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa88aa50"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa88abd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa88ad60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa889020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfa889388" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfa889388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa8896f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa889880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa889a08"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa889b90"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa889d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aabfa8877e0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aabfa8877e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa887b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfa883a08" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfa883a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa883e58"/>
        <function-ref name="checkFrame" scoped="" ref="0x2aabfa882020"/>
        <function-ref name="source" scoped="" ref="0x2aabfa8821a8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa882330"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa8824b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa882640"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa8827c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfa885ba8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfa885ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa884020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa8841a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa884330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa8844b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfa884640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfa8847c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfa8870c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfa8870c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa887438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2aabfa886e10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfa886e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa8851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfa88b020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfa88b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfa88b370"/>
        <function-ref name="source" scoped="" ref="0x2aabfa88b4f8"/>
        <function-ref name="address" scoped="" ref="0x2aabfa88b680"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa88b808"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa88b990"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa88bb18"/>
        <function-ref name="type" scoped="" ref="0x2aabfa88bca0"/>
        <function-ref name="setType" scoped="" ref="0x2aabfa88be28"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa88a020"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfa88a1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfa88a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2aabfa885550" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfa885550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa8858c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfb2b4b90" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfb2b4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb2b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfb2b42a8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfb2b42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb2b45f8"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb2b4780"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb2b4908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2aabfb2b7858" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2aabfb2b7858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2aabfb2b7bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aabfb2b6020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aabfb2b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aabfb2b6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfb2ba020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfb2ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb2ba370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfb2ba4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfb2ba680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb2ba808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfb2ba990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfb2bacf8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfb2bacf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb2b80a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfb2b8228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb2b83b0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb2b8538"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb2b86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2aabfb2b7180" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2aabfb2b7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb2b74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfb2bdb20" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfb2bdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb2bde70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfb2bc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb2bc1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfb2bc330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfb2bc4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfb2bc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfb2b32a8" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfb2b32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfb2b35f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x2aabfb2b3780"/>
        <function-ref name="source" scoped="" ref="0x2aabfb2b3908"/>
        <function-ref name="destination" scoped="" ref="0x2aabfb2b3a90"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfb2b3c18"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfb2b3da0"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfb2b2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2aabfb2b2268" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aabfb2b2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2aabfb2b25b8"/>
        <function-ref name="changed" scoped="" ref="0x2aabfb2b2740"/>
        <function-ref name="amGroup" scoped="" ref="0x2aabfb2b28c8"/>
        <function-ref name="setAddress" scoped="" ref="0x2aabfb2b2a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfb2b54d0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfb2b54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb2b5820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfb2b59a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb2b5b30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfb2b5cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfb2b5e40"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfb2b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfb2b8a28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfb2b8a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb2b8d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2aabfb2b6738" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2aabfb2b6738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb2b6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfb2bc888" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfb2bc888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfb2bcbd8"/>
        <function-ref name="source" scoped="" ref="0x2aabfb2bcd60"/>
        <function-ref name="address" scoped="" ref="0x2aabfb2bb020"/>
        <function-ref name="destination" scoped="" ref="0x2aabfb2bb1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfb2bb330"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfb2bb4b8"/>
        <function-ref name="type" scoped="" ref="0x2aabfb2bb640"/>
        <function-ref name="setType" scoped="" ref="0x2aabfb2bb7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfb2bb950"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfb2bbad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfb2bbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2aabfb2b6e50" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2aabfb2b6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb2b51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2aabfa85b4d8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aabfa85b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2aabfa85b828"/>
        <function-ref name="changed" scoped="" ref="0x2aabfa85b9b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2aabfa85bb38"/>
        <function-ref name="setAddress" scoped="" ref="0x2aabfa85bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfa87b618" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfa87b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa87b968"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa87baf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa87bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2aabfa8b6020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aabfa8b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aabfa8b6370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aabfa8b64f8"/>
        <function-ref name="request" scoped="" ref="0x2aabfa8b6680"/>
        <function-ref name="granted" scoped="" ref="0x2aabfa8b6808"/>
        <function-ref name="isOwner" scoped="" ref="0x2aabfa8b6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2aabfa87cb40" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2aabfa87cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa87b020"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa87b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa87b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aabfa8b1af8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aabfa8b1af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aabfa8b1e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aabfa8b0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aabfa8b0ae8" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabfa8b0ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aabfa8b0e58"/>
        <function-ref name="configure" scoped="" ref="0x2aabfa8af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aabfa8b2d88" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aabfa8b2d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aabfa8b1170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aabfa8b12f8"/>
        <function-ref name="request" scoped="" ref="0x2aabfa8b1480"/>
        <function-ref name="granted" scoped="" ref="0x2aabfa8b1608"/>
        <function-ref name="isOwner" scoped="" ref="0x2aabfa8b1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aabfa8b0268" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aabfa8b0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aabfa8b05b8"/>
        <function-ref name="userId" scoped="" ref="0x2aabfa8b0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfb2d0020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfb2d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfb2d0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2aabfb2d05f8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2aabfb2d05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aabfb2d0948"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aabfb2d0ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aabfb2d0c58"/>
        <function-ref name="dequeue" scoped="" ref="0x2aabfb2d0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2aabfb2cd0c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2aabfb2cd0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2aabfb2cd438"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2aabfb2cd5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2aabfb2cc100" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2aabfb2cc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2aabfb2cc470"/>
        <function-ref name="configure" scoped="" ref="0x2aabfb2cc5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2aabfb2cc880" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2aabfb2cc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2aabfb2ccbd0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2aabfb2ccd58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2aabfb2ca020"/>
        <function-ref name="dequeue" scoped="" ref="0x2aabfb2ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2aabfb2ce390" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2aabfb2ce390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2aabfb2ce700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2aabfb2ce888"/>
        <function-ref name="request" scoped="" ref="0x2aabfb2cea10"/>
        <function-ref name="granted" scoped="" ref="0x2aabfb2ceb98"/>
        <function-ref name="isOwner" scoped="" ref="0x2aabfb2ced20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2aabfb2cd808" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2aabfb2cd808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2aabfb2cdb58"/>
        <function-ref name="userId" scoped="" ref="0x2aabfb2cdce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2aabfb2ca470" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2aabfb2ca470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb2ca7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb2ca948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfa8c2740" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfa8c2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa8c2a90"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa8c2c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa8c2da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfa8c1060" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfa8c1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa8c13b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2aabfa8c6268" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2aabfa8c6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2aabfa8c65b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfa8c9340" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfa8c9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa8c9690"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa8c9818"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa8c99a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa8c9b28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa8c9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2aabfa8c3900" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfa8c3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa8c3c50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa8c3dd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa8c2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa8c21a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfa8c2330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfa8c24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2aabfa8c6860" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfa8c6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2aabfa8c6bb0"/>
        <function-ref name="getDSN" scoped="" ref="0x2aabfa8c6d38"/>
        <function-ref name="setFCF" scoped="" ref="0x2aabfa8c5020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2aabfa8c51a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2aabfa8c5330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2aabfa8c54b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2aabfa8c5640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2aabfa8c57c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2aabfa8c5950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2aabfa8c5ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2aabfa8c5c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2aabfa8c5de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2aabfa8c4020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aabfa8c42a8"/>
        <function-ref name="localPan" scoped="" ref="0x2aabfa8c4430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2aabfa8c45b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2aabfa8c4740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2aabfa8c48c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2aabfa8c4a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa8c4bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aabfa8c4d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2aabfa8c3020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aabfa8c31a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2aabfa8c3330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2aabfa8c34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2aabfa8c8020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2aabfa8c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa8c8370"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfa8c84f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa8c8680"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa8c8808"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa8c8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2aabfa8c8c18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2aabfa8c8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa8c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfa91fe00" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfa91fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa91e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa91e330"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa91e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfa91e740" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfa91e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa91ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2aabfa921120" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2aabfa921120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa921470"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa9215f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa921780"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa921908"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfa921a90"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfa921c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2aabfa920908" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2aabfa920908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa920c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfa91ed18" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfa91ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa91c0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa91c228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa91c3b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa91c538"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfa91c6c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfa91c848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2aabfa920020" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2aabfa920020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa920370"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa9204f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa920680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2aabfa906230" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2aabfa906230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa906580"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa906708"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa906890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2aabfa906b18" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2aabfa906b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa906e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2aabfa91f020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2aabfa91f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa91f370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa91f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa91f680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa91f808"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfa91f990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfa91fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2aabfa9c2900" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2aabfa9c2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2aabfa9c2c50"/>
        <function-ref name="address" scoped="" ref="0x2aabfa9c2dd8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfa9c1020"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfa9c11a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfa9c1330"/>
        <function-ref name="pan" scoped="" ref="0x2aabfa9c14b8"/>
        <function-ref name="setPan" scoped="" ref="0x2aabfa9c1640"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa9c17c8"/>
        <function-ref name="localPan" scoped="" ref="0x2aabfa9c1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfa9c1b98" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfa9c1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa9c0020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa9c01a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa9c0330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa9c04b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfa9c0640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfa9c07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2aabfa9c5980" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfa9c5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2aabfa9c5cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2aabfa9c5e58"/>
        <function-ref name="setFCF" scoped="" ref="0x2aabfa9c4020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2aabfa9c41a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2aabfa9c4330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2aabfa9c44b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2aabfa9c4640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2aabfa9c47c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2aabfa9c4950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2aabfa9c4ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2aabfa9c4c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2aabfa9c4de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2aabfa9c3020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aabfa9c32a8"/>
        <function-ref name="localPan" scoped="" ref="0x2aabfa9c3430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2aabfa9c35b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2aabfa9c3740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2aabfa9c38c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2aabfa9c3a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfa9c3bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aabfa9c3d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2aabfa9c2020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aabfa9c21a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2aabfa9c2330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2aabfa9c24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfa9c0ab0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfa9c0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa9c0e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfa9bf020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfa9bf1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfa9bf330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfa9bf4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfa9bf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2aabfb34c020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2aabfb34c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2aabfb34c370"/>
        <function-ref name="address" scoped="" ref="0x2aabfb34c4f8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfb34c680"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfb34c808"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfb34c990"/>
        <function-ref name="pan" scoped="" ref="0x2aabfb34cb18"/>
        <function-ref name="setPan" scoped="" ref="0x2aabfb34cca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfb34ce28"/>
        <function-ref name="localPan" scoped="" ref="0x2aabfb34b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfb34b268" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfb34b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb34b5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfb34b740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb34b8c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfb34ba50"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfb34bbd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfb34bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2aabfb34f020" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfb34f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2aabfb34f370"/>
        <function-ref name="getDSN" scoped="" ref="0x2aabfb34f4f8"/>
        <function-ref name="setFCF" scoped="" ref="0x2aabfb34f680"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2aabfb34f808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2aabfb34f990"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2aabfb34fb18"/>
        <function-ref name="setDSN" scoped="" ref="0x2aabfb34fca0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2aabfb34fe28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2aabfb34e020"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2aabfb34e1a8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2aabfb34e330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2aabfb34e4b8"/>
        <function-ref name="localAddr" scoped="" ref="0x2aabfb34e640"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aabfb34e8c8"/>
        <function-ref name="localPan" scoped="" ref="0x2aabfb34ea50"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2aabfb34ebd8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2aabfb34ed60"/>
        <function-ref name="setFramePending" scoped="" ref="0x2aabfb34d020"/>
        <function-ref name="setDestPan" scoped="" ref="0x2aabfb34d1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfb34d330"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aabfb34d4b8"/>
        <function-ref name="getFCF" scoped="" ref="0x2aabfb34d640"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aabfb34d7c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2aabfb34d950"/>
        <function-ref name="getFramePending" scoped="" ref="0x2aabfb34dad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2aabfb34a060" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2aabfb34a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2aabfb34a3b0"/>
        <function-ref name="changed" scoped="" ref="0x2aabfb34a538"/>
        <function-ref name="amGroup" scoped="" ref="0x2aabfb34a6c0"/>
        <function-ref name="setAddress" scoped="" ref="0x2aabfb34a848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfb34aad0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfb34aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb34ae20"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfb348020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb3481a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfb348330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfb3484b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfb348640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfa9f7510" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfa9f7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa9f7860"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa9f79e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa9f7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfa9f7df8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfa9f7df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa9f6170"/>
        <function-ref name="header" scoped="" ref="0x2aabfa9f62f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfa9f8470" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfa9f8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfa9f87c0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfa9f8948"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfa9f8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfa9f6580" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfa9f6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2aabfa9f68d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2aabfa9f6a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2aabfa9f6be0"/>
        <function-ref name="getSender" scoped="" ref="0x2aabfa9f6d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfa9f8d18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfa9f8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfa9f70a0"/>
        <function-ref name="header" scoped="" ref="0x2aabfa9f7228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfb371458" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfb371458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb3717a8"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb371930"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb371ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfb371d40" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfb371d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb3700d8"/>
        <function-ref name="header" scoped="" ref="0x2aabfb370260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2aabfb3e5bd8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aabfb3e5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb3e4020"/>
        <function-ref name="clearAll" scoped="" ref="0x2aabfb3e41a8"/>
        <function-ref name="get" scoped="" ref="0x2aabfb3e4330"/>
        <function-ref name="set" scoped="" ref="0x2aabfb3e44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfb376d98" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfb376d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb373170"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb3732f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb373480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2aabfb3e5020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2aabfb3e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2aabfb3e5370"/>
        <function-ref name="insertNode" scoped="" ref="0x2aabfb3e54f8"/>
        <function-ref name="getNode" scoped="" ref="0x2aabfb3e5680"/>
        <function-ref name="evicted" scoped="" ref="0x2aabfb3e5808"/>
        <function-ref name="getIndex" scoped="" ref="0x2aabfb3e5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfb3736c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfb3736c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb373a18"/>
        <function-ref name="header" scoped="" ref="0x2aabfb373ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfb373de8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfb373de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfb371170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2aabfb3704a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2aabfb3704a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2aabfb3707f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2aabfb370980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2aabfb370b08"/>
        <function-ref name="getSender" scoped="" ref="0x2aabfb370c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2aabfa9dcd70" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2aabfa9dcd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2aabfa9d90f0"/>
        <function-ref name="insertNode" scoped="" ref="0x2aabfa9d9278"/>
        <function-ref name="getNode" scoped="" ref="0x2aabfa9d9400"/>
        <function-ref name="evicted" scoped="" ref="0x2aabfa9d9588"/>
        <function-ref name="getIndex" scoped="" ref="0x2aabfa9d9710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2aabfa9d4b18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aabfa9d4b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfa9d4e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2aabfa9d3020"/>
        <function-ref name="get" scoped="" ref="0x2aabfa9d31a8"/>
        <function-ref name="set" scoped="" ref="0x2aabfa9d3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2aabfa9d6850" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2aabfa9d6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2aabfa9d6ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2aabfa9d6d28"/>
        <function-ref name="getNode" scoped="" ref="0x2aabfa9d4020"/>
        <function-ref name="evicted" scoped="" ref="0x2aabfa9d41a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2aabfa9d4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfa9d6238" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfa9d6238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfa9d6588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2aabfb3e2140" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2aabfb3e2140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb3e2490"/>
        <function-ref name="clearAll" scoped="" ref="0x2aabfb3e2618"/>
        <function-ref name="get" scoped="" ref="0x2aabfb3e27a0"/>
        <function-ref name="set" scoped="" ref="0x2aabfb3e2928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfaa36c38" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfaa36c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfaa35020"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfaa351a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfaa35330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfaa355b8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfaa355b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfaa35908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2aabfaa32100" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2aabfaa32100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfaa32450"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfaa325d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfaa32760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfaa392e8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfaa392e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfaa39638"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfaa397c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfaa39948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfaa37e20" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfaa37e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfaa361a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfaa36330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfaa364b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfaa36640"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfaa367c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfaa36950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfaa35b90" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfaa35b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfaa34020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfaa341a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfaa34330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfaa344b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfaa34640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfaa347c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2aabfaa33470" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2aabfaa33470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aabfaa337c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2aabfaa33948"/>
        <function-ref name="getRetries" scoped="" ref="0x2aabfaa33ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aabfaa33c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aabfaa33de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfaa39bd0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfaa39bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfaa37020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2aabfaa34a10" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfaa34a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfaa34d60"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfaa33020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfaa331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2aabfaa37268" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2aabfaa37268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2aabfaa375b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2aabfaa37740"/>
        <function-ref name="getRetries" scoped="" ref="0x2aabfaa378c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2aabfaa37a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2aabfaa37bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfaa2d988" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfaa2d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfaa2dcd8"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfaa2de60"/>
        <function-ref name="start" scoped="" ref="0x2aabfaa68020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaa681a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfaa655c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfaa655c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfaa65918"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfaa65aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfaa65c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfaa63020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfaa63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfaa63370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfaa68430" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfaa68430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfaa68780"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfaa68908"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfaa68a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfaa672e8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfaa672e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfaa67638"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfaa677c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfaa67948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfaa67ad0"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfaa67c58"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfaa67de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aabfaa66060" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfaa66060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aabfaa663b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aabfaa66538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aabfaa666c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aabfaa66848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2aabfaa66b30" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2aabfaa66b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfaa66e80"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfaa65030"/>
        <function-ref name="start" scoped="" ref="0x2aabfaa651b8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaa65340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfaa68d18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfaa68d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfaa670a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfaa635f8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfaa635f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfaa63948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfaa63ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfaa63c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfaa63de0"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfaa62020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfaa621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2aabfb3bf458" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2aabfb3bf458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2aabfb3bf7a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2aabfb3bf930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2aabfb3bfab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2aabfb3bfc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfaa9b270" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfaa9b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfaa9b5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfaa9b748"/>
        <function-ref name="start" scoped="" ref="0x2aabfaa9b8d0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfaa9ba58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2aabfaa985d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aabfaa985d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfaa98928"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfaa98ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfaa98c38"/>
        <function-ref name="done" scoped="" ref="0x2aabfaa98dc0"/>
        <function-ref name="standby" scoped="" ref="0x2aabfaa97020"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfaa971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfaa9bce0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfaa9bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfaa990a0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfaa99228"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfaa993b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2aabfaa97c98" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfaa97c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfaa96020"/>
        <function-ref name="header" scoped="" ref="0x2aabfaa961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfaa99638" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfaa99638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfaa99988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2aabfaa973f0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfaa973f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfaa97740"/>
        <function-ref name="ready" scoped="" ref="0x2aabfaa978c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfaa97a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2aabfaa99bd0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aabfaa99bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aabfaa98020"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfaa981a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfaa98330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfb3b7870" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfb3b7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfb3b7bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfb3b7d48"/>
        <function-ref name="start" scoped="" ref="0x2aabfb3b6020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb3b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2aabfb3b6430" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aabfb3b6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfb3b6780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2aabfb3b4450" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aabfb3b4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfb3b47a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfb3b4928"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfb3b4ab0"/>
        <function-ref name="done" scoped="" ref="0x2aabfb3b4c38"/>
        <function-ref name="standby" scoped="" ref="0x2aabfb3b4dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfb3b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfb3b6a08" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfb3b6a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb3b6d58"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb3b5020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb3b51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2aabfb3b04f0" loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2aabfb3b04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb3b0840"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb3b09c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2aabfb3b2578" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfb3b2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb3b28c8"/>
        <function-ref name="header" scoped="" ref="0x2aabfb3b2a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2aabfb3b0c90" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2aabfb3b0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb3af020"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb3af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfb3b5430" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfb3b5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb3b5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2aabfb3b2d18" loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2aabfb3b2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb3b00a0"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb3b0228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2aabfb3b3c98" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfb3b3c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb3b2020"/>
        <function-ref name="ready" scoped="" ref="0x2aabfb3b21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb3b2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2aabfb3b59c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2aabfb3b59c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2aabfb3b5d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfb3b4020"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfb3b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2aabfb3b3268" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2aabfb3b3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2aabfb3b35b8"/>
        <function-ref name="suspend" scoped="" ref="0x2aabfb3b3740"/>
        <function-ref name="resume" scoped="" ref="0x2aabfb3b38c8"/>
        <function-ref name="run" scoped="" ref="0x2aabfb3b3a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfaae80c0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfaae80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfaae8410"/>
        <function-ref name="ready" scoped="" ref="0x2aabfaae8598"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfaae8720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfaae89a8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfaae89a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfaae8cf8"/>
        <function-ref name="header" scoped="" ref="0x2aabfaae8e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aabfaae70f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfaae70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aabfaae7440"/>
        <function-ref name="wait" scoped="" ref="0x2aabfaae75c8"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfaae7750"/>
        <function-ref name="isFree" scoped="" ref="0x2aabfaae78d8"/>
        <function-ref name="getNow" scoped="" ref="0x2aabfaae7a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfaae7ce8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfaae7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2aabfaae60a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2aabfaae6228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2aabfaae63b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2aabfaae6538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfaaea8c8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfaaea8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfaaeac18"/>
        <function-ref name="header" scoped="" ref="0x2aabfaaeada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aabfaaea020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfaaea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfaaea370"/>
        <function-ref name="ready" scoped="" ref="0x2aabfaaea4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfaaea680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfb3f0d38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfb3f0d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb3ef0d8"/>
        <function-ref name="ready" scoped="" ref="0x2aabfb3ef260"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb3ef3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfb3ef670" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfb3ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb3ef9c0"/>
        <function-ref name="header" scoped="" ref="0x2aabfb3efb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aabfb3efd90" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfb3efd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aabfb3ee170"/>
        <function-ref name="wait" scoped="" ref="0x2aabfb3ee2f8"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb3ee480"/>
        <function-ref name="isFree" scoped="" ref="0x2aabfb3ee608"/>
        <function-ref name="getNow" scoped="" ref="0x2aabfb3ee790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2aabfb3ee9d8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2aabfb3ee9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2aabfb3eed28"/>
        <function-ref name="rand32" scoped="" ref="0x2aabfb3ed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfb3ed2a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfb3ed2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2aabfb3ed5f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2aabfb3ed780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2aabfb3ed908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2aabfb3eda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfb3f0578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfb3f0578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfb3f08c8"/>
        <function-ref name="header" scoped="" ref="0x2aabfb3f0a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aabfb3f2b58" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfb3f2b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb3f0020"/>
        <function-ref name="ready" scoped="" ref="0x2aabfb3f01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb3f0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2aabfb3edd58" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2aabfb3edd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfb3ec0d8"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfb3ec260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2aabfaafd690" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2aabfaafd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2aabfaafd9e0"/>
        <function-ref name="rand32" scoped="" ref="0x2aabfaafdb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2aabfaafc668" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2aabfaafc668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfaafd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfab02940" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfab02940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfab02c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2aabfaaf7568" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2aabfaaf7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2aabfaaf78b8"/>
        <function-ref name="rand32" scoped="" ref="0x2aabfaaf7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2aabfaaf8528" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2aabfaaf8528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfaaf70c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfaafbb40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfaafbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfaaf8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfab5f020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfab5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfab5f370"/>
        <function-ref name="ready" scoped="" ref="0x2aabfab5f4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfab5f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfab5f908" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfab5f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfab5fc58"/>
        <function-ref name="header" scoped="" ref="0x2aabfab5fde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2aabfab5e060" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfab5e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aabfab5e3b0"/>
        <function-ref name="wait" scoped="" ref="0x2aabfab5e538"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfab5e6c0"/>
        <function-ref name="isFree" scoped="" ref="0x2aabfab5e848"/>
        <function-ref name="getNow" scoped="" ref="0x2aabfab5e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2aabfab5dd60" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2aabfab5dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfab5b0d8"/>
        <function-ref name="get" scoped="" ref="0x2aabfab5b260"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfab5b3e8"/>
        <function-ref name="set" scoped="" ref="0x2aabfab5b570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfab5ec58" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfab5ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2aabfab5d020"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2aabfab5d1a8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aabfab5d330"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2aabfab5d4b8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2aabfab5d640"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2aabfab5d7c8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aabfab5d950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aabfab5dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfab35e00" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfab35e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfab601a8"/>
        <function-ref name="header" scoped="" ref="0x2aabfab60330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aabfab35558" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfab35558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfab358a8"/>
        <function-ref name="ready" scoped="" ref="0x2aabfab35a30"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfab35bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2aabfab60578" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2aabfab60578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfab608c8"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfab60a50"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfab60bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2aabfab5b7f8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2aabfab5b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfab5bb48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfab5bcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfab5be58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfab5a020"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfab5a1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfab5a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfab577e0" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfab577e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfab57b30"/>
        <function-ref name="header" scoped="" ref="0x2aabfab57cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfab57020" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfab57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfab57370"/>
        <function-ref name="header" scoped="" ref="0x2aabfab574f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2aabfab4a020" loc="21:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2aabfab4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2aabfab4a370"/>
        <function-ref name="getDSN" scoped="" ref="0x2aabfab4a4f8"/>
        <function-ref name="setFCF" scoped="" ref="0x2aabfab4a680"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2aabfab4a808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2aabfab4a990"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2aabfab4ab18"/>
        <function-ref name="setDSN" scoped="" ref="0x2aabfab4aca0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2aabfab4ae28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2aabfab49020"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2aabfab491a8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2aabfab49330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2aabfab494b8"/>
        <function-ref name="localAddr" scoped="" ref="0x2aabfab49640"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2aabfab498c8"/>
        <function-ref name="localPan" scoped="" ref="0x2aabfab49a50"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2aabfab49bd8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2aabfab49d60"/>
        <function-ref name="setFramePending" scoped="" ref="0x2aabfab48020"/>
        <function-ref name="setDestPan" scoped="" ref="0x2aabfab481a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfab48330"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2aabfab484b8"/>
        <function-ref name="getFCF" scoped="" ref="0x2aabfab48640"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2aabfab487c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2aabfab48950"/>
        <function-ref name="getFramePending" scoped="" ref="0x2aabfab48ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1DriverConfig" ref="0x2aabfab47020" loc="22:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2aabfab47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2aabfab47370"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2aabfab474f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfab47680"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2aabfab47808"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfab47990"/>
        <function-ref name="setAck" scoped="" ref="0x2aabfab47b18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfab47ca0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2aabfab47e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2aabfab43180" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfab43180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aabfab434f0"/>
        <function-ref name="wait" scoped="" ref="0x2aabfab43678"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfab43800"/>
        <function-ref name="isFree" scoped="" ref="0x2aabfab43988"/>
        <function-ref name="getNow" scoped="" ref="0x2aabfab43b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aabfab42190" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfab42190"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aabfa05d6b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfab40918"/>
        <function-ref name="fired" scoped="" ref="0x2aabfab41980"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfab40310"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfab41e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfab40da0"/>
        <function-ref name="start" scoped="" ref="0x2aabfab41020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfab414f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2aabfb49d5a0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2aabfb49d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2aabfb49d910"/>
        <function-ref name="wait" scoped="" ref="0x2aabfb49da98"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb49dc20"/>
        <function-ref name="isFree" scoped="" ref="0x2aabfb49dda8"/>
        <function-ref name="getNow" scoped="" ref="0x2aabfb49c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2aabfb49c4d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfb49c4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aabfa05d6b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfb49ac88"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb49bd08"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfb49a680"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfb49a1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfb499150"/>
        <function-ref name="start" scoped="" ref="0x2aabfb49b3a8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb49b880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2aabfb499528" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2aabfb499528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2aabfb499878"/>
        <function-ref name="suspend" scoped="" ref="0x2aabfb499a00"/>
        <function-ref name="resume" scoped="" ref="0x2aabfb499b88"/>
        <function-ref name="run" scoped="" ref="0x2aabfb499d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfab7b338" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfab7b338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfab7b688"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfab7b810"/>
        <function-ref name="start" scoped="" ref="0x2aabfab7b998"/>
        <function-ref name="stop" scoped="" ref="0x2aabfab7bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2aabfab78b10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2aabfab78b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aabfab78e60"/>
        <function-ref name="request" scoped="" ref="0x2aabfab77020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfab72020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfab72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfab72370"/>
        <function-ref name="ready" scoped="" ref="0x2aabfab724f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfab72680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfab72908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfab72908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfab72c58"/>
        <function-ref name="header" scoped="" ref="0x2aabfab72de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2aabfab7abe0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aabfab7abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfab79020"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfab791a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfab79330"/>
        <function-ref name="done" scoped="" ref="0x2aabfab794b8"/>
        <function-ref name="standby" scoped="" ref="0x2aabfab79640"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfab797c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfab77268" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfab77268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfab775b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfab77740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfab778c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfab77a50"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfab77bd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfab77d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2aabfab73020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2aabfab73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfab73470"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfab735f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfab73780"/>
        <function-ref name="done" scoped="" ref="0x2aabfab73908"/>
        <function-ref name="standby" scoped="" ref="0x2aabfab73a90"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfab73c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2aabfab76020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aabfab76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aabfab76370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfab783f0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfab783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfab78740"/>
        <function-ref name="header" scoped="" ref="0x2aabfab788c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2aabfab74a08" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2aabfab74a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfab74d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2aabfab76658" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2aabfab76658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfab769a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfab76b30"/>
        <function-ref name="start" scoped="" ref="0x2aabfab76cb8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfab76e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfab71800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfab71800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfab71b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfab71cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfab71e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfab70020"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfab701a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfab70330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2aabfab7a648" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2aabfab7a648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfab7a998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfab705b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfab705b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aabfab70908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2aabfab74120" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2aabfab74120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfab74470"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfab745f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfab74780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aabfab79a10" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfab79a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfab79d60"/>
        <function-ref name="ready" scoped="" ref="0x2aabfab78020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfab781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2aabfab710a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2aabfab710a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aabfab713f0"/>
        <function-ref name="request" scoped="" ref="0x2aabfab71578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2aabfab7bd68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2aabfab7bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfab7a0f0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfab7a278"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfab7a400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2aabfac04da0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2aabfac04da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac02170"/>
        <function-ref name="get" scoped="" ref="0x2aabfac022f8"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfac02480"/>
        <function-ref name="set" scoped="" ref="0x2aabfac02608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfac06020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac06370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac064f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac06680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac06808"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac06990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac06b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfac04020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfac04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac04370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac044f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac04680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac04808"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac04990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac04b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2aabfac0a598" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfac0a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfac09a88"/>
        <function-ref name="clear" scoped="" ref="0x2aabfac07190"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfac093a8"/>
        <function-ref name="set" scoped="" ref="0x2aabfac07870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2aabfac05020" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfac05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfac05ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aabfac0d920" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfac0d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfac0cd78"/>
        <function-ref name="clear" scoped="" ref="0x2aabfac0b4b8"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfac0c698"/>
        <function-ref name="set" scoped="" ref="0x2aabfac0bb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2aabfb475b30" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2aabfb475b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb475e80"/>
        <function-ref name="get" scoped="" ref="0x2aabfb473030"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfb4731b8"/>
        <function-ref name="set" scoped="" ref="0x2aabfb473340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfb476cd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfb476cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb4750a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfb475228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb4753b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfb475538"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfb4756c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfb475848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfb4718a8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfb4718a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb471bf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfb471d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb470020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfb4701a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfb470330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfb4704b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2aabfb4782d0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2aabfb4782d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfb477768"/>
        <function-ref name="clear" scoped="" ref="0x2aabfb477e48"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfb477088"/>
        <function-ref name="set" scoped="" ref="0x2aabfb476558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2aabfb4736d0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfb4736d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfb4723a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2aabfb4728c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2aabfb4728c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfb471490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2aabfb47c688" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2aabfb47c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfb47bae0"/>
        <function-ref name="clear" scoped="" ref="0x2aabfb47a1f0"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfb47b400"/>
        <function-ref name="set" scoped="" ref="0x2aabfb47a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aabfabc8380" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aabfabc8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfabc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aabfabc6ab0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aabfabc6ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfabc5658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aabfabc5c80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfabc5c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a959d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2aabf9a95d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfac12a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfac114a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfac11020"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfac11930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfabfda70" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfabfda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfabfddc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac36020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac361a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac36330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac364b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac36640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfac36928" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfac36928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac36c78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac36e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac35020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac351a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac35330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac354b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2aabfabfd020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2aabfabfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfabfd390"/>
        <function-ref name="get" scoped="" ref="0x2aabfabfd518"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfabfd6a0"/>
        <function-ref name="set" scoped="" ref="0x2aabfabfd828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfac33268" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfac33268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfac335b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfac33740"/>
        <function-ref name="start" scoped="" ref="0x2aabfac338c8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfac33a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2aabfac2f988" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2aabfac2f988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aabfac2fcd8"/>
        <function-ref name="request" scoped="" ref="0x2aabfac2fe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfac2a020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfac2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfac2a370"/>
        <function-ref name="ready" scoped="" ref="0x2aabfac2a4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfac2a680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfac2a908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfac2a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfac2ac58"/>
        <function-ref name="header" scoped="" ref="0x2aabfac2ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2aabfac32b10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aabfac32b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfac32e60"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfac30020"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfac301a8"/>
        <function-ref name="done" scoped="" ref="0x2aabfac30330"/>
        <function-ref name="standby" scoped="" ref="0x2aabfac304b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfac30640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfac2e0e0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac2e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac2e430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac2e5b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac2e740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac2e8c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac2ea50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac2ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2aabfac2b020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2aabfac2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfac2b470"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfac2b5f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfac2b780"/>
        <function-ref name="done" scoped="" ref="0x2aabfac2b908"/>
        <function-ref name="standby" scoped="" ref="0x2aabfac2ba90"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfac2bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2aabfac2ee60" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aabfac2ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aabfac2d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfac2f268" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfac2f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfac2f5b8"/>
        <function-ref name="header" scoped="" ref="0x2aabfac2f740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2aabfac2c908" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2aabfac2c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfac2cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2aabfac2d4d0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2aabfac2d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfac2d820"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfac2d9a8"/>
        <function-ref name="start" scoped="" ref="0x2aabfac2db30"/>
        <function-ref name="stop" scoped="" ref="0x2aabfac2dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfac29800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfac29800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac29b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac29cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac29e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac27020"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac271a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac27330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2aabfac32578" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2aabfac32578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfac328c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfac275b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfac275b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aabfac27908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2aabfac2c020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2aabfac2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfac2c370"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfac2c4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfac2c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aabfac30888" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfac30888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfac30bd8"/>
        <function-ref name="ready" scoped="" ref="0x2aabfac30d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfac2f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2aabfac290a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2aabfac290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aabfac293f0"/>
        <function-ref name="request" scoped="" ref="0x2aabfac29578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2aabfac33c98" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2aabfac33c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfac32020"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfac321a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfac32330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2aabfac23d08" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2aabfac23d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfac220a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfac22228"/>
        <function-ref name="start" scoped="" ref="0x2aabfac223b0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfac22538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2aabfac1f3f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2aabfac1f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aabfac1f740"/>
        <function-ref name="request" scoped="" ref="0x2aabfac1f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2aabfac1a8c8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2aabfac1a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfac1ac18"/>
        <function-ref name="ready" scoped="" ref="0x2aabfac1ada0"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfac19020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2aabfac192a8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2aabfac192a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfac195f8"/>
        <function-ref name="header" scoped="" ref="0x2aabfac19780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2aabfac215f8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aabfac215f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfac21948"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfac21ad0"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfac21c58"/>
        <function-ref name="done" scoped="" ref="0x2aabfac21de0"/>
        <function-ref name="standby" scoped="" ref="0x2aabfac20020"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfac201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfac1fb10" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac1fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac1fe60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac1e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac1e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac1e330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac1e4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac1e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2aabfac1ba08" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2aabfac1ba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfac1be58"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfac1a020"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfac1a1a8"/>
        <function-ref name="done" scoped="" ref="0x2aabfac1a330"/>
        <function-ref name="standby" scoped="" ref="0x2aabfac1a4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfac1a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2aabfac1e8c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2aabfac1e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aabfac1ec18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfac20c98" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfac20c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfac1f020"/>
        <function-ref name="header" scoped="" ref="0x2aabfac1f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2aabfac1b430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2aabfac1b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfac1b780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2aabfac1c020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2aabfac1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2aabfac1c370"/>
        <function-ref name="stopDone" scoped="" ref="0x2aabfac1c4f8"/>
        <function-ref name="start" scoped="" ref="0x2aabfac1c680"/>
        <function-ref name="stop" scoped="" ref="0x2aabfac1c808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfac182a8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfac182a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac185f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac18780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac18908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac18a90"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac18c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac18da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2aabfac21060" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2aabfac21060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfac213b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfac17060" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfac17060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2aabfac173b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2aabfac1ca90" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2aabfac1ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfac1cde0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfac1b020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfac1b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aabfac203f0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfac203f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfac20740"/>
        <function-ref name="ready" scoped="" ref="0x2aabfac208c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfac20a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2aabfac19a08" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2aabfac19a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aabfac19d58"/>
        <function-ref name="request" scoped="" ref="0x2aabfac18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2aabfac22780" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2aabfac22780"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfac22ad0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfac22c58"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfac22de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2aabfac93b60" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfac93b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2aabfac92020"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2aabfac921a8"/>
        <function-ref name="txModeSet" scoped="" ref="0x2aabfac92330"/>
        <function-ref name="txModeGet" scoped="" ref="0x2aabfac924b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfac92700" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac92700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac92a50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac92bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac92d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac90020"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac901a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac90330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2aabfac6aa50" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfac6aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac930c0"/>
        <function-ref name="get" scoped="" ref="0x2aabfac94b68"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfac94658"/>
        <function-ref name="set" scoped="" ref="0x2aabfac935d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2aabfac8f0c0" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2aabfac8f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac8f410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac8f598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac8f720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac8f8a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac8fa30"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac8fbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntCtrlFlag" ref="0x2aabfac90618" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntCtrlFlag" scoped="" ref="0x2aabfac90618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac90968"/>
        <function-ref name="get" scoped="" ref="0x2aabfac90af0"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfac90c78"/>
        <function-ref name="set" scoped="" ref="0x2aabfac90e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RxModeLock" ref="0x2aabfac6a1e8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2aabfac6a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfac6a538"/>
        <function-ref name="stop" scoped="" ref="0x2aabfac6a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2aabfac86020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2aabfac86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aabfac86370"/>
        <function-ref name="request" scoped="" ref="0x2aabfac864f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2aabfac7f020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfac7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac7e608"/>
        <function-ref name="get" scoped="" ref="0x2aabfac7e0f8"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfac7fba0"/>
        <function-ref name="set" scoped="" ref="0x2aabfac7eb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2aabfacbee28" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabfacbee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2aabfacbd1a8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2aabfacbd330"/>
        <function-ref name="txModeSet" scoped="" ref="0x2aabfacbd4b8"/>
        <function-ref name="txModeGet" scoped="" ref="0x2aabfacbd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2aabfacc4020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aabfacc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfacc2478"/>
        <function-ref name="clear" scoped="" ref="0x2aabfacc2b58"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfacc4d70"/>
        <function-ref name="set" scoped="" ref="0x2aabfacc1278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2aabfacbb020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2aabfacbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfacbb370"/>
        <function-ref name="get" scoped="" ref="0x2aabfacbb4f8"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfacbb680"/>
        <function-ref name="set" scoped="" ref="0x2aabfacbb808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2aabfac88020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aabfac88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfac88370"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfac884f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfac88680"/>
        <function-ref name="done" scoped="" ref="0x2aabfac88808"/>
        <function-ref name="standby" scoped="" ref="0x2aabfac88990"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfac88b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2aabfac81b10" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfac81b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac80190"/>
        <function-ref name="get" scoped="" ref="0x2aabfac84c38"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfac84728"/>
        <function-ref name="set" scoped="" ref="0x2aabfac806a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfac867b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfac867b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac86b00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfac86c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac86e10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfac85020"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac851a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac85330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfac6ca48" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfac6ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2aabfac6cd98"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2aabfac6b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfac6b1a8"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2aabfac6b330"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfac6b4b8"/>
        <function-ref name="setAck" scoped="" ref="0x2aabfac6b640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfac6b7c8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2aabfac6b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfac87748" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfac87748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfac87a98"/>
        <function-ref name="header" scoped="" ref="0x2aabfac87c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfac744b8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfac744b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aabfa05d6b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfac71c88"/>
        <function-ref name="fired" scoped="" ref="0x2aabfac73d08"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfac71680"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfac711f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfac70150"/>
        <function-ref name="start" scoped="" ref="0x2aabfac733a8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfac73880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2aabfac7c3b0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2aabfac7c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac7ba40"/>
        <function-ref name="get" scoped="" ref="0x2aabfac7b530"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfac7b020"/>
        <function-ref name="set" scoped="" ref="0x2aabfac79020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2aabfacc1c80" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfacc1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfacbe2a8"/>
        <function-ref name="get" scoped="" ref="0x2aabfacc0d68"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfacc0858"/>
        <function-ref name="set" scoped="" ref="0x2aabfacbe7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2aabfacba860" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2aabfacba860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfacbabb0"/>
        <function-ref name="stop" scoped="" ref="0x2aabfacbad38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2aabfacbd9c8" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2aabfacbd9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabfacbdd18"/>
        <function-ref name="stop" scoped="" ref="0x2aabfacbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftAckAlarm" ref="0x2aabfac708e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftAckAlarm" scoped="" ref="0x2aabfac708e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aabfa05d6b8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfac6c020"/>
        <function-ref name="fired" scoped="" ref="0x2aabfac6d020"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfac6d930"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfac6d4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfac6c4a8"/>
        <function-ref name="start" scoped="" ref="0x2aabfac6f660"/>
        <function-ref name="stop" scoped="" ref="0x2aabfac6fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2aabfac75220" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2aabfac75220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfac75da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aabfac88dc0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfac88dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfac87170"/>
        <function-ref name="ready" scoped="" ref="0x2aabfac872f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfac87480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2aabfac79860" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfac79860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfac78e30"/>
        <function-ref name="get" scoped="" ref="0x2aabfac78920"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfac78410"/>
        <function-ref name="set" scoped="" ref="0x2aabfac76388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2aabfacbbb78" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aabfacbbb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfacba020"/>
        <function-ref name="get" scoped="" ref="0x2aabfacba1a8"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfacba330"/>
        <function-ref name="set" scoped="" ref="0x2aabfacba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2aabfacbc3c0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aabfacbc3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfacbc710"/>
        <function-ref name="get" scoped="" ref="0x2aabfacbc898"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfacbca20"/>
        <function-ref name="set" scoped="" ref="0x2aabfacbcba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2aabfac769d0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfac769d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2aabfac76d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2aabfac812b8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2aabfac812b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2aabfac81608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2aabfacb1d70" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2aabfacb1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2aabfacb00f0"/>
        <function-ref name="request" scoped="" ref="0x2aabfacb0278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2aabfac9d498" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2aabfac9d498"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2aabf9a93c50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2aabfac9f220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2aabfacab0c8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2aabfacab0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfaca96a0"/>
        <function-ref name="get" scoped="" ref="0x2aabfaca9190"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfacabc48"/>
        <function-ref name="set" scoped="" ref="0x2aabfaca9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2aabfacf04f0" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2aabfacf04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfacf0840"/>
        <function-ref name="get" scoped="" ref="0x2aabfacf09c8"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfacf0b50"/>
        <function-ref name="set" scoped="" ref="0x2aabfacf0cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2aabface8c78" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2aabface8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2aabface7020"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2aabface71a8"/>
        <function-ref name="txModeSet" scoped="" ref="0x2aabface7330"/>
        <function-ref name="txModeGet" scoped="" ref="0x2aabface74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2aabfacb3788" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2aabfacb3788"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfacb3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2aabfacefe50" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2aabfacefe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2aabfacec300"/>
        <function-ref name="clear" scoped="" ref="0x2aabfacec9e0"/>
        <function-ref name="isValid" scoped="" ref="0x2aabfaceebe8"/>
        <function-ref name="set" scoped="" ref="0x2aabfaceb0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2aabfacb3d88" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2aabfacb3d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2aabfacb2170"/>
        <function-ref name="turnOn" scoped="" ref="0x2aabfacb22f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2aabfacb2480"/>
        <function-ref name="done" scoped="" ref="0x2aabfacb2608"/>
        <function-ref name="standby" scoped="" ref="0x2aabfacb2790"/>
        <function-ref name="getChannel" scoped="" ref="0x2aabfacb2918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2aabfac9f7f0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aabfac9f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="TRadio" ref="0x2aabfa05d2b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfac9c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2aabfacafcf0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2aabfacafcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfacac388"/>
        <function-ref name="get" scoped="" ref="0x2aabfacade00"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfacad8f0"/>
        <function-ref name="set" scoped="" ref="0x2aabfacac898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2aabfacb0530" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2aabfacb0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfacb0880"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfacb0a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfacb0b90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfacb0d18"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfacaf020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfacaf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2aabfacf2588" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2aabfacf2588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2aabfacf28d8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2aabfacf2a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfacf2be8"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2aabfacf2d70"/>
        <function-ref name="headerLength" scoped="" ref="0x2aabfacf1020"/>
        <function-ref name="setAck" scoped="" ref="0x2aabfacf11a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2aabfacf1330"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2aabfacf14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2aabfacb15f8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2aabfacb15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfacb1948"/>
        <function-ref name="header" scoped="" ref="0x2aabfacb1ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2aabface5498" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2aabface5498"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabface57e8"/>
        <function-ref name="stop" scoped="" ref="0x2aabface5970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2aabfaca1168" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2aabfaca1168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2aabfaca14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2aabfacebb00" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2aabfacebb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabface80f8"/>
        <function-ref name="get" scoped="" ref="0x2aabfaceabb8"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfacea6a8"/>
        <function-ref name="set" scoped="" ref="0x2aabface8608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2aabfaca8458" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2aabfaca8458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfaca7a40"/>
        <function-ref name="get" scoped="" ref="0x2aabfaca7530"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfaca7020"/>
        <function-ref name="set" scoped="" ref="0x2aabfaca5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2aabfacb4c10" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2aabfacb4c10"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfacb3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2aabface7840" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2aabface7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2aabface7d90"/>
        <function-ref name="stop" scoped="" ref="0x2aabface6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2aabfaca5860" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2aabfaca5860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfaca4e30"/>
        <function-ref name="get" scoped="" ref="0x2aabfaca4920"/>
        <function-ref name="isSet" scoped="" ref="0x2aabfaca4410"/>
        <function-ref name="set" scoped="" ref="0x2aabfaca2388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2aabfacb2bc0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2aabfacb2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfacb1020"/>
        <function-ref name="ready" scoped="" ref="0x2aabfacb11a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfacb1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2aabface6d68" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2aabface6d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2aabface50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x2aabfac9ca30" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2aabfac9ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfac98b80"/>
        <function-ref name="test" scoped="" ref="0x2aabfac9a4a8"/>
        <function-ref name="fired" scoped="" ref="0x2aabfac9a020"/>
        <function-ref name="get" scoped="" ref="0x2aabfac9b5d8"/>
        <function-ref name="reset" scoped="" ref="0x2aabfac9a930"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfacf2088"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfac986f8"/>
        <function-ref name="set" scoped="" ref="0x2aabfac9ba60"/>
        <function-ref name="start" scoped="" ref="0x2aabfac9adb8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfac98270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2aabfacef0e0" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2aabfacef0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfacef430"/>
        <function-ref name="get" scoped="" ref="0x2aabfacef5b8"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfacef740"/>
        <function-ref name="set" scoped="" ref="0x2aabfacef8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2aabfacf1858" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2aabfacf1858"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfacf1ba8"/>
        <function-ref name="get" scoped="" ref="0x2aabfacf1d30"/>
        <function-ref name="setValue" scoped="" ref="0x2aabfacf0020"/>
        <function-ref name="set" scoped="" ref="0x2aabfacf01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2aabfaca29d0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2aabfaca29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2aabfaca2e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2aabface62b0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2aabface62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2aabface6600"/>
        <function-ref name="suspend" scoped="" ref="0x2aabface6788"/>
        <function-ref name="resume" scoped="" ref="0x2aabface6910"/>
        <function-ref name="run" scoped="" ref="0x2aabface6a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2aabfacaf498" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2aabfacaf498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2aabfacaf7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2aabfadc9b28" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2aabfadc9b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2aabf9a938f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2aabf9a93c50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2aabfadc68f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aabfadc1188" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aabfadc1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfadc1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2aabfadbf560" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2aabfadbf560"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfadbe130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2aabfadbe758" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2aabfadbe758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2aabfadbc578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2aabfadbb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2aabfadbca00"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfadbb4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfadc2160" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfadc2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfadb7918"/>
        <function-ref name="fired" scoped="" ref="0x2aabfadb9980"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfadb7310"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfadb9e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfadb7da0"/>
        <function-ref name="start" scoped="" ref="0x2aabfadb9020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfadb94f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2aabfb4fe610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb4fe610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfb4fa6f8"/>
        <function-ref name="test" scoped="" ref="0x2aabfb4fc020"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb4fdb30"/>
        <function-ref name="force" scoped="" ref="0x2aabfb4f9088"/>
        <function-ref name="get" scoped="" ref="0x2aabfb4fd1d0"/>
        <function-ref name="reset" scoped="" ref="0x2aabfb4fc4a8"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfb4fabd0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfb4fa270"/>
        <function-ref name="set" scoped="" ref="0x2aabfb4fd658"/>
        <function-ref name="start" scoped="" ref="0x2aabfb4fc930"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb4fcdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfb507ab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfb507ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfb503150"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb5041f8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfb504b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfb504680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfb5035d8"/>
        <function-ref name="start" scoped="" ref="0x2aabfb506828"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb506d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabfb503b18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb503b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfb4ffc20"/>
        <function-ref name="test" scoped="" ref="0x2aabfb501548"/>
        <function-ref name="get" scoped="" ref="0x2aabfb502728"/>
        <function-ref name="reset" scoped="" ref="0x2aabfb5019d0"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfb4fe130"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfb5010c0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfb4ff798"/>
        <function-ref name="set" scoped="" ref="0x2aabfb502bb0"/>
        <function-ref name="start" scoped="" ref="0x2aabfb501e58"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb4ff310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2aabfb4e6c28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb4e6c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfb4e2db8"/>
        <function-ref name="test" scoped="" ref="0x2aabfb4e3658"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb4e31d0"/>
        <function-ref name="force" scoped="" ref="0x2aabfb4e1778"/>
        <function-ref name="get" scoped="" ref="0x2aabfb4e5820"/>
        <function-ref name="reset" scoped="" ref="0x2aabfb4e3ae0"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfb4e12f0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfb4e2930"/>
        <function-ref name="set" scoped="" ref="0x2aabfb4e5ca8"/>
        <function-ref name="start" scoped="" ref="0x2aabfb4e2020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb4e24a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfb4ee020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfb4ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfb4eb690"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb4ed6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfb4eb088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfb4edb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfb4ebb18"/>
        <function-ref name="start" scoped="" ref="0x2aabfb4eed70"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb4ed270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfb4ef810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfb4ef810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfb4efb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabfb4ea0a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb4ea0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfb4e6270"/>
        <function-ref name="test" scoped="" ref="0x2aabfb4e9a58"/>
        <function-ref name="get" scoped="" ref="0x2aabfb4eac20"/>
        <function-ref name="reset" scoped="" ref="0x2aabfb4e7020"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfb4e6748"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfb4e95d0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfb4e7db8"/>
        <function-ref name="set" scoped="" ref="0x2aabfb4e90f8"/>
        <function-ref name="start" scoped="" ref="0x2aabfb4e74a8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb4e7930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfadb0230" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfadb0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfadae918"/>
        <function-ref name="fired" scoped="" ref="0x2aabfadaf980"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfadae310"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfadafe08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfadaeda0"/>
        <function-ref name="start" scoped="" ref="0x2aabfadaf020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfadaf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2aabfb53f610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb53f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfb53c6f8"/>
        <function-ref name="test" scoped="" ref="0x2aabfb53d020"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb53eb30"/>
        <function-ref name="force" scoped="" ref="0x2aabfb53a088"/>
        <function-ref name="get" scoped="" ref="0x2aabfb53e1d0"/>
        <function-ref name="reset" scoped="" ref="0x2aabfb53d4a8"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfb53cbd0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfb53c270"/>
        <function-ref name="set" scoped="" ref="0x2aabfb53e658"/>
        <function-ref name="start" scoped="" ref="0x2aabfb53d930"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb53ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfb548ab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfb548ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfb544150"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb5461f8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfb546b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfb546680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfb5445d8"/>
        <function-ref name="start" scoped="" ref="0x2aabfb547828"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb547d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabfb544b18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb544b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfb541c20"/>
        <function-ref name="test" scoped="" ref="0x2aabfb542548"/>
        <function-ref name="get" scoped="" ref="0x2aabfb543728"/>
        <function-ref name="reset" scoped="" ref="0x2aabfb5429d0"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfb53f130"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfb5420c0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfb541798"/>
        <function-ref name="set" scoped="" ref="0x2aabfb543bb0"/>
        <function-ref name="start" scoped="" ref="0x2aabfb542e58"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb541310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2aabfb527c28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2aabfb527c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfb523db8"/>
        <function-ref name="test" scoped="" ref="0x2aabfb524658"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb5241d0"/>
        <function-ref name="force" scoped="" ref="0x2aabfb522778"/>
        <function-ref name="get" scoped="" ref="0x2aabfb526820"/>
        <function-ref name="reset" scoped="" ref="0x2aabfb524ae0"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfb5222f0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfb523930"/>
        <function-ref name="set" scoped="" ref="0x2aabfb526ca8"/>
        <function-ref name="start" scoped="" ref="0x2aabfb523020"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb5234a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2aabfb52f020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2aabfb52f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2aabf9aa1078"/>
            <typename><typedef-ref name="T62khz" ref="0x2aabf9aa1360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2aabfb52d690"/>
        <function-ref name="fired" scoped="" ref="0x2aabfb52e6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2aabfb52d088"/>
        <function-ref name="isRunning" scoped="" ref="0x2aabfb52eb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2aabfb52db18"/>
        <function-ref name="start" scoped="" ref="0x2aabfb52fd70"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb52e270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2aabfb530810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2aabfb530810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2aabf9898570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2aabf9898570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2aabfb530b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2aabfb52b0a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2aabfb52b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2aabfb527270"/>
        <function-ref name="test" scoped="" ref="0x2aabfb52aa58"/>
        <function-ref name="get" scoped="" ref="0x2aabfb52bc20"/>
        <function-ref name="reset" scoped="" ref="0x2aabfb528020"/>
        <function-ref name="getMode" scoped="" ref="0x2aabfb527748"/>
        <function-ref name="overflow" scoped="" ref="0x2aabfb52a5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2aabfb528db8"/>
        <function-ref name="set" scoped="" ref="0x2aabfb52a0f8"/>
        <function-ref name="start" scoped="" ref="0x2aabfb5284a8"/>
        <function-ref name="stop" scoped="" ref="0x2aabfb528930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfae5cc20" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfae5cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfae5b020"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfae5b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfae5b330"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfae5b4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfae5b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfae5b888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfae5b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfae5bbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfae5bd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfae5a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfae5a1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfae5a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfae5a578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfae5a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfae5a8c8"/>
        <function-ref name="source" scoped="" ref="0x2aabfae5aa50"/>
        <function-ref name="address" scoped="" ref="0x2aabfae5abd8"/>
        <function-ref name="destination" scoped="" ref="0x2aabfae5ad60"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfae59020"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfae591a8"/>
        <function-ref name="type" scoped="" ref="0x2aabfae59330"/>
        <function-ref name="setType" scoped="" ref="0x2aabfae594b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfae59640"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfae597c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfae59950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2aabfae59bd8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2aabfae59bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfae58020"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfae581a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfae58330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfb587400" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfb587400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb587750"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfb5878d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb587a60"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb587be8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb587d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfb586020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfb586020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfb586370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfb5864f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfb586680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb586808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfb586990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfb586bd8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfb586bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfb585020"/>
        <function-ref name="source" scoped="" ref="0x2aabfb5851a8"/>
        <function-ref name="address" scoped="" ref="0x2aabfb585330"/>
        <function-ref name="destination" scoped="" ref="0x2aabfb5854b8"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfb585640"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfb5857c8"/>
        <function-ref name="type" scoped="" ref="0x2aabfb585950"/>
        <function-ref name="setType" scoped="" ref="0x2aabfb585ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfb585c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfb585de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfb584020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2aabfb5842a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2aabfb5842a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2aabfb5845f8"/>
        <function-ref name="noAck" scoped="" ref="0x2aabfb584780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2aabfb584908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2aabfb57a790" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfb57a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb57aae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfb57ac68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb57adf0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb579020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb5791a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2aabfb579450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfb579450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfb5797a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfb579928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfb579ab0"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfb579c38"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfb579dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2aabfb578060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfb578060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfb5783b0"/>
        <function-ref name="source" scoped="" ref="0x2aabfb578538"/>
        <function-ref name="address" scoped="" ref="0x2aabfb5786c0"/>
        <function-ref name="destination" scoped="" ref="0x2aabfb578848"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfb5789d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfb578b58"/>
        <function-ref name="type" scoped="" ref="0x2aabfb578ce0"/>
        <function-ref name="setType" scoped="" ref="0x2aabfb578e68"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfb577020"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfb5771a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfb577330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfae73020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfae73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfae73370"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfae734f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfae73680"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfae73808"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfae73990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2aabfae6f6f8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2aabfae6f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfae6fa68"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfae6fbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfae6fd78"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfae6e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfae6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2aabfae708a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2aabfae708a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2aabfae70c18"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfae70da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfae6f020"/>
        <function-ref name="cancel" scoped="" ref="0x2aabfae6f1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2aabfae6f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2aabfae6da10" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfae6da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfae6dd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfae6c020"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfae6c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfae6c330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfae6c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2aabfae6c780" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2aabfae6c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfae6cad0"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfae6cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2aabfae6b020" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2aabfae6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2aabfae6b370"/>
        <function-ref name="runTask" scoped="" ref="0x2aabfae6b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2aabfae6e3f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfae6e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfae6e740"/>
        <function-ref name="source" scoped="" ref="0x2aabfae6e8c8"/>
        <function-ref name="address" scoped="" ref="0x2aabfae6ea50"/>
        <function-ref name="destination" scoped="" ref="0x2aabfae6ebd8"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfae6ed60"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfae6d020"/>
        <function-ref name="type" scoped="" ref="0x2aabfae6d1a8"/>
        <function-ref name="setType" scoped="" ref="0x2aabfae6d330"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfae6d4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfae6d640"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfae6d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2aabfae4fa28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2aabfae4fa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2aabfae4fd78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2aabfae4e020"/>
        <function-ref name="getPayload" scoped="" ref="0x2aabfae4e1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2aabfae4e330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2aabfae4e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2aabfae4f490" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2aabfae4f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2aabfae4f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2aabfae4e700" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2aabfae4e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2aabfae4ea50"/>
        <function-ref name="source" scoped="" ref="0x2aabfae4ebd8"/>
        <function-ref name="address" scoped="" ref="0x2aabfae4ed60"/>
        <function-ref name="destination" scoped="" ref="0x2aabfae4d020"/>
        <function-ref name="setSource" scoped="" ref="0x2aabfae4d1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2aabfae4d330"/>
        <function-ref name="type" scoped="" ref="0x2aabfae4d4b8"/>
        <function-ref name="setType" scoped="" ref="0x2aabfae4d640"/>
        <function-ref name="isForMe" scoped="" ref="0x2aabfae4d7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2aabfae4d950"/>
        <function-ref name="localGroup" scoped="" ref="0x2aabfae4dad8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2aabf9a67600" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.&#10;&#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2aabf9a681d8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2aabf9a70408" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2aabf9a70198" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2aabf9a64b78" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2aabf9a725a0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2aabf9a72330" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2aabf9a710a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2aabf9a72db8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2aabf9a718f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2aabf9acf178" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2aabf9acf840" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2aabf9ad03a0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2aabf9ae26f8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aabf9ad0a40" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2aabf9ae2020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aabf9ad5670" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2aabf9ad5ce0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2aabf98b4a38" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2aabf98b2258" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9b98020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9b98020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2aabf9b91918" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aabf9b953e0" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2aabf9b92020" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aabf9b94a60" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2aabf9b94d78" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2aabf9b94328" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2aabf9ba6878" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2aabf9ba6070" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2aabf9b95b10" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2aabf9b98af0" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aabf9b98880" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2aabf9b91020" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aabf9b92950" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2aabf9b92c68" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2aabf9b96570" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aabf9b96300" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aabf9b96d18" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9bc7748" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9bc7748"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aabf9bc7978" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bc7978"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2aabf9bc0258" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bc7978"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aabf9bc3418" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2aabf9bc18e0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bc7978"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bc7978"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2aabf9bc1340" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bc7978"/></type-var>
          </variable>
          <variable name="dt" ref="0x2aabf9bc1660" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bc7978"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2aabf9bc3b60" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2aabf9bc09d8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bc7978"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aabf9bc44a8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bc7978"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aabf9bc4238" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9bc7978"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aabf9bc4c78" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCompare" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x2aabf9c3c758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
          <interfacedef-ref qname="HplAtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c3c758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2aabf9c34bb8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2aabf9c34948" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2aabf9c37740" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aabf9c37070" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x2aabf9c4b9f0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aabf9c38070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c3c758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2aabf9c37de8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2aabf9c4b328" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2aabf9c34290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aabf9c38970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c3c758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2aabf9c38700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c3c758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aabf9c364e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aabf9c36b80" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCounter" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x2aabf9c30758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
          <interfacedef-ref qname="HplAtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c30758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2aabf9c29c50" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2aabf9c299e0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2aabf9c2b7a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aabf9c2d070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c30758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2aabf9c2be50" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2aabf9c28378" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2aabf9c2b0d8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2aabf9c29328" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aabf9c2d970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c30758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2aabf9c2d700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9c30758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aabf9c2a560" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aabf9c2ac00" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCapture" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x2aabf9ca1068" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
          <interfacedef-ref qname="HplAtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9ca1068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2aabf9c9c4e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2aabf9c9c270" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2aabf9c9e070" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2aabf9ca0958" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aabf9ca1920" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9ca1068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2aabf9c9e718" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2aabf9c9cbe0" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2aabf9c9db88" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aabf9ca0290" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9ca1068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2aabf9ca0020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9ca1068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aabf9c9ede0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aabf9c9d4b8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2aabf9a44cd8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the&#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2aabf99f21a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10;&#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2aabf9a38da0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2aabf9a4f428" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2aabf9a4fb60" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2aabf9a4e328" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2aabf9a4d1d8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2aabf9a4c810" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aabf9a4a020" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2aabf9a4ea40" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aabf9a4ab20" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2aabf9a4a8b0" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2aabf9a40cd8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2aabf9a4d948" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2aabf9a4c0d8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2aabf9a1a360" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aabf9d53a38" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabf9d53a38"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aabf9d53c68" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9d53c68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2aabf9d50528" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabf9d53c68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2aabf9d4f550" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2aabf9d50d38" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2aabf9d4fc40" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2aabf9e8be20" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2aabf9e8bbb0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2aabf9e88838" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2aabf9e89910" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2aabf9e89020" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2aabf9e880d8" loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2aabf9e87258" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aabf9e9a6b0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2aabf9ea1d70" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2aabf9e9a100" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabf9e9a420" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aabf9e99a48" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2aabf9e97da0" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2aabf9e99140" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabf9e99460" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2aabf9e997a8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast&#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast&#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2aabf9e9f4a8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even&#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabf9e9f238" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2aabf9e9d778" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabf9e9d508" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2aabf9e9fca0" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till&#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till&#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2aabf9e9c290" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabf9e9c020" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side&#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2aabf9eafc98" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2aabf9eaf4e8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2aabf9ec6440" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2aabf9ebdc40" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2aabf9ec1818" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2aabf9ebc610" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2aabf9ebc3a0" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2aabf9ec7cd8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2aabf9ebe338" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2aabf9ebe0c8" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2aabf9ec20a8" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2aabf9ec3dd0" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2aabf9ec5328" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Read the SPI data register&#10; </short>
          <long>&#10; Read the SPI data register&#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2aabf9edbde0" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2aabf9edbb70" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2aabf9ec27e0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2aabf9eba690" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2aabf9eba420" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2aabf9eb9538" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2aabf9ebd518" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2aabf9ebd2a8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2aabf9edb4a0" loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2aabf9ebf290" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2aabf9ebf020" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2aabf9ec5c78" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Write the SPI data register&#10; </short>
          <long>&#10; Write the SPI data register&#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabf9ec5a08" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2aabf9ec1118" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2aabf9ec2e80" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2aabf9ebeb48" loc="123:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2aabf9ebcd18" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2aabf9ebad80" loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2aabf9eb9c80" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2aabf9ebf9a8" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2aabf9ec6b58" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2aabf9ec3630" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete.&#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabf9ec33c0" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2aabf9f150d8" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aabf9f158b0" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2aabf9f77328" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2aabf9f77bf0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2aabf9f748d0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2aabf9f73110" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10;&#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2aabf9f90620" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2aabf9f758a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2aabf9f903b0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2aabf9f758a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2aabf9f93720" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2aabf9f91290" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2aabf9f758a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2aabf9f91020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2aabf9f758a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2aabf9f91b30" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue.&#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2aabf9f758a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <short>&#10; The interface to a TinyOS task scheduler.</short>
        <long>&#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2aabf9298cb0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Initialize the scheduler.</short>
          <long>&#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2aabf9923bf0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2aabf9923450" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long>&#10; Run the next task if one is waiting, otherwise return immediately.&#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2aabfa0aa378" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2aabfa0aa108" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2aabfa0a9780" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2aabfa0a9510" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2aabfa0ad748" loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         starting or the device was off and the device is now ready to turn&#10;         on.  After receiving this return value, you should expect a&#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aabfa0aab60" loc="130:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         stopping or the device was on and the device is now ready to turn&#10;         off.  After receiving this return value, you should expect a&#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aabfa0a0920" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2aabfa0a0020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2aabfa0a0380" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa0a0690" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2aabfa09ac68" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa09a6a0" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa09a9b0" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aabfa09ee28" loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aabfa09dbe8" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa09d978" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aabfa09e030" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa09ca60" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2aabfa09cd88" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2aabfa0b1bc8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2aabfa0b1bc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2aabfa0a6a40" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa0a67d0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aabfa0a6108" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2aabfa0b1bc8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa0a7e60" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2aabfa0a7710" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa0a74a0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aabfa0a4728" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the&#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2aabfa0b1bc8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa0a4160" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2aabfa0a44a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2aabfa0b1bc8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2aabfa0afd80" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
              <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa0af480" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2aabfa0af7a8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa0afab8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2aabfa0a2b90" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa0a2920" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2aabfa0c7cb0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa0c7a40" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2aabfa0c5020" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa0c6c38" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2aabfa0c3630" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2aabfa0a1e48" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2aabfa0a1bd8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2aabfa0c3d90" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis&#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2aabfa0b5020" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aabfa08ecb8" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2aabfa095e30" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aabfa095bc0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2aabfa096328" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2aabfa096d80" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aabfa096b10" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2aabfa0916f8" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aabfa091140" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aabfa091478" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2aabfa0922a0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aabfa094ba0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aabfa092020" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2aabfa08da00" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aabfa08d790" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2aabfa08cce0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aabfa08c760" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2aabfa08ca60" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2aabfa050848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2aabfa08f8c8" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aabfa08f658" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2aabfa0b33e0" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2aabfa0b5e00" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2aabfa0b3160" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2aabfa0b2178" loc="195:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <short>&#10; The basic message data type accessors.</short>
        <long>&#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2aabfa0f8c68" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa0f89f8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2aabfa120c70" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength().&#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa120a00" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2aabfa11de78" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than&#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa11d8b0" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa11dbc0" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aabfa11d020" loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2aabfa11f050" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa11ea90" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa11eda0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aabfa113c50" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa1136c0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa1139d0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2aabfa1382d8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa10ec90" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa138020" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aabfa10e488" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aabfa1100a8" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa111e08" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aabfa10f5c8" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;&#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa10f020" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2aabfa10f348" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Protection" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <short>&#10; Protection (Serial) Interface&#10; </short>
        <long>&#10; Protection (Serial) Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="sendLost" ref="0x2aabfa17f1d8" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="17:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered after invalid data found in protection component, following the reset&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="amTypeMismatch" ref="0x2aabfa1813a0" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered if the message am_type in the sendDone event DO NOT match that used in send command&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleSendDone" ref="0x2aabfa181ac0" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="13:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered when  'idle' protection component catch the sendDone event&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RestartControl" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <short>&#10; Serial Restart Interface&#10; </short>
        <long>&#10; Serial Restart Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="restart" ref="0x2aabfa183700" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <interfacedef-ref qname="RestartControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2aabfa1f5498" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2aabfa1f5c38" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialReset" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <short>&#10; Reset interface for Serial Protector&#10;&#10; </short>
        <long>&#10; Reset interface for Serial Protector&#10;&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="txReset" ref="0x2aabfa1ffe70" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <interfacedef-ref qname="SerialReset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aabfa1f2800" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2aabfa1f2260" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa1f2580" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2aabfa21d290" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2aabfa21d020" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2aabfa21c020" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2aabfa21da08" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa21dd28" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2aabfa21e020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2aabfa21b8f8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2aabfa21b020" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa21b340" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2aabfa21b668" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2aabfa21e898" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aabfa1f1020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2aabfa2206c8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa2209e8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2aabfa220d10" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2aabfa1f8020" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa1f9988" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2aabfa1f9ce8" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2aabfa1fb258" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2aabfa1f90b8" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.&#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa1fba70" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2aabfa1fbdb8" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2aabfa239020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2aabfa23d778" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2aabfa243710" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2aabfa242ab0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2aabfa23f578" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.&#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabfa23f308" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2aabfa240328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2aabfa242290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabfa242020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2aabfa23fd70" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2aabfa240b78" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been&#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2aabfa24bba0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2aabfa24a4b8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2aabfa24b2a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2aabfa24eb98" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
          <variable name="first_byte" ref="0x2aabfa24b020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2aabfa248020" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2aabfa24ad40" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2aabfa24dd48" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2aabfa24dad8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2aabfa2469f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabfa246780" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2aabfa2454b8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2aabfa245248" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aabfa4174a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2aabfa417238" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2aabfa4162a0" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2aabfa417c98" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2aabfa416020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2aabfa43a3e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2aabfa43b5b0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2aabfa4379f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabfa437780" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2aabfa438a38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2aabfa43c730" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2aabfa43ce50" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2aabfa43bcd0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2aabfa43aac0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2aabfa4383a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabfa438138" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2aabfa437110" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2aabfa5d1b18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2aabfa5d1b18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2aabfa60b0d8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2aabfa5d1b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2aabfa6099a0" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2aabfa5d1b18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2aabfa609730" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2aabfa5d1b18"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2aabf929f488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2aabf929f488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2aabfa607870" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.&#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2aabfa5d1b18"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aabfa607600" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x2aabfa5cea80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2aabfa5cc968" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2aabfa60bbf8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2aabfa5d1b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2aabfa5ce378" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2aabfa5cc1d8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2aabfa626560" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2aabfa6262f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sniff" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <short>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; </short>
        <long>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; @author tango&#10; @date 2014/03/12&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="catch" ref="0x2aabfa65f5c0" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
          <short>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; </short>
          <long>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; @param 'message_t* ONE msg'        the receied packet&#10; @param 'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param len      the length of the data region pointed to by payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Sniff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa662b78" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2aabfa65f020" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa65f330" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2aabfa65b2a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10;&#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2aabfa661b60" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2aabfa65b020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2aabfa654860" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa654278" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2aabfa6545e0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2aabfa652948" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6526d8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2aabfa655a60" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2aabfa655108" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2aabfa658e58" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2aabfa68a130" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabfa68a130"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aabfa68a360" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabfa68a360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2aabfa688020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabfa68a360"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa689d78" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2aabfa687108" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa688e38" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2aabfa68ae80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa68ac10" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aabfa685348" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabfa68a360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa687d30" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2aabfa6850c8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabfa68a360"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2aabfa64c800" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa64c590" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2aabfa651b30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa651548" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2aabfa6518b0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2aabfa64f8a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa64f630" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2aabfa64ee48" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa64e860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2aabfa64ebc8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2aabfa68d728" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa68d4b8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aabfa6a65f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabfa6a65f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2aabfa6a6e80" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short>&#10; Return current time.</short>
          <long>&#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2aabfa6a7e30" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6a7bc0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AntennaDiversityConfig" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <short>&#10; antenna user mode manager&#10;&#10; </short>
        <long>&#10; antenna user mode manager&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rxModeSet" ref="0x2aabfa6ed640" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rxmode" ref="0x2aabfa6ed3d0" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rxModeGet" ref="0x2aabfa6edd38" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeSet" ref="0x2aabfa6ec6d8" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txmode" ref="0x2aabfa6ec468" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeGet" ref="0x2aabfa6ecdd0" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2aabfa6c29a0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6c2730" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2aabfa6c4590" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2aabfa6c2020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6c4cd0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2aabfa6c0388" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6c1d50" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aabfa6c0108" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2aabfa6c16b8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6c10c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aabfa6c1438" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2aabfa6be630" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2aabfa05b5e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6be3c0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2aabfa6bd2e0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2aabfa05b5e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6beca8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2aabfa6bd060" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2aabfa05b5e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2aabfa6c0ca8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6c0a38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2aabfa6bd9e8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2aabfa05b5e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2aabfa6cd5c0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2aabfa68ec98" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2aabfa6cd020" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa6cd330" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2aabfa6ca988" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6ca3c0" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2aabfa6ca6d0" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aabfa6cbb70" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aabfa6cc338" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6cc0c8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aabfa6cb2a0" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6ccc68" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2aabfa6cb020" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2aabfa6f74d0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2aabfa709290" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa709020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2aabfa6fa108" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6fce30" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2aabfa6f9758" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up,&#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6f94e8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2aabfa6fda48" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6fd7d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2aabfa6ff3d0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6ff160" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2aabfa6fc718" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6fc160" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aabfa6fc498" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2aabfa6fd0b8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6ffad8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aabfa6ffe10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2aabfa6fad88" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6fa7d8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2aabfa6fab08" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2aabfa70ce68" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2aabfa703790" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2aabfa701830" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7015c0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2aabfa702290" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa702020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2aabfa702d18" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa702aa8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2aabfa71cb60" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2aabfa71dce0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2aabfa05d6b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2aabfa71da70" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2aabfa05d6b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aabfa71c458" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2aabfa71d290" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2aabfa71a328" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2aabfa05d6b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2aabfa6d6c68" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6d69f8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2aabfa712178" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2aabfa7139b0" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabfa7133d0" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aabfa713730" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2aabfa6d37a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6d3538" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2aabfa6d2290" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6d2020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2aabfa6d1118" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified&#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabfa6d2b10" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aabfa6d2e70" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2aabfa6d4020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2aabfa6d4d28" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6d47b0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aabfa6d4aa8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2aabfa6d1c08" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6d1998" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses. It also&#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2aabfa72b4e8" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa72b278" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2aabfa72ecc8" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa72ea58" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2aabfa6f4a18" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used,&#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6f4478" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2aabfa6f4798" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2aabfa6f2a90" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6f2820" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2aabfa7262a0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa727ba0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aabfa726020" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2aabfa6f2020" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6f3cf0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2aabfa72da78" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa72d4e8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2aabfa72d7f8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2aabfa7333c0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a&#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabfa735db8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aabfa733140" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2aabfa727468" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7271f8" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2aabfa6f34e8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6f3278" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2aabfa732d28" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa732ab8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2aabfa7322a0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2aabfa733c10" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aabfa732020" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2aabfa7237b0" loc="178:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2aabfa05b9d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2aabfa726ca0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa726a30" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2aabfa723020" loc="173:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2aabfa05b5e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2aabfa729a20" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa729470" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2aabfa7297a0" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2aabfa7355b8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa735348" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2aabfa72e2e0" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa72fce0" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2aabfa72e060" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2aabfa72a2a0" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa72bc40" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2aabfa72a020" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2aabfa722290" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa722020" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2aabfa730a78" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa730500" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2aabfa7307f8" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2aabfa700cb0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used,&#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa700a40" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2aabfa725750" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7254e0" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2aabfa72aca8" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa72aa38" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2aabfa72f538" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa72f2c8" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2aabfa70ea60" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa70e4b0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2aabfa70e7e0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2aabfa70d258" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2aabfa710290" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa710020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2aabfa710cb0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa710a40" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2aabfa707338" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7070c8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2aabfa708840" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7085d0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2aabfa707b20" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2aabfa7065b8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa706348" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2aabfa714468" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7141f8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2aabfa718968" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7186f8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aabfa715020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2aabfa717710" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa717160" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2aabfa717490" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2aabfa720e60" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure&#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa720bf0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2aabfa715a38" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7157c8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2aabfa6d9da8" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if addressRecognition enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2aabfa6d9338" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAddressRecognition' TRUE to enable address recognition&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2aabfa6d90c8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2aabfa6dc258" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckEnabled" ref="0x2aabfa6d70d8" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if ack enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2aabfa6dfa50" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6df7e0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAck" ref="0x2aabfa6d8730" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAck' TRUE to enable acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAck" ref="0x2aabfa6d84c0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2aabfa6dcd10" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6dcaa0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2aabfa6da7e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa6da570" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.&#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2aabfa7b30d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the&#10; run event is currently not executing, then it  is called immediately&#10; and this command returns only after the completion of the run event.&#10; If the run event is currently executed, then this method returns at&#10; once, and makes sure that the run event is called once more when&#10; it is finished. If this method is called from a task, then by the&#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2aabfa7b3978" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2aabfa7b2328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from&#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2aabfa7b6990" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2aabfa8042c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
              <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa804020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2aabfa7c4da0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a task. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7c4b30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2aabfa8077a8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa807538" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aabfa7c1cd0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa7c1728" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2aabfa7c1a50" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2aabfa7f2db8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2aabfa7f0c48" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2aabfa7f0558" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2aabfa7f25d8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2aabfa7f2020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2aabfa050bf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2aabfa7f2358" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2aabfa9b7e70" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
              <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa9b7bc8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2aabfa9b7290" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfa9b7020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2aabfa9a4020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aabfa9a6c58" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2aabfa9a4790" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aabfa9aec80" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aabfa9aea10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aabfa9a65b8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aabfa9a6348" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2aabfa9ab030" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aabfa9acd90" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2aabfa9a94a8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1].&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2aabfa9a9238" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2aabfa9abac0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aabfa9ab850" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2aabfa9a8020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2aabfa9a9ca8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2aabfa9ac5c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not&#10; found in the table, then the value NEIGHBORHOOD is  returned,&#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2aabfa9ac358" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2aabfa04e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2aabfaa5a760" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time. The radio cannot send or receive in this state&#10; and releases all access to shared resources (e.g. SPI bus).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2aabfaa57790" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages&#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2aabfaa56290" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2aabfaa56020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2aabfaa569f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2aabfaa57020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2aabfaa541d8" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2aabf92a4160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2aabfaa59e10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a tasklet. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfaa59ba0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2aabfaa511d8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept&#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept&#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2aabfaa52998" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2aabfaa52728" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <short>&#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long>&#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2aabfaad6d88" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2aabf92a4bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2aabfaad65f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2aabf92a56a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2aabfaaff518" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2aabfaaff518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2aabfaafc020" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2aabfaaff518"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2aabfaaffd50" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2aabfaaff518"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2aabfab2be50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfab2bbe0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2aabfab30dd8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfab30b68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2aabfab2cab0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfab2c520" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2aabfab2c830" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2aabf989a818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2aabfab2b4e8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2aabfab2b278" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2aabfa084490"/>
                <typename><typedef-ref name="message_t" ref="0x2aabfa0839e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2aabfab85020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2aabfab86c68" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2aabfab864e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCalibration" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <short>&#10; FTN/CF/DCU Calibration Interface, recommanded to do it every 5 min or less&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="run" ref="0x2aabfac81020" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <interfacedef-ref qname="RadioCalibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2aabf98a45d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2aabfac9e0f0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2aabfac9e0f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2aabfac9e320" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabfac9e320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2aabfac9edb8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabfac9e320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2aabfac9eb48" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2aabfac9e320"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
