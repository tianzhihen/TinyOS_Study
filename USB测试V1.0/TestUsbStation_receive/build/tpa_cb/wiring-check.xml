<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:TestUsbStationAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ace72416460"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ace7201f598"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ace7201f598"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ace7237e198"/></to>
    </wire>
    <wire loc="10:TestUsbStationAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ace72418d70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ace723f77f0"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ace723f77f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ace72479020"/></to>
    </wire>
    <wire loc="14:TestUsbStationAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2ace7241dca0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ace72aa2c48"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ace72aa2c48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ace720b21c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestUsbStationAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2ace72434060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace72a95e18"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace72a95e18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace72ad8440"/></to>
    </wire>
    <wire loc="22:TestUsbStationAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace72427178"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace7330ac20"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace7330ac20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace73999400"/></to>
    </wire>
    <wire loc="23:TestUsbStationAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace724368a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace73308578"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace73308578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace73998bd8"/></to>
    </wire>
    <wire loc="27:TestUsbStationAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace7244e948"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace732fd490"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace732fd490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace72a8f020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:TestUsbStationAppC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2ace72431060"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2ace72afd020"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2ace72afd020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2ace72b34600"/></to>
    </wire>
    <wire loc="30:TestUsbStationAppC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace7245ecb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72abeaf0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72abeaf0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72acd968"/></to>
    </wire>
    <wire loc="31:TestUsbStationAppC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2ace7245a4d0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2ace72b012e8"/></to>
    </wire>
    <wire loc="231:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2ace72b012e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2ace72f81bd0"/></to>
    </wire>
    <wire loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ace73147b90"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72f8ab40"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ace73808430"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72e97238"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace737cdde8"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace73745aa0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72a71888"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2ace728fe7f0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2ace728f9688"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72877d18"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace7264db88"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72a652d0"/></to>
    </wire>
    <wire loc="16:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace720d1378"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ace7237e7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ace71f4f898"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ace71f4f898"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ace71fc62a8"/></to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ace7237d1d0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ace731470d8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ace7237d1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72013890"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ace72013890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace7201ae80"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7237d898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ace72024790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ace7205e8b8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2ace7201b538"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72492020"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2ace72021bd8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x2ace7201b538"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x2ace72021578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72028700"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ace72028700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72044ab0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <from><interface-ref name="WDInit" scoped="" ref="0x2ace72020318"/></from>
      <to><interface-ref name="WDInit" scoped="" ref="0x2ace720735f8"/></to>
    </wire>
    <wire loc="17:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <from><interface-ref name="WDInit" scoped="" ref="0x2ace720735f8"/></from>
      <to><interface-ref name="WDInit" scoped="" ref="0x2ace7207c690"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2ace72028de8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace7394c810"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2ace72028de8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace7390e810"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2ace72028de8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace73659770"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2ace72028de8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace733dacf8"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2ace72028de8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace733a4848"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2ace72043858"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x2ace72028de8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x2ace72052020"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x2ace72034470"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x2ace72052688"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x2ace72031b80"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2ace720431f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace7205e288"/></to>
    </wire>
    <wire loc="18:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ace7207cc98"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ace7201f598"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <from><interface-ref name="TimerWD" scoped="" ref="0x2ace7208e7b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ace7209c7b0"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ace7209c7b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ace720b21c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <from><interface-ref name="wd_task" scoped="" ref="0x2ace720a0188"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ace720b21c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ace7235e0c8"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace72321c70"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace720ab9e8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace720ab9e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace7333be00"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ace723745a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ace7230cab0"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ace73334310"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace73341de0"/></to>
    </wire>
    <wire loc="17:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace73341de0"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x2ace720c6988"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace73336128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace7229a610"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace7229a610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace72293270"/></to>
    </wire>
    <wire loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="ClientAlarm" scoped="" ref="0x2ace720c6988"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace720d1cc0"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ace72111020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace7228ce10"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace7228ce10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace73361d68"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace73361d68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace733a3020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace7335ddd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace7217da88"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace7217da88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace721a0ad0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace73358ab0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ace7218abe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace7339f0a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace7335ddd8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7339bc28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace73358ab0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2ace721980c8"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2ace721b2e00"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ace7218abe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2ace721ad700"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ace7218abe0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2ace721a8988"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ace7218abe0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2ace721b7b88"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ace721bf148"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ace71ff01e0"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace71ffc2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace7318a760"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace71ffc2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace7298a168"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace71ffc2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace728f64d8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace71ffc2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace721c1a50"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace7224f2b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace72248dd8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace72248dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace733d94f8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace7227a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace7217da88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace733d76d0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace7227a020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ace722a7450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace7224f2b0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ace7231dcf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ace7236f618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71fc51c8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ace71fcf668"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ace71f51cb8"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ace72492020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace7247c9d0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ace72471348"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ace7247aa70"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ace7247aa70"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2ace724a1658"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ace724774c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ace72495c68"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ace72495c68"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2ace724a07e0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ace72476648"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ace72494df0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ace72494df0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2ace7249f968"/></to>
    </wire>
    <wire loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2ace724a1658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f34f8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2ace724a07e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f34f8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2ace7249f968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f34f8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2ace724d91a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace725157c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2ace724b3c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72508b88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2ace724c8c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72522020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2ace724df968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7251b370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2ace724d4e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace725157c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2ace724a9968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f00c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2ace724c0658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7251b370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2ace724a7c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f34f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2ace724bbe00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7250e860"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2ace724af1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72508b88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2ace724c31a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72522020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2ace724ae1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f00c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2ace724a31a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f34f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2ace724b7348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7250e860"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2ace724cc658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72508b88"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2ace724dce00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7251b370"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2ace724d6af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace725157c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2ace724ca968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72522020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2ace724ab658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f00c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2ace724d87e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace725157c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2ace724bdaf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7250e860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2ace724b2e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72508b88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2ace724c7e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72522020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2ace724deaf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7251b370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2ace724a8af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f00c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2ace724a6e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f34f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2ace724b9020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7250e860"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2ace724ce348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72508b88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2ace724c2348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72522020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2ace724ad348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f00c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2ace724a2348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f34f8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2ace724b64d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7250e860"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2ace724da020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7251b370"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2ace724b47e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72508b88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2ace724c9af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72522020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2ace724bf7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7251b370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2ace724d5c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace725157c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2ace724aa7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f00c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2ace724c14d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7251b370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2ace724bcc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7250e860"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2ace724b0020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72508b88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2ace724c5020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72522020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2ace724ddc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7251b370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2ace7248f020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f00c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2ace724a4020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f34f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2ace724b81a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7250e860"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2ace724cd4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72508b88"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2ace724d7968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace725157c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2ace724cb7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace72522020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2ace724b5658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace7250e860"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2ace724ac4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2ace724f00c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ace72a640f8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2ace72a21748"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace72a5f790"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace72a28c58"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace72a28c58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace73498530"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace72a5d430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace72a27888"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace72a27888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace725d2d78"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2ace72a7ae58"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2ace72a62898"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace725d2d78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace7262db98"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace72a26578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace725d19b0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace725d19b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace7262e618"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ace72a25bd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace725cf1a0"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace725cf1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72652888"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace734972c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace72596a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace73497e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace725d19b0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace72596a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace725dee40"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace725ddbd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace725d35b0"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace725d35b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace725ed310"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace725dc888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace725d19b0"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace725da020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace725d2d78"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2ace725dac58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2ace725d8470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace725d65f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace7264a2e8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace7264a2e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace72829b88"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Protection" scoped="" ref="0x2ace725f04c8"/></from>
      <to><interface-ref name="Protection" scoped="" ref="0x2ace7285f6b8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace725d27a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace7262e060"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="RestartControl" scoped="" ref="0x2ace725ce998"/></from>
      <to><interface-ref name="RestartControl" scoped="" ref="0x2ace7286d430"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ace7264db88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace728295f0"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ace726465a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ace725f3020"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ace726505b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ace725f3020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace7286e968"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace7264a2e8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72651308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace72648ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72650020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace72648270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ace72663520"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ace72886080"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ace72886080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ace728833d8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ace72657448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ace72886848"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ace72886848"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ace7287d498"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ace72640c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2ace72847448"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace72829b88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace73539838"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace72648ce8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace72856e78"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace72856e78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace7352d6f8"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ace728295f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace735392a0"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace72648270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace728567e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace728567e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace7352d020"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2ace726444f0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2ace72855a80"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2ace72855a80"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2ace7352c3f0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2ace72850740"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2ace72666550"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ace728541c0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ace72640c50"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ace72854a88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ace726465a8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ace728510a0"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2ace72663520"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ace728517c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ace72657448"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2ace7352cb48"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ace728541c0"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ace73536c18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ace72854a88"/></to>
    </wire>
    <wire loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ace73529e60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ace72854a88"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ace7351d700"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ace72854a88"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ace7352b578"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ace73538e20"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2ace7352be20"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2ace735383f0"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2ace735298c8"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2ace73537700"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2ace73537cf8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2ace7351f6b0"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SubSerialReset" scoped="" ref="0x2ace735322a8"/></from>
      <to><interface-ref name="SubSerialReset" scoped="" ref="0x2ace72850740"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ace735342a8"/></from>
      <to><interface-ref name="SerialControl" scoped="" ref="0x2ace728510a0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ace7351e760"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ace728517c0"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x2ace73527538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ace73518660"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ace73518660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ace720b21c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2ace735310a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2ace73530120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2ace735328c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2ace73531840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2ace735224e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2ace73522c80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ace72881b60"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ace72883b90"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2ace72883b90"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2ace728c4a88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2ace7287d498"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2ace728c32a8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2ace728844a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2ace7287c4a0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SerialReset" scoped="" ref="0x2ace7287c4a0"/></from>
      <to><interface-ref name="SerialReset" scoped="" ref="0x2ace728c12a8"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ace728833d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ace728c4328"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace7287cd68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace72959020"/></to>
    </wire>
    <wire loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace72959020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace72956a98"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace728be020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace7287cd68"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2ace728c18c0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2ace728d2060"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2ace728d2060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2ace728fb020"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2ace728c00a0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2ace728d28b8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2ace728d28b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2ace728fb8b8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2ace728c0840"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2ace728d1158"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2ace728d1158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2ace728fa158"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2ace72900860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2ace728f7020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2ace728d06b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2ace728f9d98"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2ace72900020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2ace728f86b8"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ace728f6b48"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ace72024790"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ace728f5950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ace71ff01e0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ace728f5950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ace71ff01e0"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace72956a98"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace72a04270"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace72a0d6d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace72951638"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace72951638"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ace729703c0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ace72a38450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace72a105a8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace72a105a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace73658020"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2ace72979978"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ace7298f688"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ace7297e840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2ace7296b118"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ace7297e840"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2ace72966278"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ace7297e840"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2ace72994360"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ace7298a828"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ace71ff01e0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace73655128"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace72a0d6d0"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2ace72a584d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2ace72aa8020"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2ace72a7ae58"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ace72a9f020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ace7201f598"/></to>
    </wire>
    <wire loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2ace72a9f700"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace725d65f8"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace72ad8440"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace72aedb78"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2ace72ac1a80"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2ace72ad2c88"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2ace72ad2c88"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2ace72ae6498"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ace72ac41c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ace72ad17d8"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ace72ad17d8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ace72ae5020"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace72ac47a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace72acf5f8"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace72acf5f8"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2ace72ae2550"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace72a92db8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace72ad53c8"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace72ad53c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace72aeac30"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ace72a8fb68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ace72ad21c8"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ace72ad21c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ace72ae7968"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72ab41d8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72acc318"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72acc318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72b03a18"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace72a8f020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace72ad34e8"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace72ad34e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace72ae9dc0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace72aad020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace72af8848"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace72af8848"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace72b2ccb8"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72acd968"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72b030c0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ace72abc020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ace72accdb0"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ace72accdb0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ace72b025e0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace72ac2448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace72ace2c0"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace72ace2c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace72ae4e50"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace72adde48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace72af1758"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace72af1758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace72b25bf0"/></to>
    </wire>
    <wire loc="219:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace72aedb78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace72ede988"/></to>
    </wire>
    <wire loc="332:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2ace72b34600"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2ace7311b600"/></to>
    </wire>
    <wire loc="278:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace72b25bf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace730be920"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2ace72ae6498"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2ace72cd7020"/></to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ace72ae5020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ace72cd76f8"/></to>
    </wire>
    <wire loc="137:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2ace72ae2550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace72cda578"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace72aeac30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace72cd9388"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ace72ae7968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ace72cd87e0"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace72ac7bd8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace72b372d0"/></to>
    </wire>
    <wire loc="330:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace72b372d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace7311d2d0"/></to>
    </wire>
    <wire loc="220:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72b03a18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72f12060"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace72ae9dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace72cd80c8"/></to>
    </wire>
    <wire loc="277:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace72b2ccb8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace730bb598"/></to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace72af4430"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace72b2d890"/></to>
    </wire>
    <wire loc="334:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace72b2d890"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace73163830"/></to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace72ac9828"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace72b01e40"/></to>
    </wire>
    <wire loc="331:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace72b01e40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace73115d70"/></to>
    </wire>
    <wire loc="255:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72b030c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72fde578"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace72ad03c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace72ae5be0"/></to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace72ae5be0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace72cd7e10"/></to>
    </wire>
    <wire loc="198:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ace72b025e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ace72ee9268"/></to>
    </wire>
    <wire loc="136:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace72ae4e50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace72cdb020"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2ace72acabd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2ace72b012e8"/></to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace72af6808"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace72b2d080"/></to>
    </wire>
    <wire loc="333:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace72b2d080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace73163020"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2ace72acf020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2ace72ae4860"/></to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2ace72ae4860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2ace72cd6550"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace72ede988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ace72f12b30"/></to>
    </wire>
    <wire loc="317:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace72b29370"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace7312e5b0"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2ace7311b600"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2ace7313e548"/></to>
    </wire>
    <wire loc="171:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2ace72b19218"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ace72d74b50"/></to>
    </wire>
    <wire loc="159:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2ace72b12208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ace72d64748"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ace72d64748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ace73743dd8"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2ace72cd7020"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2ace736ca388"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ace72cd76f8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ace736caa60"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace72cd9388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace736cc698"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ace72cd87e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ace736cbc28"/></to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2ace72b0c020"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2ace72e43900"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2ace72e43900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2ace737b0778"/></to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2ace72b0b3d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace72d5fb38"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace7311d2d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace73141208"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72f12060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ace73810458"/></to>
    </wire>
    <wire loc="316:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2ace72b32948"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2ace731303b0"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace72cda578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace736cd888"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace72cd80c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace736cb510"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace730bb598"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace738aa2d0"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace73163830"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ace73285188"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace73115d70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace7318ed70"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2ace72b14d80"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2ace72d76888"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace72cd7e10"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace736c81c0"/></to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ace72ee9268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2ace72ee5470"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2ace72f81bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2ace738069c8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace72cdb020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace736ce268"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace730be920"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace738ae688"/></to>
    </wire>
    <wire loc="170:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2ace72b1aaf0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2ace72d745b8"/></to>
    </wire>
    <wire loc="105:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace73163020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace7318a020"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2ace72cd6550"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2ace736c88d8"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace72b89858"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace72e46980"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace72e46980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace737b37f8"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72b82640"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72c0b2e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ace72b858b8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace730bb598"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2ace72b7c810"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace73120020"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ace73120020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace73143a50"/></to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace72c122d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace73162ae0"/></to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace73162ae0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace73286160"/></to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace72cd3a08"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2ace72b68da8"/></to>
    </wire>
    <wire loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72cd4a50"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2ace72cccb40"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72cd3430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2ace72dbe430"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace72cd6ba8"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2ace72dbea08"/></to>
    </wire>
    <wire loc="148:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ace72cfe020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ace72d64748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72ccb618"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2ace72dbfa50"/></to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace72d732c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace72e46980"/></to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72db30a0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2ace72dacd20"/></to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72db3988"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2ace72dc0638"/></to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ace72d702e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2ace72dc0c10"/></to>
    </wire>
    <wire loc="180:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72dbd928"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace72eb2470"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace72eb2470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace737d1d98"/></to>
    </wire>
    <wire loc="181:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72dbc2a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace72eebbd0"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace72eebbd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ace72ee75b8"/></to>
    </wire>
    <wire loc="182:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace72dbc880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace72e42b98"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ace72e42b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace737afa10"/></to>
    </wire>
    <wire loc="187:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace72e41ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace72ee9e20"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ace72ee9e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ace72ee7b90"/></to>
    </wire>
    <wire loc="192:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace72eaf580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2ace72b416c0"/></to>
    </wire>
    <wire loc="193:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72eb0510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace72eeb2e8"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace72eeb2e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ace72ee8c38"/></to>
    </wire>
    <wire loc="199:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72ee6a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72fde578"/></to>
    </wire>
    <wire loc="200:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72ee8c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace72f14430"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace72f14430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ace72f115c8"/></to>
    </wire>
    <wire loc="201:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72ee75b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace72f14d18"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace72f14d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ace72f10020"/></to>
    </wire>
    <wire loc="202:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace72ee7b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace72f132e8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ace72f132e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ace72f105f8"/></to>
    </wire>
    <wire loc="215:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ace72f12b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace72f83270"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace72f83270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ace73809870"/></to>
    </wire>
    <wire loc="216:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72f115c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace72f83ce0"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace72f83ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace73808a08"/></to>
    </wire>
    <wire loc="217:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72f10020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace72f81638"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ace72f81638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ace73806430"/></to>
    </wire>
    <wire loc="218:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace72f105f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace730b7020"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ace730b7020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace738a7cd8"/></to>
    </wire>
    <wire loc="228:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ace72f7f3f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ace72fc5020"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ace72fc5020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ace7383bb58"/></to>
    </wire>
    <wire loc="229:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ace72f7fc98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace72eb2d18"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ace72eb2d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace737cd6c8"/></to>
    </wire>
    <wire loc="230:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ace72f805d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2ace730dcb10"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ace730dcb10"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2ace730d5020"/></to>
    </wire>
    <wire loc="235:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72eb0df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace72fc58c8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ace72fc58c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace73838578"/></to>
    </wire>
    <wire loc="244:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace72fc2ce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2ace72b39af8"/></to>
    </wire>
    <wire loc="245:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72fc40c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ace72fbc558"/></to>
    </wire>
    <wire loc="246:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72fc49a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace72fd4020"/></to>
    </wire>
    <wire loc="247:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72fc20f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72c0b2e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace7300e190"/></from>
      <to><interface-ref name="SoftAckAlarm" scoped="" ref="0x2ace7315c020"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftAckAlarm" scoped="" ref="0x2ace7315c020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace73274230"/></to>
    </wire>
    <wire loc="253:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2ace72fdbd60"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ace730ae020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="254:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72fdc060"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ace73010180"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="256:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace72fdcc58"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2ace72b45618"/></to>
    </wire>
    <wire loc="257:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace72fdd020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ace7303ea10"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ace7303ea10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ace73037020"/></to>
    </wire>
    <wire loc="258:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72fdd908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace7303d3f0"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ace7303d3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ace73037908"/></to>
    </wire>
    <wire loc="259:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2ace72fd97f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace73120020"/></to>
    </wire>
    <wire loc="260:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace72fd47e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace72fbce00"/></to>
    </wire>
    <wire loc="261:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace73016020"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace72e46980"/></to>
    </wire>
    <wire loc="262:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2ace73013020"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2ace72b4e630"/></to>
    </wire>
    <wire loc="267:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace730355b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2ace72b658e0"/></to>
    </wire>
    <wire loc="268:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace73037020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ace730db888"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ace730db888"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ace730d4020"/></to>
    </wire>
    <wire loc="269:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace73037908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace730d9268"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ace730d9268"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ace730d4908"/></to>
    </wire>
    <wire loc="270:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2ace730360a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2ace73121798"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2ace73121798"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2ace731432c0"/></to>
    </wire>
    <wire loc="275:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace730b6020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace73163830"/></to>
    </wire>
    <wire loc="276:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace730b5020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace730aea70"/></to>
    </wire>
    <wire loc="279:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2ace730b5da0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ace730ae020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="284:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace730e0928"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace7312c020"/></to>
    </wire>
    <wire loc="294:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace730d15b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2ace72b658e0"/></to>
    </wire>
    <wire loc="295:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace730d4020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ace730ca3f0"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ace730ca3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ace730c48c8"/></to>
    </wire>
    <wire loc="296:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace730d4908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace73121020"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ace73121020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace731459e8"/></to>
    </wire>
    <wire loc="297:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2ace730d5020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2ace730cb5f8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ace730cb5f8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2ace730c5a08"/></to>
    </wire>
    <wire loc="306:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2ace730c5a08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2ace73126778"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ace73126778"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2ace731462d0"/></to>
    </wire>
    <wire loc="307:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace730c48c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ace731225d8"/></to>
    </wire>
    <wire loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ace731225d8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ace731450c0"/></to>
    </wire>
    <wire loc="312:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntCtrlFlag" scoped="" ref="0x2ace7312ce00"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ace730ae020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="313:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace73151478"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace7312e5b0"/></to>
    </wire>
    <wire loc="314:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2ace731532d8"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2ace731303b0"/></to>
    </wire>
    <wire loc="315:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2ace7314f020"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2ace7310eaa0"/></to>
    </wire>
    <wire loc="318:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace72b76998"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace7312e5b0"/></to>
    </wire>
    <wire loc="319:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2ace72b78698"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2ace731303b0"/></to>
    </wire>
    <wire loc="323:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace7312b8c8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2ace73120020"/></to>
    </wire>
    <wire loc="328:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace73158100"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2ace72b4e630"/></to>
    </wire>
    <wire loc="329:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ace731575a8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace730bb598"/></to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2ace7314f898"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ace730ae020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="337:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2ace7314e4f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ace730ae020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="338:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2ace7314d0e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2ace730ae020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72c0b2e8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ace73672aa8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace73671970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace72c122d0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2ace736e7880"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2ace72c1fc30"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ace736c5ce8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ace72cb54d8"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace736c7020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ace72cd6ba8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace736c7da0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ace72cd4a50"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace736c6708"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ace72cd3430"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace736c6de0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ace72cd3a08"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ace72d63510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ace73741af8"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ace72d63c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ace73740268"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ace73740b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ace72d62550"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ace7373f2b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ace737440a0"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ace7373fd68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ace737ae8e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ace72cb54d8"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace737ad430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ace72e41ab0"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2ace737c9020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2ace72e9dd70"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2ace72e9dd70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2ace72e97850"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ace737c9bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ace737c6140"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ace737c6140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ace72e96b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace737cc458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ace72eb0510"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace737ccd40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ace72eb0df8"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2ace737cb4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ace72eaf580"/></to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2ace72ee4100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72ee6a10"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ace73805450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2ace72f805d8"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2ace73804268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2ace72c1fc30"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2ace73804c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2ace72f7f3f0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ace73803578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2ace72f7fc98"/></to>
    </wire>
    <wire loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2ace738024f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2ace73802c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2ace73803d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ace73838d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ace72fc40c0"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace738352a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ace72fc2ce8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ace73837670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ace72fc49a8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ace73837d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72fc20f0"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ace738369d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ace72f8c690"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ace72f8c690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ace72fd2568"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2ace73835d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2ace72f8b668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2ace72fd3528"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ace72f91940"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ace72f8ab40"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2ace73010180"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2ace738cf5a0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace738ce4d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace7300e190"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2ace738ca528"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2ace72c1fc30"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace73040338"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ace7303b658"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2ace7303db10"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2ace730360a0"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2ace7303fbe0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2ace73038020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ace7303c268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ace73036800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ace7303b020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ace730355b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2ace7303f648"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2ace73039a08"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2ace73040d68"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2ace73039120"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ace738a38a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ace730b5020"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace738a56d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace730b6020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ace738a48c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ace73080380"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ace73080380"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ace7307eab0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2ace738a6b30"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2ace730b5da0"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace7307dc80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace7229a610"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace730dd268"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ace730d74d0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2ace730d9988"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2ace730d30a0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ace730d80e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ace730d3800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ace730d8e60"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ace730d15b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2ace730dc578"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2ace730d6908"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2ace730ddc98"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2ace730d6020"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ace730cdd08"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ace730c6020"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2ace730c93f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2ace730c3a08"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2ace730c9b10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2ace730c22a8"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ace730c88c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ace730c1060"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2ace730cac98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ace730c32a8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2ace730cb060"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2ace730c5430"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2ace730cc780"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2ace730c6a90"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace73286160"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace73926ab0"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ace73118990"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ace7313c8e8"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace73274230"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace73963ab0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ace73285188"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ace73282560"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCalibration" scoped="" ref="0x2ace7311fa28"/></from>
      <to><interface-ref name="RadioCalibration" scoped="" ref="0x2ace73142930"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2ace73180ad0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2ace73158100"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2ace7317fcf0"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2ace7314f898"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2ace7317e880"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2ace7314e4f0"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2ace7317d518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2ace7314d0e0"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ace7317b2b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ace731575a8"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ace73188d50"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ace73285188"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2ace73184020"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2ace721980c8"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2ace73174800"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2ace72c1fc30"/></to>
    </wire>
    <wire loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2ace731859f8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2ace7328ba10"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ace731722f0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ace71ff01e0"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="ExtAmpControl" scoped="" ref="0x2ace731729e8"/></from>
      <to><interface-ref name="ExtAmpControl" scoped="" ref="0x2ace7314dc70"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2ace73177020"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2ace731532d8"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace731751c0"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace73151478"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2ace73175d30"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2ace7314f020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ace73281758"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace7224f2b0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace73926ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace7390d020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace73922b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace7217da88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7391d610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ace7218abe0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace739810a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace73922b18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7397dc28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7391d610"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ace73963ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ace739be020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace73960b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ace7217da88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7395b610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ace7218abe0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace739ba0a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace73960b18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace739b6c28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7395b610"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace73999400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace7398d790"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace73309888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace73998020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace73998020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace72ac47a0"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace73998bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace72ac2448"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ace73307bd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ace739962a8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ace739962a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72abeaf0"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace7398c450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace73321020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace7398b060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace72ac2448"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ace73321020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ace7331f8a8"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ace7331e6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ace72a92db8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace7331d3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace72ac2448"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace7331ca10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace72ac47a0"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2ace7331a780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2ace73319020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ace732fda28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ace72ac47a0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ace732fc700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ace72ac2448"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc" safe="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="WatchDogC" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
        <short>&#10; internal watchdog&#10;&#10; </short>
        <long>&#10; internal watchdog&#10;&#10; @author tango&#10; @date 2014/04/23&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="WatchDogP" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
        <short>&#10; internal watchdog&#10;&#10; </short>
        <long>&#10; internal watchdog&#10;&#10; @author tango&#10; @date 2014/04/23&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WatchDogC.TimerWDC" loc="44(WatchDogC.TimerWDC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C" loc="7(TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="MuxAlarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.VirtualizeAlarmC" loc="46(MuxAlarm62khz32C_.VirtualizeAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C" loc="37(MuxAlarm62khz32C_.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72117d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace721254a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC" loc="35(Counter62khz32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72247020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72247748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestUsbStationC" loc="7:TestUsbStationC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC" loc="51(SerialDispatcherC.SerialDispatcherCommonC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherCommonC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP" loc="62(SerialDispatcherC.SerialDispatcherCommonC.SerialP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <instance number="0">
        <component-ref qname="SerialP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC" loc="47(SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HdlcTranslateC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC" loc="44(SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SR" loc="1(SerialActiveMessageC.SR):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <instance number="0">
        <component-ref qname="SerialRestartControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC.SerialProtectorC" loc="11(SerialActiveMessageC.SerialProtectorC):/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DummySerialProtectorC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short>&#10; Private component of the Atmega1281 serial port HPL.</short>
        <long>&#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC" loc="35(CounterMcu32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2ace72045960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP" loc="35(CounterMcu32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72247020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72247748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2ace72045960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2ace72045960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <value cst="I:250">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.Timer0" loc="44(TestUsbStationAppC.Timer0):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.RadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a&#10; specific random number generator, it should wire to that component&#10; directly.&#10;&#10; @author  Barbara Hohlt&#10; @author  Phil Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative&#10;  linear congruential generator,&#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1)&#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAddressRecognitionLayerC" loc="11(RFA1RadioC.SoftwareAddressRecognitionLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SoftwareAddressRecognitionLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC" loc="37(RFA1RadioC.SoftwareAckRadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ADLayerC" loc="10(RFA1RadioC.ADLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AntennaDiversityLayerC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72117d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace721254a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC" loc="37(RFA1DriverLayerC.SoftAckAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="2">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72117d40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace721254a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC" loc="47(TestUsbStationAppC.AMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC.SenderC" loc="47(TestUsbStationAppC.AMSenderC.SenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestUsbStationAppC.AMReceiverC" loc="43(TestUsbStationAppC.AMReceiverC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeAlarmC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc" abstract="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ace720d3cd8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace720d3cd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ace720d0460" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720d0460"/></type-var>
        </typedef>
        <constant name="num_alarms" ref="0x2ace720d0770" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2ace72117d40" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72117d40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ace721254a0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace721254a0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2ace721257c0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2ace72125af8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2ace7213dcd8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace7213dcd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ace7213a460" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace7213a460"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2ace7213a780" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2ace7213aab8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2ace72247020" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72247020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ace72247748" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72247748"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2ace72247a68" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2ace72256be8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72256be8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ace72253348" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72253348"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2ace72253668" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ace72295ab8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ace72295ab8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ace72292278" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ace72292278"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ace72292640" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ace72292640"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ace72292db8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ace72292db8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ace722901a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2ace72290930" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2ace72290930"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ace72298748" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ace72298748"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ace722b8020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ace722b8020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ace722b83e8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ace722b83e8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ace722b8b60" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ace722b8b60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ace722b6020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ace722fea88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace722fea88"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ace7231a5d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace7231a5d8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ace7231a8e8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x2ace724ef020" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ace724ef388" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ace724ef6f0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ace725550c8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ace7256c8c0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2ace72592db0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherCommonC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc" abstract="">
      <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
        <short>&#10; generic SerialDispatcherC for easy use with multi serial ports)&#10;&#10;</short>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2ace72665740" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
          <component-ref qname="SerialDispatcherCommonC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="serial_type" ref="0x2ace7276dc88" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
          <component-ref qname="SerialDispatcherP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialRestartControlP" loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummySerialProtectorC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc" abstract="">
      <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2ace72a23e78" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2ace72a23e78"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2ace72a20200" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ace72cfb998" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2ace72cf0e30" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAddressRecognitionLayerC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ace7307c450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace7307c450"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AntennaDiversityLayerC" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="rxmode_dfl" ref="0x2ace7310d020" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
        <constant name="txmode_dfl" ref="0x2ace7310d378" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ace732dda78" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ace732d65b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ace73302398" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2ace7201eaa8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7201eaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7201edf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ace7201f598" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ace7201f598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ace7201f8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace72013890" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72013890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72013be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ace72024790" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ace72024790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ace72024ae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ace72024c68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ace72024df0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ace7201b020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ace7201b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2ace7201b538" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2ace7201b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7201b888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WDInit" ref="0x2ace72020318" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDInit" scoped="" ref="0x2ace72020318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72020668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace7201ae80" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace7201ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace720211f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2ace72021bd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2ace72021bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72020020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x2ace72021578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x2ace72021578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace720218c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace72028700" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72028700"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72028a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2ace72034470" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2ace72034470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace720347c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2ace72028de8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2ace72028de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72034170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x2ace72052688" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x2ace72052688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace720529d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace72044ab0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72044ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72044e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2ace72052020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2ace72052020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72052370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2ace720431f0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2ace720431f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72043540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2ace72043858" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2ace72043858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72043ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace7205e288" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace7205e288"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7205e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ace7205e8b8" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ace7205e8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ace7205ec08"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ace7205ed90"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ace7205c020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ace7205c1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ace7205c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x2ace72031b80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x2ace72031b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72082020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WDInit" ref="0x2ace720735f8" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogC.nc">
      <component-ref qname="WatchDogC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDInit" scoped="" ref="0x2ace720735f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72073948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wd_task" ref="0x2ace720a0188" loc="25:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wd_task" scoped="" ref="0x2ace720a0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace720a04d8"/>
        <function-ref name="runTask" scoped="" ref="0x2ace720a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WDInit" ref="0x2ace7207c690" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDInit" scoped="" ref="0x2ace7207c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7207c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ace7207cc98" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ace7207cc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ace72089020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerWD" ref="0x2ace7208e7b8" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/WatchDogP.nc">
      <component-ref qname="WatchDogP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerWD" scoped="" ref="0x2ace7208e7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace7208da18"/>
        <function-ref name="fired" scoped="" ref="0x2ace72087158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace72087e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace720879f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ace7208b2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ace7208de68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace720875a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace72088370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace7208d448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace72088810"/>
        <function-ref name="stop" scoped="" ref="0x2ace72088cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ace7209c7b0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="WatchDogC.TimerWDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ace7209c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace72384a18"/>
        <function-ref name="fired" scoped="" ref="0x2ace72369158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace72369e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace723699f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ace723832e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ace72384e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace723695a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace7236a370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace72384448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace7236a810"/>
        <function-ref name="stop" scoped="" ref="0x2ace7236acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ace720b21c8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ace720b21c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace720af5f0"/>
        <function-ref name="fired" scoped="" ref="0x2ace720b1af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace720b08c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace720b0470"/>
        <function-ref name="getdt" scoped="" ref="0x2ace720ad020"/>
        <function-ref name="gett0" scoped="" ref="0x2ace720afa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace720b0020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace720b2d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace720af020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace720b1200"/>
        <function-ref name="stop" scoped="" ref="0x2ace720b16a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace720ab9e8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace720ab9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace722e5088"/>
        <function-ref name="fired" scoped="" ref="0x2ace722e60f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace722e6a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace722e6580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace722e5510"/>
        <function-ref name="start" scoped="" ref="0x2ace722e7768"/>
        <function-ref name="stop" scoped="" ref="0x2ace722e7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace73341de0" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace73341de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace7333d628"/>
        <function-ref name="fired" scoped="" ref="0x2ace7333e580"/>
        <function-ref name="startAt" scoped="" ref="0x2ace7333d020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7333ea08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace7333dab0"/>
        <function-ref name="start" scoped="" ref="0x2ace7333fbe8"/>
        <function-ref name="stop" scoped="" ref="0x2ace7333e0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientAlarm" ref="0x2ace720c6988" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <component-ref qname="MuxAlarm62khz32C_"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClientAlarm" scoped="" ref="0x2ace720c6988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace720c3020"/>
        <function-ref name="fired" scoped="" ref="0x2ace720c40c0"/>
        <function-ref name="startAt" scoped="" ref="0x2ace720c49d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace720c4548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace720c34a8"/>
        <function-ref name="start" scoped="" ref="0x2ace720c5730"/>
        <function-ref name="stop" scoped="" ref="0x2ace720c5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace720d1cc0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace720d1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace72113470"/>
        <function-ref name="fired" scoped="" ref="0x2ace721034c8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace72103e18"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace72103970"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace72113918"/>
        <function-ref name="start" scoped="" ref="0x2ace72104ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ace72103020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace720d1378" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace720d1378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace720d16c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ace72111020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2ace72111020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace7210f690"/>
        <function-ref name="fired" scoped="" ref="0x2ace721106f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace7210f088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace72110b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace7210fb18"/>
        <function-ref name="start" scoped="" ref="0x2ace72111d70"/>
        <function-ref name="stop" scoped="" ref="0x2ace72110270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace7228ce10" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace7228ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace72289628"/>
        <function-ref name="fired" scoped="" ref="0x2ace7228a580"/>
        <function-ref name="startAt" scoped="" ref="0x2ace72289020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7228aa08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace72289ab0"/>
        <function-ref name="start" scoped="" ref="0x2ace7228bbe8"/>
        <function-ref name="stop" scoped="" ref="0x2ace7228a0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2ace73358ab0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace73358ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace73354b80"/>
        <function-ref name="test" scoped="" ref="0x2ace733564a8"/>
        <function-ref name="fired" scoped="" ref="0x2ace73356020"/>
        <function-ref name="force" scoped="" ref="0x2ace73353510"/>
        <function-ref name="get" scoped="" ref="0x2ace73357658"/>
        <function-ref name="reset" scoped="" ref="0x2ace73356930"/>
        <function-ref name="getMode" scoped="" ref="0x2ace73353088"/>
        <function-ref name="isOn" scoped="" ref="0x2ace733546f8"/>
        <function-ref name="set" scoped="" ref="0x2ace73357ae0"/>
        <function-ref name="start" scoped="" ref="0x2ace73356db8"/>
        <function-ref name="stop" scoped="" ref="0x2ace73354270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace73361d68" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace73361d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace7335d410"/>
        <function-ref name="fired" scoped="" ref="0x2ace7335f4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace7335fdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7335f930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace7335d898"/>
        <function-ref name="start" scoped="" ref="0x2ace73360af8"/>
        <function-ref name="stop" scoped="" ref="0x2ace7335f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace7335ddd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace7335ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace733580f8"/>
        <function-ref name="test" scoped="" ref="0x2ace7335b980"/>
        <function-ref name="get" scoped="" ref="0x2ace7335ca18"/>
        <function-ref name="reset" scoped="" ref="0x2ace7335be08"/>
        <function-ref name="getMode" scoped="" ref="0x2ace733585d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7335b4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7335ac20"/>
        <function-ref name="set" scoped="" ref="0x2ace7335b020"/>
        <function-ref name="start" scoped="" ref="0x2ace7335a310"/>
        <function-ref name="stop" scoped="" ref="0x2ace7335a798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2ace7339bc28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7339bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace73397db8"/>
        <function-ref name="test" scoped="" ref="0x2ace73398658"/>
        <function-ref name="fired" scoped="" ref="0x2ace733981d0"/>
        <function-ref name="force" scoped="" ref="0x2ace73396778"/>
        <function-ref name="get" scoped="" ref="0x2ace7339a820"/>
        <function-ref name="reset" scoped="" ref="0x2ace73398ae0"/>
        <function-ref name="getMode" scoped="" ref="0x2ace733962f0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace73397930"/>
        <function-ref name="set" scoped="" ref="0x2ace7339aca8"/>
        <function-ref name="start" scoped="" ref="0x2ace73397020"/>
        <function-ref name="stop" scoped="" ref="0x2ace733974a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace733a3020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace733a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace733a0690"/>
        <function-ref name="fired" scoped="" ref="0x2ace733a26f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace733a0088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace733a2b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace733a0b18"/>
        <function-ref name="start" scoped="" ref="0x2ace733a3d70"/>
        <function-ref name="stop" scoped="" ref="0x2ace733a2270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace733a4848" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace733a4848"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace733a4b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace7339f0a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace7339f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7339b270"/>
        <function-ref name="test" scoped="" ref="0x2ace7339ea58"/>
        <function-ref name="get" scoped="" ref="0x2ace7339fc20"/>
        <function-ref name="reset" scoped="" ref="0x2ace7339c020"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7339b748"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7339e5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7339cdb8"/>
        <function-ref name="set" scoped="" ref="0x2ace7339e0f8"/>
        <function-ref name="start" scoped="" ref="0x2ace7339c4a8"/>
        <function-ref name="stop" scoped="" ref="0x2ace7339c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace7217da88" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace7217da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7218cb80"/>
        <function-ref name="test" scoped="" ref="0x2ace7218d4a8"/>
        <function-ref name="get" scoped="" ref="0x2ace7218e658"/>
        <function-ref name="reset" scoped="" ref="0x2ace7218d930"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7218a088"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7218d020"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7218c6f8"/>
        <function-ref name="set" scoped="" ref="0x2ace7218eae0"/>
        <function-ref name="start" scoped="" ref="0x2ace7218ddb8"/>
        <function-ref name="stop" scoped="" ref="0x2ace7218c270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2ace721980c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2ace721980c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace721a1270"/>
        <function-ref name="test" scoped="" ref="0x2ace72197a58"/>
        <function-ref name="fired" scoped="" ref="0x2ace721975d0"/>
        <function-ref name="get" scoped="" ref="0x2ace72198c48"/>
        <function-ref name="reset" scoped="" ref="0x2ace721a3020"/>
        <function-ref name="getMode" scoped="" ref="0x2ace721a1748"/>
        <function-ref name="isOn" scoped="" ref="0x2ace721a3db8"/>
        <function-ref name="set" scoped="" ref="0x2ace721970f8"/>
        <function-ref name="start" scoped="" ref="0x2ace721a34a8"/>
        <function-ref name="stop" scoped="" ref="0x2ace721a3930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ace7218abe0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ace7218abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace72187db8"/>
        <function-ref name="test" scoped="" ref="0x2ace721885b8"/>
        <function-ref name="fired" scoped="" ref="0x2ace72188130"/>
        <function-ref name="force" scoped="" ref="0x2ace72199778"/>
        <function-ref name="get" scoped="" ref="0x2ace721897a0"/>
        <function-ref name="reset" scoped="" ref="0x2ace72188a40"/>
        <function-ref name="getMode" scoped="" ref="0x2ace721992f0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace72187930"/>
        <function-ref name="set" scoped="" ref="0x2ace72189c28"/>
        <function-ref name="start" scoped="" ref="0x2ace72187020"/>
        <function-ref name="stop" scoped="" ref="0x2ace721874a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2ace721ad700" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2ace721ad700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace721a9930"/>
        <function-ref name="test" scoped="" ref="0x2ace721aa1f8"/>
        <function-ref name="fired" scoped="" ref="0x2ace721acd08"/>
        <function-ref name="force" scoped="" ref="0x2ace721a8310"/>
        <function-ref name="get" scoped="" ref="0x2ace721ac3a8"/>
        <function-ref name="reset" scoped="" ref="0x2ace721aa680"/>
        <function-ref name="getMode" scoped="" ref="0x2ace721a9e08"/>
        <function-ref name="isOn" scoped="" ref="0x2ace721a94a8"/>
        <function-ref name="set" scoped="" ref="0x2ace721ac830"/>
        <function-ref name="start" scoped="" ref="0x2ace721aab08"/>
        <function-ref name="stop" scoped="" ref="0x2ace721a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ace721c1a50" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace721c1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ace721c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2ace721a8988" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2ace721a8988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace721b8b80"/>
        <function-ref name="test" scoped="" ref="0x2ace721a54a8"/>
        <function-ref name="fired" scoped="" ref="0x2ace721a5020"/>
        <function-ref name="force" scoped="" ref="0x2ace721b7510"/>
        <function-ref name="get" scoped="" ref="0x2ace721a7560"/>
        <function-ref name="reset" scoped="" ref="0x2ace721a5930"/>
        <function-ref name="getMode" scoped="" ref="0x2ace721b7088"/>
        <function-ref name="isOn" scoped="" ref="0x2ace721b86f8"/>
        <function-ref name="set" scoped="" ref="0x2ace721a79e8"/>
        <function-ref name="start" scoped="" ref="0x2ace721a5db8"/>
        <function-ref name="stop" scoped="" ref="0x2ace721b8270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace721a0ad0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace721a0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace721aeb80"/>
        <function-ref name="test" scoped="" ref="0x2ace7219c4a8"/>
        <function-ref name="get" scoped="" ref="0x2ace7219d690"/>
        <function-ref name="reset" scoped="" ref="0x2ace7219c930"/>
        <function-ref name="getMode" scoped="" ref="0x2ace721ad088"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7219c020"/>
        <function-ref name="isOn" scoped="" ref="0x2ace721ae6f8"/>
        <function-ref name="set" scoped="" ref="0x2ace7219db18"/>
        <function-ref name="start" scoped="" ref="0x2ace7219cdb8"/>
        <function-ref name="stop" scoped="" ref="0x2ace721ae270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2ace721bf148" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ace721bf148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ace721bf498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2ace721b2e00" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2ace721b2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace721c10f8"/>
        <function-ref name="test" scoped="" ref="0x2ace721af980"/>
        <function-ref name="fired" scoped="" ref="0x2ace721af4f8"/>
        <function-ref name="get" scoped="" ref="0x2ace721b0a18"/>
        <function-ref name="reset" scoped="" ref="0x2ace721afe08"/>
        <function-ref name="getMode" scoped="" ref="0x2ace721c15d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace721c2c20"/>
        <function-ref name="set" scoped="" ref="0x2ace721af020"/>
        <function-ref name="start" scoped="" ref="0x2ace721c2310"/>
        <function-ref name="stop" scoped="" ref="0x2ace721c2798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2ace721b7b88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2ace721b7b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace721b3db8"/>
        <function-ref name="test" scoped="" ref="0x2ace721b4580"/>
        <function-ref name="fired" scoped="" ref="0x2ace721b40f8"/>
        <function-ref name="force" scoped="" ref="0x2ace721b2778"/>
        <function-ref name="get" scoped="" ref="0x2ace721b6760"/>
        <function-ref name="reset" scoped="" ref="0x2ace721b4a08"/>
        <function-ref name="getMode" scoped="" ref="0x2ace721b22f0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace721b3930"/>
        <function-ref name="set" scoped="" ref="0x2ace721b6be8"/>
        <function-ref name="start" scoped="" ref="0x2ace721b3020"/>
        <function-ref name="stop" scoped="" ref="0x2ace721b34a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ace71ffc2b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace71ffc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ace71ffc600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace71ff2468" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace71ff2468"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2ace71f15e78"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2ace71f15e78"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace71ff27b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace71ff2940"/>
        <function-ref name="led1On" scoped="" ref="0x2ace71ff2ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace71ff2c50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace71ff2dd8"/>
        <function-ref name="get" scoped="" ref="0x2ace72000020"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace720001a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace720007c8"/>
        <function-ref name="set" scoped="" ref="0x2ace72000330"/>
        <function-ref name="led0On" scoped="" ref="0x2ace720004b8"/>
        <function-ref name="led2On" scoped="" ref="0x2ace72000640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ace71f51cb8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ace71f51cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ace71ff30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ace71ff01e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ace71ff01e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ace71ff0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace7224f2b0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace7224f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace7224e088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace7224e998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace7224e510"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7224ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace72248dd8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace72248dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace7227dbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace7227c548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace7227c0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7227c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace7227a020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace7227a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7228e0f8"/>
        <function-ref name="test" scoped="" ref="0x2ace722799e8"/>
        <function-ref name="get" scoped="" ref="0x2ace7227aba0"/>
        <function-ref name="reset" scoped="" ref="0x2ace72279e70"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7228e5d0"/>
        <function-ref name="overflow" scoped="" ref="0x2ace72279560"/>
        <function-ref name="isOn" scoped="" ref="0x2ace72278c30"/>
        <function-ref name="set" scoped="" ref="0x2ace72279088"/>
        <function-ref name="start" scoped="" ref="0x2ace72278320"/>
        <function-ref name="stop" scoped="" ref="0x2ace722787a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace733dacf8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace733dacf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace733d90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace733d94f8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace733d94f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace733d83a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace733d8cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace733d8830"/>
        <function-ref name="overflow" scoped="" ref="0x2ace733d7190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace733d76d0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace733d76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace733d3930"/>
        <function-ref name="test" scoped="" ref="0x2ace733d41f8"/>
        <function-ref name="get" scoped="" ref="0x2ace733d53a8"/>
        <function-ref name="reset" scoped="" ref="0x2ace733d4680"/>
        <function-ref name="getMode" scoped="" ref="0x2ace733d3e08"/>
        <function-ref name="overflow" scoped="" ref="0x2ace733d5d08"/>
        <function-ref name="isOn" scoped="" ref="0x2ace733d34a8"/>
        <function-ref name="set" scoped="" ref="0x2ace733d5830"/>
        <function-ref name="start" scoped="" ref="0x2ace733d4b08"/>
        <function-ref name="stop" scoped="" ref="0x2ace733d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace7229a610" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace7229a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace722973a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace72297cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace72297830"/>
        <function-ref name="overflow" scoped="" ref="0x2ace72296190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ace722a7450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2ace722a7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace722be1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace722beae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace722be658"/>
        <function-ref name="overflow" scoped="" ref="0x2ace722bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace72293270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace72293270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace722a8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace722a8930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace722a84a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ace722a8db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace7333be00" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace7333be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace73337628"/>
        <function-ref name="fired" scoped="" ref="0x2ace73339580"/>
        <function-ref name="startAt" scoped="" ref="0x2ace73337020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace73339a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace73337ab0"/>
        <function-ref name="start" scoped="" ref="0x2ace7333abe8"/>
        <function-ref name="stop" scoped="" ref="0x2ace733390f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ace73334310" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2ace73334310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace73331928"/>
        <function-ref name="fired" scoped="" ref="0x2ace733339e8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace73331320"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace73333e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace73331db0"/>
        <function-ref name="start" scoped="" ref="0x2ace73333088"/>
        <function-ref name="stop" scoped="" ref="0x2ace73333560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ace73336128" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace73336128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace73336e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace733357b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace73335330"/>
        <function-ref name="overflow" scoped="" ref="0x2ace73335c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ace7231dcf0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2ace7231dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace7231c0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ace7231c228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ace72321c70" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace72321c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace7231d410"/>
        <function-ref name="fired" scoped="" ref="0x2ace7231f4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace7231fdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7231f930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace7231d898"/>
        <function-ref name="start" scoped="" ref="0x2ace723209f0"/>
        <function-ref name="stop" scoped="" ref="0x2ace7231f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ace7230cab0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ace7230cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace72323d60"/>
        <function-ref name="fired" scoped="" ref="0x2ace72324470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace723231c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace72324d10"/>
        <function-ref name="getdt" scoped="" ref="0x2ace72321648"/>
        <function-ref name="gett0" scoped="" ref="0x2ace723211f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace723248c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace72325620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace72323790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace72325ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ace72324020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ace7236f618" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2ace7236f618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace7236f968"/>
        <function-ref name="runTask" scoped="" ref="0x2ace7236faf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ace723745a0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2ace723745a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace723708f0"/>
        <function-ref name="fired" scoped="" ref="0x2ace72372020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace72372d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace723728c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ace7236f1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ace72370d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace72372470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace72373118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace72370320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace723735b8"/>
        <function-ref name="stop" scoped="" ref="0x2ace72373a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ace7235e0c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ace7235e0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace72376610"/>
        <function-ref name="fired" scoped="" ref="0x2ace7235da48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace7235b900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace7235b490"/>
        <function-ref name="getdt" scoped="" ref="0x2ace72374020"/>
        <function-ref name="gett0" scoped="" ref="0x2ace72376a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7235b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace7235ec30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace72376020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace7235d118"/>
        <function-ref name="stop" scoped="" ref="0x2ace7235d5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ace7237d898" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ace7237d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7237dbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ace7237e198" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ace7237e198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ace7237e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ace7237d1d0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ace7237d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7237d520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ace7237e7d0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ace7237e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7237eb20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ace7237eca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ace7237ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ace71f0c368" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ace71f0c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace71f0c6b8"/>
        <function-ref name="runTask" scoped="" ref="0x2ace71f0c840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ace71f4f898" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ace71f4f898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace71f4fbe8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ace71f4fd70"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ace71914020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ace71fc51c8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ace71fc51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace71fc5518"/>
        <function-ref name="runTask" scoped="" ref="0x2ace71fc56a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ace71fcf668" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ace71fcf668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ace71fcf9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ace71fc62a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ace71fc62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace71fc65f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ace71fc6780"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ace71fc6908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2ace7241dca0" loc="9:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2ace7241dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace72418088"/>
        <function-ref name="fired" scoped="" ref="0x2ace7241b5e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace72419470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace72419020"/>
        <function-ref name="getdt" scoped="" ref="0x2ace72418928"/>
        <function-ref name="gett0" scoped="" ref="0x2ace724184d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7241ba38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace7241c820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace72419a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace7241ccc0"/>
        <function-ref name="stop" scoped="" ref="0x2ace7241b198"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2ace72434060" loc="18:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2ace72434060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace724343b0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace72434538"/>
        <function-ref name="start" scoped="" ref="0x2ace724346c0"/>
        <function-ref name="stop" scoped="" ref="0x2ace72434848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ace72416460" loc="11:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ace72416460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ace724167b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ace72427178" loc="13:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace72427178"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace724274c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72427650"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace724277d8"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72427960"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72427ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x2ace72431060" loc="20:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2ace72431060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7244a640"/>
        <function-ref name="get" scoped="" ref="0x2ace7244a130"/>
        <function-ref name="isSet" scoped="" ref="0x2ace72431be0"/>
        <function-ref name="set" scoped="" ref="0x2ace7244ab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2ace7244e948" loc="16:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace7244e948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace7244ec98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace72418d70" loc="10:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace72418d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace724170f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace72417278"/>
        <function-ref name="led1On" scoped="" ref="0x2ace72417400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace72417588"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace72417710"/>
        <function-ref name="get" scoped="" ref="0x2ace72417898"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace72417a20"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace724161a8"/>
        <function-ref name="set" scoped="" ref="0x2ace72417ba8"/>
        <function-ref name="led0On" scoped="" ref="0x2ace72417d30"/>
        <function-ref name="led2On" scoped="" ref="0x2ace72416020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ace7245ecb0" loc="22:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace7245ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace724430a0"/>
        <function-ref name="noAck" scoped="" ref="0x2ace72443228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace724433b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioChannel" ref="0x2ace7245a4d0" loc="23:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2ace7245a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2ace7245a820"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace7245a9a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace7245ab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ace724368a0" loc="14:TestUsbStationC.nc">
      <component-ref qname="TestUsbStationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace724368a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace72436bf0"/>
        <function-ref name="source" scoped="" ref="0x2ace72436d78"/>
        <function-ref name="address" scoped="" ref="0x2ace72413020"/>
        <function-ref name="destination" scoped="" ref="0x2ace724131a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72413330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace724134b8"/>
        <function-ref name="type" scoped="" ref="0x2ace72413640"/>
        <function-ref name="setType" scoped="" ref="0x2ace724137c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72413950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace72413ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace72413c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ace723f77f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace723f77f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace723f7b40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace723f7cc8"/>
        <function-ref name="led1On" scoped="" ref="0x2ace723f7e50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace7247d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace7247d1a8"/>
        <function-ref name="get" scoped="" ref="0x2ace7247d330"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace7247d4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace7247dad8"/>
        <function-ref name="set" scoped="" ref="0x2ace7247d640"/>
        <function-ref name="led0On" scoped="" ref="0x2ace7247d7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ace7247d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ace72471348" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ace72471348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace72471698"/>
        <function-ref name="isInput" scoped="" ref="0x2ace72471820"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724719a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace72471b30"/>
        <function-ref name="get" scoped="" ref="0x2ace72471cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace72471e40"/>
        <function-ref name="set" scoped="" ref="0x2ace72477020"/>
        <function-ref name="clr" scoped="" ref="0x2ace724771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace7247c9d0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace7247c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7247cd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ace724774c0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ace724774c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace72477810"/>
        <function-ref name="isInput" scoped="" ref="0x2ace72477998"/>
        <function-ref name="toggle" scoped="" ref="0x2ace72477b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace72477ca8"/>
        <function-ref name="get" scoped="" ref="0x2ace72477e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace72476020"/>
        <function-ref name="set" scoped="" ref="0x2ace724761a8"/>
        <function-ref name="clr" scoped="" ref="0x2ace72476330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ace72479020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace72479020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace72479370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace724794f8"/>
        <function-ref name="led1On" scoped="" ref="0x2ace72479680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace72479808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace72479990"/>
        <function-ref name="get" scoped="" ref="0x2ace72479b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace72479ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace72478330"/>
        <function-ref name="set" scoped="" ref="0x2ace72479e28"/>
        <function-ref name="led0On" scoped="" ref="0x2ace72478020"/>
        <function-ref name="led2On" scoped="" ref="0x2ace724781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ace72476648" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ace72476648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace72476998"/>
        <function-ref name="isInput" scoped="" ref="0x2ace72476b20"/>
        <function-ref name="toggle" scoped="" ref="0x2ace72476ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace72476e30"/>
        <function-ref name="get" scoped="" ref="0x2ace72470020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724701a8"/>
        <function-ref name="set" scoped="" ref="0x2ace72470330"/>
        <function-ref name="clr" scoped="" ref="0x2ace724704b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ace7247aa70" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ace7247aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace7247adc0"/>
        <function-ref name="isInput" scoped="" ref="0x2ace72495020"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724951a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace72495330"/>
        <function-ref name="get" scoped="" ref="0x2ace724954b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace72495640"/>
        <function-ref name="set" scoped="" ref="0x2ace724957c8"/>
        <function-ref name="clr" scoped="" ref="0x2ace72495950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ace72495c68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ace72495c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace72494020"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724941a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace72494330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724944b8"/>
        <function-ref name="get" scoped="" ref="0x2ace72494640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724947c8"/>
        <function-ref name="set" scoped="" ref="0x2ace72494950"/>
        <function-ref name="clr" scoped="" ref="0x2ace72494ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ace72492020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72492020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72492370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ace72494df0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ace72494df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace72493170"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724932f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace72493480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace72493608"/>
        <function-ref name="get" scoped="" ref="0x2ace72493790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace72493918"/>
        <function-ref name="set" scoped="" ref="0x2ace72493aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ace72493c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2ace724d91a0" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2ace724d91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724d98f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724d9a78"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724d9c00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724d9d88"/>
        <function-ref name="get" scoped="" ref="0x2ace724d8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724d81a8"/>
        <function-ref name="set" scoped="" ref="0x2ace724d8330"/>
        <function-ref name="clr" scoped="" ref="0x2ace724d84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2ace724b3c78" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2ace724b3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724b2020"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724b21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724b2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724b24b8"/>
        <function-ref name="get" scoped="" ref="0x2ace724b2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724b27c8"/>
        <function-ref name="set" scoped="" ref="0x2ace724b2950"/>
        <function-ref name="clr" scoped="" ref="0x2ace724b2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2ace724c8c78" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2ace724c8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724c7020"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724c71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724c7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724c74b8"/>
        <function-ref name="get" scoped="" ref="0x2ace724c7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724c77c8"/>
        <function-ref name="set" scoped="" ref="0x2ace724c7950"/>
        <function-ref name="clr" scoped="" ref="0x2ace724c7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2ace724df968" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2ace724df968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724dfcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724dfe40"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724de020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724de1a8"/>
        <function-ref name="get" scoped="" ref="0x2ace724de330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724de4b8"/>
        <function-ref name="set" scoped="" ref="0x2ace724de640"/>
        <function-ref name="clr" scoped="" ref="0x2ace724de7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2ace724d4e00" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2ace724d4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724d31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724d3330"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724d34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724d3640"/>
        <function-ref name="get" scoped="" ref="0x2ace724d37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724d3950"/>
        <function-ref name="set" scoped="" ref="0x2ace724d3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724d3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2ace724a9968" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2ace724a9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724a9cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724a9e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724a81a8"/>
        <function-ref name="get" scoped="" ref="0x2ace724a8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724a84b8"/>
        <function-ref name="set" scoped="" ref="0x2ace724a8640"/>
        <function-ref name="clr" scoped="" ref="0x2ace724a87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2ace724c0658" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2ace724c0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724c09a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724c0b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724c0cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724c0e40"/>
        <function-ref name="get" scoped="" ref="0x2ace724bf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724bf1a8"/>
        <function-ref name="set" scoped="" ref="0x2ace724bf330"/>
        <function-ref name="clr" scoped="" ref="0x2ace724bf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2ace724a7c78" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2ace724a7c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724a6020"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724a61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724a6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724a64b8"/>
        <function-ref name="get" scoped="" ref="0x2ace724a6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724a67c8"/>
        <function-ref name="set" scoped="" ref="0x2ace724a6950"/>
        <function-ref name="clr" scoped="" ref="0x2ace724a6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2ace724bbe00" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2ace724bbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724ba1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724ba330"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724ba4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724ba640"/>
        <function-ref name="get" scoped="" ref="0x2ace724ba7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724ba950"/>
        <function-ref name="set" scoped="" ref="0x2ace724baad8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724bac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2ace724af1a0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2ace724af1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724af4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724af678"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724af800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724af988"/>
        <function-ref name="get" scoped="" ref="0x2ace724afb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724afc98"/>
        <function-ref name="set" scoped="" ref="0x2ace724afe20"/>
        <function-ref name="clr" scoped="" ref="0x2ace724ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2ace724c31a0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2ace724c31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724c34f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724c3678"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724c3800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724c3988"/>
        <function-ref name="get" scoped="" ref="0x2ace724c3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724c3c98"/>
        <function-ref name="set" scoped="" ref="0x2ace724c3e20"/>
        <function-ref name="clr" scoped="" ref="0x2ace724c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2ace724ae1a0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2ace724ae1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724ae4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724ae678"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724ae800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724ae988"/>
        <function-ref name="get" scoped="" ref="0x2ace724aeb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724aec98"/>
        <function-ref name="set" scoped="" ref="0x2ace724aee20"/>
        <function-ref name="clr" scoped="" ref="0x2ace724ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2ace724a31a0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2ace724a31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724a34f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724a3678"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724a3800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724a3988"/>
        <function-ref name="get" scoped="" ref="0x2ace724a3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724a3c98"/>
        <function-ref name="set" scoped="" ref="0x2ace724a3e20"/>
        <function-ref name="clr" scoped="" ref="0x2ace724a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2ace724b7348" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2ace724b7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724b7698"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724b7820"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724b79a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724b7b30"/>
        <function-ref name="get" scoped="" ref="0x2ace724b7cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724b7e40"/>
        <function-ref name="set" scoped="" ref="0x2ace724b6020"/>
        <function-ref name="clr" scoped="" ref="0x2ace724b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2ace724cc658" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2ace724cc658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724cc9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724ccb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724cccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724cce40"/>
        <function-ref name="get" scoped="" ref="0x2ace724cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724cb1a8"/>
        <function-ref name="set" scoped="" ref="0x2ace724cb330"/>
        <function-ref name="clr" scoped="" ref="0x2ace724cb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2ace724dce00" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2ace724dce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724db1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724db330"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724db4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724db640"/>
        <function-ref name="get" scoped="" ref="0x2ace724db7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724db950"/>
        <function-ref name="set" scoped="" ref="0x2ace724dbad8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724dbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2ace724d6af0" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2ace724d6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724d6e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724d5020"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724d51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724d5330"/>
        <function-ref name="get" scoped="" ref="0x2ace724d54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724d5640"/>
        <function-ref name="set" scoped="" ref="0x2ace724d57c8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724d5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2ace724ca968" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2ace724ca968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724cacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724cae40"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724c91a8"/>
        <function-ref name="get" scoped="" ref="0x2ace724c9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724c94b8"/>
        <function-ref name="set" scoped="" ref="0x2ace724c9640"/>
        <function-ref name="clr" scoped="" ref="0x2ace724c97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2ace724ab658" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2ace724ab658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724ab9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724abb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724abcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724abe40"/>
        <function-ref name="get" scoped="" ref="0x2ace724aa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724aa1a8"/>
        <function-ref name="set" scoped="" ref="0x2ace724aa330"/>
        <function-ref name="clr" scoped="" ref="0x2ace724aa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2ace724a07e0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2ace724a07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724a0b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724a0cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724a0e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace7249f020"/>
        <function-ref name="get" scoped="" ref="0x2ace7249f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace7249f330"/>
        <function-ref name="set" scoped="" ref="0x2ace7249f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ace7249f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2ace724d87e0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2ace724d87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724d8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724d8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724d8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724d7020"/>
        <function-ref name="get" scoped="" ref="0x2ace724d71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724d7330"/>
        <function-ref name="set" scoped="" ref="0x2ace724d74b8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724d7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2ace724bdaf0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2ace724bdaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724bde40"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724bc020"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724bc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724bc330"/>
        <function-ref name="get" scoped="" ref="0x2ace724bc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724bc640"/>
        <function-ref name="set" scoped="" ref="0x2ace724bc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724bc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2ace724b2e00" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2ace724b2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724b11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724b1330"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724b14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724b1640"/>
        <function-ref name="get" scoped="" ref="0x2ace724b17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724b1950"/>
        <function-ref name="set" scoped="" ref="0x2ace724b1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724b1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2ace724c7e00" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2ace724c7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724c61a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724c6330"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724c64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724c6640"/>
        <function-ref name="get" scoped="" ref="0x2ace724c67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724c6950"/>
        <function-ref name="set" scoped="" ref="0x2ace724c6ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724c6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2ace724deaf0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2ace724deaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724dee40"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724dd020"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724dd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724dd330"/>
        <function-ref name="get" scoped="" ref="0x2ace724dd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724dd640"/>
        <function-ref name="set" scoped="" ref="0x2ace724dd7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724dd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2ace724a8af0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2ace724a8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724a8e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724a7020"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724a71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724a7330"/>
        <function-ref name="get" scoped="" ref="0x2ace724a74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724a7640"/>
        <function-ref name="set" scoped="" ref="0x2ace724a77c8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724a7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2ace724a6e00" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2ace724a6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724a51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724a5330"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724a54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724a5640"/>
        <function-ref name="get" scoped="" ref="0x2ace724a57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724a5950"/>
        <function-ref name="set" scoped="" ref="0x2ace724a5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724a5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2ace724b9020" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2ace724b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724b9370"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724b94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724b9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724b9808"/>
        <function-ref name="get" scoped="" ref="0x2ace724b9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724b9b18"/>
        <function-ref name="set" scoped="" ref="0x2ace724b9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ace724b9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2ace724ce348" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2ace724ce348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724ce698"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724ce820"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724ce9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724ceb30"/>
        <function-ref name="get" scoped="" ref="0x2ace724cecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724cee40"/>
        <function-ref name="set" scoped="" ref="0x2ace724cd020"/>
        <function-ref name="clr" scoped="" ref="0x2ace724cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2ace724c2348" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2ace724c2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724c2698"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724c2820"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724c29a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724c2b30"/>
        <function-ref name="get" scoped="" ref="0x2ace724c2cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724c2e40"/>
        <function-ref name="set" scoped="" ref="0x2ace724c1020"/>
        <function-ref name="clr" scoped="" ref="0x2ace724c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2ace724ad348" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2ace724ad348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724ad698"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724ad820"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724ad9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724adb30"/>
        <function-ref name="get" scoped="" ref="0x2ace724adcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724ade40"/>
        <function-ref name="set" scoped="" ref="0x2ace724ac020"/>
        <function-ref name="clr" scoped="" ref="0x2ace724ac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2ace724a2348" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2ace724a2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724a2798"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724a2920"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724a2aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724a2c30"/>
        <function-ref name="get" scoped="" ref="0x2ace724a2db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724a1020"/>
        <function-ref name="set" scoped="" ref="0x2ace724a11a8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724a1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2ace724b64d0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2ace724b64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724b6820"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724b69a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724b6b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724b6cb8"/>
        <function-ref name="get" scoped="" ref="0x2ace724b6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724b5020"/>
        <function-ref name="set" scoped="" ref="0x2ace724b51a8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2ace724da020" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2ace724da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724da370"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724da4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724da680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724da808"/>
        <function-ref name="get" scoped="" ref="0x2ace724da990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724dab18"/>
        <function-ref name="set" scoped="" ref="0x2ace724daca0"/>
        <function-ref name="clr" scoped="" ref="0x2ace724dae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2ace724b47e0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2ace724b47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724b4d30"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724b3020"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724b31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724b3330"/>
        <function-ref name="get" scoped="" ref="0x2ace724b34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724b3640"/>
        <function-ref name="set" scoped="" ref="0x2ace724b37c8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724b3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2ace724c9af0" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2ace724c9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724c9e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724c8020"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724c81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724c8330"/>
        <function-ref name="get" scoped="" ref="0x2ace724c84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724c8640"/>
        <function-ref name="set" scoped="" ref="0x2ace724c87c8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724c8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2ace724bf7e0" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2ace724bf7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724bfb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724bfcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724bfe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724df020"/>
        <function-ref name="get" scoped="" ref="0x2ace724df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724df330"/>
        <function-ref name="set" scoped="" ref="0x2ace724df4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724df640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2ace724d5c78" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2ace724d5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724d4020"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724d41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724d4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724d44b8"/>
        <function-ref name="get" scoped="" ref="0x2ace724d4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724d47c8"/>
        <function-ref name="set" scoped="" ref="0x2ace724d4950"/>
        <function-ref name="clr" scoped="" ref="0x2ace724d4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2ace724aa7e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2ace724aa7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724aab30"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724aacb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724aae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724a9020"/>
        <function-ref name="get" scoped="" ref="0x2ace724a91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724a9330"/>
        <function-ref name="set" scoped="" ref="0x2ace724a94b8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724a9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2ace7249f968" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2ace7249f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace7249fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace7249fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724bd1a8"/>
        <function-ref name="get" scoped="" ref="0x2ace724bd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724bd4b8"/>
        <function-ref name="set" scoped="" ref="0x2ace724bd640"/>
        <function-ref name="clr" scoped="" ref="0x2ace724bd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2ace724c14d0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2ace724c14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724c1820"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724c19a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724c1b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724c1cb8"/>
        <function-ref name="get" scoped="" ref="0x2ace724c1e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724c0020"/>
        <function-ref name="set" scoped="" ref="0x2ace724c01a8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724c0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2ace724bcc78" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2ace724bcc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724bb020"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724bb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724bb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724bb4b8"/>
        <function-ref name="get" scoped="" ref="0x2ace724bb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724bb7c8"/>
        <function-ref name="set" scoped="" ref="0x2ace724bb950"/>
        <function-ref name="clr" scoped="" ref="0x2ace724bbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2ace724b0020" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2ace724b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724b0370"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724b04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724b0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724b0808"/>
        <function-ref name="get" scoped="" ref="0x2ace724b0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724b0b18"/>
        <function-ref name="set" scoped="" ref="0x2ace724b0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ace724b0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2ace724c5020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2ace724c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724c5370"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724c54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724c5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724c5808"/>
        <function-ref name="get" scoped="" ref="0x2ace724c5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724c5b18"/>
        <function-ref name="set" scoped="" ref="0x2ace724c5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ace724c5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2ace724ddc78" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2ace724ddc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724dc020"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724dc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724dc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724dc4b8"/>
        <function-ref name="get" scoped="" ref="0x2ace724dc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724dc7c8"/>
        <function-ref name="set" scoped="" ref="0x2ace724dc950"/>
        <function-ref name="clr" scoped="" ref="0x2ace724dcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2ace7248f020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2ace7248f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace7248f370"/>
        <function-ref name="isInput" scoped="" ref="0x2ace7248f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace7248f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace7248f808"/>
        <function-ref name="get" scoped="" ref="0x2ace7248f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace7248fb18"/>
        <function-ref name="set" scoped="" ref="0x2ace7248fca0"/>
        <function-ref name="clr" scoped="" ref="0x2ace7248fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2ace724a4020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2ace724a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724a4370"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724a44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724a4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724a4808"/>
        <function-ref name="get" scoped="" ref="0x2ace724a4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724a4b18"/>
        <function-ref name="set" scoped="" ref="0x2ace724a4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ace724a4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2ace724b81a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2ace724b81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724b84f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724b8678"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724b8800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724b8988"/>
        <function-ref name="get" scoped="" ref="0x2ace724b8b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724b8c98"/>
        <function-ref name="set" scoped="" ref="0x2ace724b8e20"/>
        <function-ref name="clr" scoped="" ref="0x2ace724b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2ace724cd4d0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2ace724cd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724cd820"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724cd9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724cdb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724cdcb8"/>
        <function-ref name="get" scoped="" ref="0x2ace724cde40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724cc020"/>
        <function-ref name="set" scoped="" ref="0x2ace724cc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2ace724d7968" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2ace724d7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724d7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724d7e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724d61a8"/>
        <function-ref name="get" scoped="" ref="0x2ace724d6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724d64b8"/>
        <function-ref name="set" scoped="" ref="0x2ace724d6640"/>
        <function-ref name="clr" scoped="" ref="0x2ace724d67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2ace724cb7e0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2ace724cb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724cbb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724cbcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724cbe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724ca020"/>
        <function-ref name="get" scoped="" ref="0x2ace724ca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724ca330"/>
        <function-ref name="set" scoped="" ref="0x2ace724ca4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724ca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2ace724b5658" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2ace724b5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724b59a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724b5b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724b5cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724b5e40"/>
        <function-ref name="get" scoped="" ref="0x2ace724b4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724b41a8"/>
        <function-ref name="set" scoped="" ref="0x2ace724b4330"/>
        <function-ref name="clr" scoped="" ref="0x2ace724b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2ace724ac4d0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2ace724ac4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724ac820"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724ac9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724acb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724accb8"/>
        <function-ref name="get" scoped="" ref="0x2ace724ace40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724ab020"/>
        <function-ref name="set" scoped="" ref="0x2ace724ab1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ace724ab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2ace724a1658" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2ace724a1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724a19a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724a1b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724a1cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724a1e40"/>
        <function-ref name="get" scoped="" ref="0x2ace724a0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724a01a8"/>
        <function-ref name="set" scoped="" ref="0x2ace724a0330"/>
        <function-ref name="clr" scoped="" ref="0x2ace724a04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2ace724f00c8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2ace724f00c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724f0438"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724f05c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724f0748"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724f08d0"/>
        <function-ref name="get" scoped="" ref="0x2ace724f0a58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724f0be0"/>
        <function-ref name="set" scoped="" ref="0x2ace724f0d68"/>
        <function-ref name="clr" scoped="" ref="0x2ace724f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2ace724f34f8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2ace724f34f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace724f3868"/>
        <function-ref name="isInput" scoped="" ref="0x2ace724f39f0"/>
        <function-ref name="toggle" scoped="" ref="0x2ace724f3b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace724f3d00"/>
        <function-ref name="get" scoped="" ref="0x2ace724f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace724f21a8"/>
        <function-ref name="set" scoped="" ref="0x2ace724f2330"/>
        <function-ref name="clr" scoped="" ref="0x2ace724f24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2ace7250e860" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2ace7250e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace7250ebd0"/>
        <function-ref name="isInput" scoped="" ref="0x2ace7250ed58"/>
        <function-ref name="toggle" scoped="" ref="0x2ace7250d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace7250d1a8"/>
        <function-ref name="get" scoped="" ref="0x2ace7250d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace7250d4b8"/>
        <function-ref name="set" scoped="" ref="0x2ace7250d640"/>
        <function-ref name="clr" scoped="" ref="0x2ace7250d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2ace72508b88" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2ace72508b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace72506020"/>
        <function-ref name="isInput" scoped="" ref="0x2ace725061a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace72506330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace725064b8"/>
        <function-ref name="get" scoped="" ref="0x2ace72506640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace725067c8"/>
        <function-ref name="set" scoped="" ref="0x2ace72506950"/>
        <function-ref name="clr" scoped="" ref="0x2ace72506ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2ace72522020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2ace72522020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace72522390"/>
        <function-ref name="isInput" scoped="" ref="0x2ace72522518"/>
        <function-ref name="toggle" scoped="" ref="0x2ace725226a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace72522828"/>
        <function-ref name="get" scoped="" ref="0x2ace725229b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace72522b38"/>
        <function-ref name="set" scoped="" ref="0x2ace72522cc0"/>
        <function-ref name="clr" scoped="" ref="0x2ace72522e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2ace7251b370" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2ace7251b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace7251b6e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ace7251b868"/>
        <function-ref name="toggle" scoped="" ref="0x2ace7251b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace7251bb78"/>
        <function-ref name="get" scoped="" ref="0x2ace7251bd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace7251a020"/>
        <function-ref name="set" scoped="" ref="0x2ace7251a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ace7251a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2ace725157c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2ace725157c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ace72515b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ace72515cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ace72515e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ace72514020"/>
        <function-ref name="get" scoped="" ref="0x2ace725141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ace72514330"/>
        <function-ref name="set" scoped="" ref="0x2ace725144b8"/>
        <function-ref name="clr" scoped="" ref="0x2ace72514640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace72a28c58" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace72a28c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72a27020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72a271a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72a27330"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72a274b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72a27640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace72a27888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace72a27888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72a27bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72a27d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72a26020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72a261a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72a26330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace72a26578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace72a26578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace72a268c8"/>
        <function-ref name="source" scoped="" ref="0x2ace72a26a50"/>
        <function-ref name="address" scoped="" ref="0x2ace72a26bd8"/>
        <function-ref name="destination" scoped="" ref="0x2ace72a26d60"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72a25020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace72a251a8"/>
        <function-ref name="type" scoped="" ref="0x2ace72a25330"/>
        <function-ref name="setType" scoped="" ref="0x2ace72a254b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72a25640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace72a257c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace72a25950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ace72a25bd8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ace72a25bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace72a24020"/>
        <function-ref name="noAck" scoped="" ref="0x2ace72a241a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace72a24330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace73498530" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace73498530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73498880"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace73498a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73498b90"/>
        <function-ref name="cancel" scoped="" ref="0x2ace73498d18"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73497020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ace734972c8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace734972c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73497618"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace734977a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73497928"/>
        <function-ref name="cancel" scoped="" ref="0x2ace73497ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73497c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ace73497e80" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace73497e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace734961f8"/>
        <function-ref name="source" scoped="" ref="0x2ace73496380"/>
        <function-ref name="address" scoped="" ref="0x2ace73496508"/>
        <function-ref name="destination" scoped="" ref="0x2ace73496690"/>
        <function-ref name="setSource" scoped="" ref="0x2ace73496818"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace734969a0"/>
        <function-ref name="type" scoped="" ref="0x2ace73496b28"/>
        <function-ref name="setType" scoped="" ref="0x2ace73496cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace73496e38"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace73495020"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace734951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace72596a70" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace72596a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72596dc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72593020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace725931a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72593330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace725934b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ace725ddbd0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace725ddbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace725dc020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace725dc1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace725dc330"/>
        <function-ref name="cancel" scoped="" ref="0x2ace725dc4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace725dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace725dee40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace725dee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace725dd1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace725dd370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace725dd4f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ace725dd680"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace725dd808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ace725da020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace725da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace725da370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace725da4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace725da680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace725da808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace725da990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2ace725dac58" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2ace725dac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace725d8020"/>
        <function-ref name="runTask" scoped="" ref="0x2ace725d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2ace725d8470" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2ace725d8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace725d87c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ace725d8948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ace725dc888" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace725dc888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace725dcbd8"/>
        <function-ref name="source" scoped="" ref="0x2ace725dcd60"/>
        <function-ref name="address" scoped="" ref="0x2ace725db020"/>
        <function-ref name="destination" scoped="" ref="0x2ace725db1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ace725db330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace725db4b8"/>
        <function-ref name="type" scoped="" ref="0x2ace725db640"/>
        <function-ref name="setType" scoped="" ref="0x2ace725db7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace725db950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace725dbad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace725dbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace725d65f8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace725d65f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace725d6948"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace725d6ad0"/>
        <function-ref name="start" scoped="" ref="0x2ace725d6c58"/>
        <function-ref name="stop" scoped="" ref="0x2ace725d6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace725d35b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace725d35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace725d3900"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace725d3a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace725d3c10"/>
        <function-ref name="cancel" scoped="" ref="0x2ace725d3d98"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace725d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace725d2d78" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace725d2d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace725d10f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace725d1278"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace725d1400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace725d1588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace725d1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2ace725f04c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2ace725f04c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2ace725f0818"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2ace725f09a0"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2ace725f0b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace725d27a0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace725d27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace725d2af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2ace725ce998" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2ace725ce998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2ace725cece8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace725f3020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace725f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace725f3370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace725f34f8"/>
        <function-ref name="led1On" scoped="" ref="0x2ace725f3680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace725f3808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace725f3990"/>
        <function-ref name="get" scoped="" ref="0x2ace725f3b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace725f3ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace725ef330"/>
        <function-ref name="set" scoped="" ref="0x2ace725f3e28"/>
        <function-ref name="led0On" scoped="" ref="0x2ace725ef020"/>
        <function-ref name="led2On" scoped="" ref="0x2ace725ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ace725cf1a0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace725cf1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace725cf4f0"/>
        <function-ref name="noAck" scoped="" ref="0x2ace725cf678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace725cf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace725d19b0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace725d19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace725d1d00"/>
        <function-ref name="source" scoped="" ref="0x2ace725d0020"/>
        <function-ref name="address" scoped="" ref="0x2ace725d01a8"/>
        <function-ref name="destination" scoped="" ref="0x2ace725d0330"/>
        <function-ref name="setSource" scoped="" ref="0x2ace725d04b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace725d0640"/>
        <function-ref name="type" scoped="" ref="0x2ace725d07c8"/>
        <function-ref name="setType" scoped="" ref="0x2ace725d0950"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace725d0ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace725d0c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace725d0de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72651308" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72651308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72651658"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace726517e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72651968"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72651af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72651c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72650020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72650020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72650370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace725ed310" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace725ed310"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace725ed680"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace725ed808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace725ed990"/>
        <function-ref name="cancel" scoped="" ref="0x2ace725edb18"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace725edca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace7262db98" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace7262db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72652020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace726521a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72652330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace726524b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72652640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace7262e060" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace7262e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace7262e3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace726505b8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace726505b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace72650908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace72650a90"/>
        <function-ref name="led1On" scoped="" ref="0x2ace72650c18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace72650da0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace7264f020"/>
        <function-ref name="get" scoped="" ref="0x2ace7264f1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace7264f330"/>
        <function-ref name="led2On" scoped="" ref="0x2ace7264f950"/>
        <function-ref name="set" scoped="" ref="0x2ace7264f640"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace7264f4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ace7264f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ace72652888" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72652888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace72652bd8"/>
        <function-ref name="noAck" scoped="" ref="0x2ace72652d60"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace72651020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace7262e618" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace7262e618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace7262e968"/>
        <function-ref name="source" scoped="" ref="0x2ace7262eaf0"/>
        <function-ref name="address" scoped="" ref="0x2ace7262ec78"/>
        <function-ref name="destination" scoped="" ref="0x2ace7262ee00"/>
        <function-ref name="setSource" scoped="" ref="0x2ace7262d020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace7262d1a8"/>
        <function-ref name="type" scoped="" ref="0x2ace7262d330"/>
        <function-ref name="setType" scoped="" ref="0x2ace7262d4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace7262d640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace7262d7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace7262d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace7264a2e8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace7264a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace7264a638"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace7264a7c0"/>
        <function-ref name="start" scoped="" ref="0x2ace7264a948"/>
        <function-ref name="stop" scoped="" ref="0x2ace7264aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ace72663520" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2ace72663520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace72663870"/>
        <function-ref name="stop" scoped="" ref="0x2ace726639f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace72648ce8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace72648ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ace724125b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace726470a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72647228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace726473b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72647538"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace726476c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace7264db88" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace7264db88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7264a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace72648270" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace72648270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ace724125b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace726485c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2ace726444f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2ace726444f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace72644840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace726465a8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace726465a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace726468f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace72646a80"/>
        <function-ref name="led1On" scoped="" ref="0x2ace72646c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace72646d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace72645020"/>
        <function-ref name="get" scoped="" ref="0x2ace726451a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace72645330"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace72645950"/>
        <function-ref name="set" scoped="" ref="0x2ace726454b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ace72645640"/>
        <function-ref name="led2On" scoped="" ref="0x2ace726457c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2ace72657448" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ace72657448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72657798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ace72657920"/>
        <function-ref name="receive" scoped="" ref="0x2ace72657aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ace72657c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ace72657db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ace72666020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace726661a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2ace72666550" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2ace72666550"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace726668a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2ace72640c50" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ace72640c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ace724125b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ace72646020"/>
        <function-ref name="offset" scoped="" ref="0x2ace726461a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ace72646330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace72829b88" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace72829b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace72856020"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace728561a8"/>
        <function-ref name="start" scoped="" ref="0x2ace72856330"/>
        <function-ref name="stop" scoped="" ref="0x2ace728564b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ace728510a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2ace728510a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728513f0"/>
        <function-ref name="stop" scoped="" ref="0x2ace72851578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace72856e78" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace72856e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ace724125b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72855218"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace728553a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72855528"/>
        <function-ref name="cancel" scoped="" ref="0x2ace728556b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72855838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace728295f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace728295f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72829940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace728567e0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace728567e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ace724125b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72856b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2ace72855a80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2ace72855a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace72855dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace72854a88" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace72854a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace72854dd8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace72852020"/>
        <function-ref name="led1On" scoped="" ref="0x2ace728521a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace72852330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace728524b8"/>
        <function-ref name="get" scoped="" ref="0x2ace72852640"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace728527c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ace72852de8"/>
        <function-ref name="set" scoped="" ref="0x2ace72852ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace72852950"/>
        <function-ref name="led0On" scoped="" ref="0x2ace72852c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2ace728517c0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ace728517c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72851b10"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ace72851c98"/>
        <function-ref name="receive" scoped="" ref="0x2ace72851e20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ace72850020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ace728501a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ace72850330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace728504b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2ace72850740" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2ace72850740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace72850a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2ace728541c0" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherCommonC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2ace728541c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ace724125b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ace72854530"/>
        <function-ref name="offset" scoped="" ref="0x2ace728546b8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ace72854840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace73539838" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace73539838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace73539b88"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace73539d10"/>
        <function-ref name="start" scoped="" ref="0x2ace73538020"/>
        <function-ref name="stop" scoped="" ref="0x2ace735381a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2ace735310a0" loc="336:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2ace735310a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace735313f0"/>
        <function-ref name="runTask" scoped="" ref="0x2ace73531578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ace735342a8" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2ace735342a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace735345f8"/>
        <function-ref name="stop" scoped="" ref="0x2ace73534780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2ace73530120" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2ace73530120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace73530470"/>
        <function-ref name="runTask" scoped="" ref="0x2ace735305f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace735392a0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace735392a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace735395f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2ace735349c8" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2ace735349c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2ace73534d18"/>
        <function-ref name="flush" scoped="" ref="0x2ace73532020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2ace73537700" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2ace73537700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace73537a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2ace735328c0" loc="346:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2ace735328c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace73532c10"/>
        <function-ref name="runTask" scoped="" ref="0x2ace73532d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2ace73537cf8" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2ace73537cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2ace735360a0"/>
        <function-ref name="resetSend" scoped="" ref="0x2ace73536228"/>
        <function-ref name="dataReceived" scoped="" ref="0x2ace735363b0"/>
        <function-ref name="resetReceive" scoped="" ref="0x2ace73536538"/>
        <function-ref name="putData" scoped="" ref="0x2ace735366c0"/>
        <function-ref name="putDone" scoped="" ref="0x2ace73536848"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2ace735369d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace73536c18" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace73536c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace73535020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace735351a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ace73535330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace735354b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace73535640"/>
        <function-ref name="get" scoped="" ref="0x2ace735357c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace73535950"/>
        <function-ref name="led0On" scoped="" ref="0x2ace73534020"/>
        <function-ref name="set" scoped="" ref="0x2ace73535c60"/>
        <function-ref name="led2On" scoped="" ref="0x2ace73535ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace73535de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2ace73531840" loc="325:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2ace73531840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace73531c90"/>
        <function-ref name="runTask" scoped="" ref="0x2ace73531e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2ace735322a8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2ace735322a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace735325f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2ace735383f0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2ace735383f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2ace73538740"/>
        <function-ref name="nextByte" scoped="" ref="0x2ace735388c8"/>
        <function-ref name="startSend" scoped="" ref="0x2ace73538a50"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2ace73538bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2ace73538e20" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ace73538e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2ace735371a8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2ace73537330"/>
        <function-ref name="endPacket" scoped="" ref="0x2ace735374b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2ace735224e0" loc="350:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2ace735224e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace73522830"/>
        <function-ref name="runTask" scoped="" ref="0x2ace735229b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace7352d6f8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace7352d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ace724125b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7352da68"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace7352dbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7352dd78"/>
        <function-ref name="cancel" scoped="" ref="0x2ace7352c020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace7352c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2ace73522c80" loc="194:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2ace73522c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace73521020"/>
        <function-ref name="runTask" scoped="" ref="0x2ace735211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace7352d020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace7352d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ace724125b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace7352d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2ace7352c3f0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2ace7352c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace7352c740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2ace7352cb48" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2ace7352cb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2ace724125b8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ace7352b020"/>
        <function-ref name="offset" scoped="" ref="0x2ace7352b1a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ace7352b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace73529e60" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace73529e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace735281e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace73528370"/>
        <function-ref name="led1On" scoped="" ref="0x2ace735284f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace73528680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace73528808"/>
        <function-ref name="get" scoped="" ref="0x2ace73528990"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace73528b18"/>
        <function-ref name="led0On" scoped="" ref="0x2ace735271a8"/>
        <function-ref name="set" scoped="" ref="0x2ace73528e28"/>
        <function-ref name="led2On" scoped="" ref="0x2ace73528ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace73527020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSerialReset" ref="0x2ace735298c8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSerialReset" scoped="" ref="0x2ace735298c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace73529c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x2ace73527538" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x2ace73527538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace73524768"/>
        <function-ref name="fired" scoped="" ref="0x2ace73526e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace73525b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace73525728"/>
        <function-ref name="getdt" scoped="" ref="0x2ace73522088"/>
        <function-ref name="gett0" scoped="" ref="0x2ace73524bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace735252d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace735260c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace73524198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace73526560"/>
        <function-ref name="stop" scoped="" ref="0x2ace73526a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2ace7352be20" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2ace7352be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2ace735291a8"/>
        <function-ref name="nextByte" scoped="" ref="0x2ace73529330"/>
        <function-ref name="startSend" scoped="" ref="0x2ace735294b8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2ace73529640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2ace7352b578" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2ace7352b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2ace7352b8c8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2ace7352ba50"/>
        <function-ref name="endPacket" scoped="" ref="0x2ace7352bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2ace7351e760" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ace7351e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7351eab0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ace7351ec38"/>
        <function-ref name="receive" scoped="" ref="0x2ace7351edc0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ace7351d020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ace7351d1a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ace7351d330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace7351d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2ace7351f6b0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2ace7351f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2ace7351fa00"/>
        <function-ref name="resetSend" scoped="" ref="0x2ace7351fb88"/>
        <function-ref name="dataReceived" scoped="" ref="0x2ace7351fd10"/>
        <function-ref name="resetReceive" scoped="" ref="0x2ace7351e020"/>
        <function-ref name="putData" scoped="" ref="0x2ace7351e1a8"/>
        <function-ref name="putDone" scoped="" ref="0x2ace7351e330"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2ace7351e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace7351d700" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace7351d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace7351da50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace7351dbd8"/>
        <function-ref name="led1On" scoped="" ref="0x2ace7351dd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace7351c020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace7351c1a8"/>
        <function-ref name="get" scoped="" ref="0x2ace7351c330"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace7351c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ace7351cad8"/>
        <function-ref name="set" scoped="" ref="0x2ace7351c7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ace7351c640"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace7351c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ace73518660" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherCommonC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ace73518660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace735148f0"/>
        <function-ref name="fired" scoped="" ref="0x2ace73515020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace73515d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace735158c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ace735131c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ace73514d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace73515470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace735171e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace73514320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace73517688"/>
        <function-ref name="stop" scoped="" ref="0x2ace73517b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2ace72847448" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2ace72847448"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2ace72847798"/>
        <function-ref name="offset" scoped="" ref="0x2ace72847920"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2ace72847aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2ace7286e968" loc="2:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace7286e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace7286ecb8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace7286ee40"/>
        <function-ref name="start" scoped="" ref="0x2ace7286d020"/>
        <function-ref name="stop" scoped="" ref="0x2ace7286d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RestartControl" ref="0x2ace7286d430" loc="3:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialRestartControlP.nc">
      <component-ref qname="SerialActiveMessageC.SR"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartControl" scoped="" ref="0x2ace7286d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RestartControl"/>
      </instance>
      <interface-functions>
        <function-ref name="restart" scoped="" ref="0x2ace7286d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Protection" ref="0x2ace7285f6b8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/DummySerialProtectorC.nc">
      <component-ref qname="SerialActiveMessageC.SerialProtectorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Protection" scoped="" ref="0x2ace7285f6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Protection"/>
      </instance>
      <interface-functions>
        <function-ref name="sendLost" scoped="" ref="0x2ace7285fa08"/>
        <function-ref name="amTypeMismatch" scoped="" ref="0x2ace7285fb90"/>
        <function-ref name="idleSendDone" scoped="" ref="0x2ace7285fd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ace72881b60" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2ace72881b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72884020"/>
        <function-ref name="receive" scoped="" ref="0x2ace728841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ace72886848" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ace72886848"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72886b98"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ace72886d20"/>
        <function-ref name="receive" scoped="" ref="0x2ace72885020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ace728851a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ace72885330"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ace728854b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72885640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2ace728844a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2ace728844a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace728847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ace72886080" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ace72886080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728863d0"/>
        <function-ref name="stop" scoped="" ref="0x2ace72886558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ace72883b90" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2ace72883b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7287d020"/>
        <function-ref name="receive" scoped="" ref="0x2ace7287d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ace7287d498" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ace7287d498"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7287d7e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ace7287d970"/>
        <function-ref name="receive" scoped="" ref="0x2ace7287daf8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ace7287dc80"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ace7287de08"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ace7287c020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace7287c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2ace7287c4a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2ace7287c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace7287c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ace7287cd68" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace7287cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2ace72048c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace7287baf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace7287a4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace7287a020"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7287a930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ace728833d8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ace728833d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace72883728"/>
        <function-ref name="stop" scoped="" ref="0x2ace728838b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2ace728c4a88" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2ace728c4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace728c4dd8"/>
        <function-ref name="receive" scoped="" ref="0x2ace728c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2ace728c18c0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2ace728c18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728c1c10"/>
        <function-ref name="stop" scoped="" ref="0x2ace728c1d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace72877d18" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72877d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace728c40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2ace728c32a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2ace728c32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace728c35f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2ace728c3780"/>
        <function-ref name="receive" scoped="" ref="0x2ace728c3908"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2ace728c3a90"/>
        <function-ref name="receiveDone" scoped="" ref="0x2ace728c3c18"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2ace728c3da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace728c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialReset" ref="0x2ace728c12a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReset" scoped="" ref="0x2ace728c12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialReset"/>
      </instance>
      <interface-functions>
        <function-ref name="txReset" scoped="" ref="0x2ace728c15f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2ace728c0840" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2ace728c0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ace728c0b90"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ace728c0d18"/>
        <function-ref name="rxDone" scoped="" ref="0x2ace728bf020"/>
        <function-ref name="txDone" scoped="" ref="0x2ace728bf1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ace728bf330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ace728bf4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ace728bf640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ace728bf7c8"/>
        <function-ref name="tx" scoped="" ref="0x2ace728bf950"/>
        <function-ref name="rx" scoped="" ref="0x2ace728bfad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ace728be020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace728be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2ace72048c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace728bed70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace728bd6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace728bd230"/>
        <function-ref name="overflow" scoped="" ref="0x2ace728bdb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ace728c4328" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ace728c4328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728c4678"/>
        <function-ref name="stop" scoped="" ref="0x2ace728c4800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2ace728c00a0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2ace728c00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728c03f0"/>
        <function-ref name="stop" scoped="" ref="0x2ace728c0578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2ace728d1158" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2ace728d1158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ace728d14a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ace728d1630"/>
        <function-ref name="rxDone" scoped="" ref="0x2ace728d17b8"/>
        <function-ref name="txDone" scoped="" ref="0x2ace728d1940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ace728d1ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ace728d1c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ace728d1dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ace728d0020"/>
        <function-ref name="tx" scoped="" ref="0x2ace728d01a8"/>
        <function-ref name="rx" scoped="" ref="0x2ace728d0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2ace72900860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2ace72900860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ace72900bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ace72900d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2ace728ff020"/>
        <function-ref name="txDone" scoped="" ref="0x2ace728ff1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ace728ff330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ace728ff4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ace728ff640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ace728ff7c8"/>
        <function-ref name="tx" scoped="" ref="0x2ace728ff950"/>
        <function-ref name="rx" scoped="" ref="0x2ace728ffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2ace728d28b8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2ace728d28b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728d2c08"/>
        <function-ref name="stop" scoped="" ref="0x2ace728d2d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2ace728d06b0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2ace728d06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728d0a00"/>
        <function-ref name="stop" scoped="" ref="0x2ace728d0b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2ace72900020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2ace72900020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace72900370"/>
        <function-ref name="stop" scoped="" ref="0x2ace729004f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2ace728d2060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2ace728d2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728d23b0"/>
        <function-ref name="stop" scoped="" ref="0x2ace728d2538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2ace728fe7f0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2ace728fe7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace728feb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2ace728fa158" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2ace728fa158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ace728fa4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ace728fa630"/>
        <function-ref name="rxDone" scoped="" ref="0x2ace728fa7b8"/>
        <function-ref name="txDone" scoped="" ref="0x2ace728fa940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ace728faac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ace728fac50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ace728fadd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ace728f9020"/>
        <function-ref name="tx" scoped="" ref="0x2ace728f91a8"/>
        <function-ref name="rx" scoped="" ref="0x2ace728f9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ace728f64d8" loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace728f64d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ace728f6828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2ace728f9688" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2ace728f9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace728f99d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2ace728f7020" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2ace728f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2ace728f7370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2ace728f74f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2ace728f7680"/>
        <function-ref name="txDone" scoped="" ref="0x2ace728f7808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2ace728f7990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2ace728f7b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2ace728f7ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2ace728f7e28"/>
        <function-ref name="tx" scoped="" ref="0x2ace728f6020"/>
        <function-ref name="rx" scoped="" ref="0x2ace728f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2ace728fb8b8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2ace728fb8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728fbc08"/>
        <function-ref name="stop" scoped="" ref="0x2ace728fbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2ace728f9d98" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2ace728f9d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728f8170"/>
        <function-ref name="stop" scoped="" ref="0x2ace728f82f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2ace728f86b8" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2ace728f86b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728f8a08"/>
        <function-ref name="stop" scoped="" ref="0x2ace728f8b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2ace728f6b48" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ace728f6b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ace728f5020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ace728f51a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ace728f5330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ace728f54b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ace728f5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2ace728f5950" loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ace728f5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ace728f5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2ace728fb020" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2ace728fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace728fb370"/>
        <function-ref name="stop" scoped="" ref="0x2ace728fb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace72959020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace72959020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2ace72048c50"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace72959d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace729586b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace72958230"/>
        <function-ref name="overflow" scoped="" ref="0x2ace72958b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace72956a98" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace72956a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2ace72045960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace72953828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace72952190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace72953cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2ace72952618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ace72979978" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ace72979978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace72974b80"/>
        <function-ref name="test" scoped="" ref="0x2ace729764a8"/>
        <function-ref name="fired" scoped="" ref="0x2ace72976020"/>
        <function-ref name="get" scoped="" ref="0x2ace72977560"/>
        <function-ref name="reset" scoped="" ref="0x2ace72976930"/>
        <function-ref name="getMode" scoped="" ref="0x2ace72973088"/>
        <function-ref name="isOn" scoped="" ref="0x2ace729746f8"/>
        <function-ref name="set" scoped="" ref="0x2ace729779e8"/>
        <function-ref name="start" scoped="" ref="0x2ace72976db8"/>
        <function-ref name="stop" scoped="" ref="0x2ace72974270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace72951638" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace72951638"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7297f798"/>
        <function-ref name="test" scoped="" ref="0x2ace7294c088"/>
        <function-ref name="get" scoped="" ref="0x2ace7294e220"/>
        <function-ref name="reset" scoped="" ref="0x2ace7294c510"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7297fc70"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7294eb80"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7297f310"/>
        <function-ref name="set" scoped="" ref="0x2ace7294e6a8"/>
        <function-ref name="start" scoped="" ref="0x2ace7294c998"/>
        <function-ref name="stop" scoped="" ref="0x2ace7294ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ace7297e840" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ace7297e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7297a930"/>
        <function-ref name="test" scoped="" ref="0x2ace7297b230"/>
        <function-ref name="fired" scoped="" ref="0x2ace7297dd70"/>
        <function-ref name="force" scoped="" ref="0x2ace72979310"/>
        <function-ref name="get" scoped="" ref="0x2ace7297d410"/>
        <function-ref name="reset" scoped="" ref="0x2ace7297b6b8"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7297ae08"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7297a4a8"/>
        <function-ref name="set" scoped="" ref="0x2ace7297d898"/>
        <function-ref name="start" scoped="" ref="0x2ace7297bb40"/>
        <function-ref name="stop" scoped="" ref="0x2ace7297a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2ace7296b118" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2ace7296b118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace72967270"/>
        <function-ref name="test" scoped="" ref="0x2ace7296aab0"/>
        <function-ref name="fired" scoped="" ref="0x2ace7296a628"/>
        <function-ref name="force" scoped="" ref="0x2ace72967bd0"/>
        <function-ref name="get" scoped="" ref="0x2ace7296bc98"/>
        <function-ref name="reset" scoped="" ref="0x2ace72968020"/>
        <function-ref name="getMode" scoped="" ref="0x2ace72967748"/>
        <function-ref name="isOn" scoped="" ref="0x2ace72968db8"/>
        <function-ref name="set" scoped="" ref="0x2ace7296a150"/>
        <function-ref name="start" scoped="" ref="0x2ace729684a8"/>
        <function-ref name="stop" scoped="" ref="0x2ace72968930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ace7298f688" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ace7298f688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7298b798"/>
        <function-ref name="test" scoped="" ref="0x2ace7298d088"/>
        <function-ref name="fired" scoped="" ref="0x2ace7298eb90"/>
        <function-ref name="get" scoped="" ref="0x2ace7298e230"/>
        <function-ref name="reset" scoped="" ref="0x2ace7298d510"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7298bc70"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7298b310"/>
        <function-ref name="set" scoped="" ref="0x2ace7298e6b8"/>
        <function-ref name="start" scoped="" ref="0x2ace7298d998"/>
        <function-ref name="stop" scoped="" ref="0x2ace7298de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ace7298a168" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace7298a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ace7298a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2ace72966278" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2ace72966278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace72996310"/>
        <function-ref name="test" scoped="" ref="0x2ace72998c10"/>
        <function-ref name="fired" scoped="" ref="0x2ace72998788"/>
        <function-ref name="force" scoped="" ref="0x2ace72996c70"/>
        <function-ref name="get" scoped="" ref="0x2ace72966df8"/>
        <function-ref name="reset" scoped="" ref="0x2ace729970c0"/>
        <function-ref name="getMode" scoped="" ref="0x2ace729967e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ace72997e58"/>
        <function-ref name="set" scoped="" ref="0x2ace729982b0"/>
        <function-ref name="start" scoped="" ref="0x2ace72997548"/>
        <function-ref name="stop" scoped="" ref="0x2ace729979d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2ace7298a828" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ace7298a828"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ace7298ab78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2ace72994360" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2ace72994360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace72991580"/>
        <function-ref name="test" scoped="" ref="0x2ace72993e08"/>
        <function-ref name="fired" scoped="" ref="0x2ace72993980"/>
        <function-ref name="force" scoped="" ref="0x2ace7298f020"/>
        <function-ref name="get" scoped="" ref="0x2ace72993020"/>
        <function-ref name="reset" scoped="" ref="0x2ace72992310"/>
        <function-ref name="getMode" scoped="" ref="0x2ace72991a58"/>
        <function-ref name="isOn" scoped="" ref="0x2ace729910f8"/>
        <function-ref name="set" scoped="" ref="0x2ace729934a8"/>
        <function-ref name="start" scoped="" ref="0x2ace72992798"/>
        <function-ref name="stop" scoped="" ref="0x2ace72992c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ace729703c0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ace729703c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7296c580"/>
        <function-ref name="test" scoped="" ref="0x2ace7296fe08"/>
        <function-ref name="get" scoped="" ref="0x2ace7296f020"/>
        <function-ref name="reset" scoped="" ref="0x2ace7296d310"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7296ca58"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7296f980"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7296c0f8"/>
        <function-ref name="set" scoped="" ref="0x2ace7296f4a8"/>
        <function-ref name="start" scoped="" ref="0x2ace7296d798"/>
        <function-ref name="stop" scoped="" ref="0x2ace7296dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace72a105a8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace72a105a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2ace72045960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace72a0f3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace72a0fcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace72a0f830"/>
        <function-ref name="overflow" scoped="" ref="0x2ace72a0d190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace72a0d6d0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace72a0d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace72a09930"/>
        <function-ref name="test" scoped="" ref="0x2ace72a0b1f8"/>
        <function-ref name="get" scoped="" ref="0x2ace72a0c3a8"/>
        <function-ref name="reset" scoped="" ref="0x2ace72a0b680"/>
        <function-ref name="getMode" scoped="" ref="0x2ace72a09e08"/>
        <function-ref name="overflow" scoped="" ref="0x2ace72a0cd08"/>
        <function-ref name="isOn" scoped="" ref="0x2ace72a094a8"/>
        <function-ref name="set" scoped="" ref="0x2ace72a0c830"/>
        <function-ref name="start" scoped="" ref="0x2ace72a0bb08"/>
        <function-ref name="stop" scoped="" ref="0x2ace72a09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace73659770" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace73659770"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace73659ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace73658020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace73658020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2ace72045960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace73658d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace736566b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace73656230"/>
        <function-ref name="overflow" scoped="" ref="0x2ace73656b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace73655128" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace73655128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace73651270"/>
        <function-ref name="test" scoped="" ref="0x2ace73654af0"/>
        <function-ref name="get" scoped="" ref="0x2ace73655ca8"/>
        <function-ref name="reset" scoped="" ref="0x2ace73652020"/>
        <function-ref name="getMode" scoped="" ref="0x2ace73651748"/>
        <function-ref name="overflow" scoped="" ref="0x2ace73654668"/>
        <function-ref name="isOn" scoped="" ref="0x2ace73652db8"/>
        <function-ref name="set" scoped="" ref="0x2ace73654190"/>
        <function-ref name="start" scoped="" ref="0x2ace736524a8"/>
        <function-ref name="stop" scoped="" ref="0x2ace73652930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ace72a38450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2ace72a38450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2ace72045960"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace72a361d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace72a36ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace72a36658"/>
        <function-ref name="overflow" scoped="" ref="0x2ace72a35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ace72a04270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace72a04270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMcu" ref="0x2ace72045960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace72a39020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace72a39930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace72a394a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ace72a39db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2ace72a21748" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ace72a21748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2ace72a6b4d8"/>
        <function-ref name="enqueue" scoped="" ref="0x2ace72a69240"/>
        <function-ref name="element" scoped="" ref="0x2ace72a69870"/>
        <function-ref name="full" scoped="" ref="0x2ace72a6c7c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2ace72a6b088"/>
        <function-ref name="dequeue" scoped="" ref="0x2ace72a6bb38"/>
        <function-ref name="empty" scoped="" ref="0x2ace72a6c370"/>
        <function-ref name="size" scoped="" ref="0x2ace72a6cc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ace72a640f8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ace72a640f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2ace72a61db0"/>
        <function-ref name="enqueue" scoped="" ref="0x2ace72a60aa8"/>
        <function-ref name="element" scoped="" ref="0x2ace72a5f118"/>
        <function-ref name="full" scoped="" ref="0x2ace72a610c0"/>
        <function-ref name="maxSize" scoped="" ref="0x2ace72a61960"/>
        <function-ref name="dequeue" scoped="" ref="0x2ace72a60448"/>
        <function-ref name="empty" scoped="" ref="0x2ace72a64c40"/>
        <function-ref name="size" scoped="" ref="0x2ace72a61510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ace72a5f790" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace72a5f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72a5fae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72a5fc68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72a5fdf0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72a5d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72a5d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ace72a5d430" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace72a5d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72a5d780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72a5d908"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72a5da90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72a5dc18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72a5dda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2ace72a584d8" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2ace72a584d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace72a58828"/>
        <function-ref name="runTask" scoped="" ref="0x2ace72a589b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace72a652d0" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72a652d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72a65620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ace72a5c080" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ace72a5c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ace72a5c3d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ace72a5c558"/>
        <function-ref name="led1On" scoped="" ref="0x2ace72a5c6e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ace72a5c868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ace72a5c9f0"/>
        <function-ref name="get" scoped="" ref="0x2ace72a5cb78"/>
        <function-ref name="led1Off" scoped="" ref="0x2ace72a5cd00"/>
        <function-ref name="led2Off" scoped="" ref="0x2ace72a5b4b8"/>
        <function-ref name="set" scoped="" ref="0x2ace72a5b020"/>
        <function-ref name="led0On" scoped="" ref="0x2ace72a5b1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2ace72a5b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2ace72a62898" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2ace72a62898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2ace72a62be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2ace72a7ae58" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2ace72a7ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2ace72a771e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace72a71888" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72a71888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72a71bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2ace72aa8020" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2ace72aa8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2ace72aa8370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ace72a9f020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ace72a9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ace72a9f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2ace72a9f700" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2ace72a9f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace72a9fa50"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace72a9fbd8"/>
        <function-ref name="start" scoped="" ref="0x2ace72a9fd60"/>
        <function-ref name="stop" scoped="" ref="0x2ace72a9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ace72aa2c48" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="TestUsbStationAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ace72aa2c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace72a97e78"/>
        <function-ref name="fired" scoped="" ref="0x2ace72a995a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ace72a972d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ace72a99e48"/>
        <function-ref name="getdt" scoped="" ref="0x2ace72a96748"/>
        <function-ref name="gett0" scoped="" ref="0x2ace72a962f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace72a999f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ace72aa07e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ace72a978a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ace72aa0c88"/>
        <function-ref name="stop" scoped="" ref="0x2ace72a99158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace72a95e18" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace72a95e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace72a921a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace72a92330"/>
        <function-ref name="start" scoped="" ref="0x2ace72a924b8"/>
        <function-ref name="stop" scoped="" ref="0x2ace72a92640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2ace72ac1a80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2ace72ac1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2ace72ac1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ace72ac41c8" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ace72ac41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ace72ac4518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace72ac47a0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace72ac47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72ac4af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72ac4c78"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72ac4e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72ac2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72ac21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace72a92db8" loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace72a92db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72a91170"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72a912f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72a91480"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72a91608"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72a91790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ace72a8fb68" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ace72a8fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72a8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ace72ab41d8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72ab41d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ace72ab4528"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ace72ab46b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ace72ab4838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ace72ab49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace72a8f020" loc="33:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace72a8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72a8f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2ace72aad020" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace72aad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace72ade478"/>
        <function-ref name="clear" scoped="" ref="0x2ace72adeb58"/>
        <function-ref name="isValid" scoped="" ref="0x2ace72aadd70"/>
        <function-ref name="set" scoped="" ref="0x2ace72add278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ace72abeaf0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72abeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace72abee40"/>
        <function-ref name="noAck" scoped="" ref="0x2ace72abd020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace72abd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ace72abc020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ace72abc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ace72abc370"/>
        <function-ref name="setRetries" scoped="" ref="0x2ace72abc4f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ace72abc680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ace72abc808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ace72abc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace72ac2448" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace72ac2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace72ac2798"/>
        <function-ref name="source" scoped="" ref="0x2ace72ac2920"/>
        <function-ref name="address" scoped="" ref="0x2ace72ac2aa8"/>
        <function-ref name="destination" scoped="" ref="0x2ace72ac2c30"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72ac2db8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace72abe020"/>
        <function-ref name="type" scoped="" ref="0x2ace72abe1a8"/>
        <function-ref name="setType" scoped="" ref="0x2ace72abe330"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72abe4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace72abe640"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace72abe7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ace72adde48" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace72adde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace72ada420"/>
        <function-ref name="clear" scoped="" ref="0x2ace72adab00"/>
        <function-ref name="isValid" scoped="" ref="0x2ace72adcce8"/>
        <function-ref name="set" scoped="" ref="0x2ace72ad9278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace72ad8440" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace72ad8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace72ad8790"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace72ad8918"/>
        <function-ref name="start" scoped="" ref="0x2ace72ad8aa0"/>
        <function-ref name="stop" scoped="" ref="0x2ace72ad8c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2ace72afd020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2ace72afd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72afb608"/>
        <function-ref name="get" scoped="" ref="0x2ace72afb0f8"/>
        <function-ref name="isSet" scoped="" ref="0x2ace72afdba0"/>
        <function-ref name="set" scoped="" ref="0x2ace72afbb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ace72af1758" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace72af1758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace72af0c58"/>
        <function-ref name="clear" scoped="" ref="0x2ace72aee380"/>
        <function-ref name="isValid" scoped="" ref="0x2ace72af0578"/>
        <function-ref name="set" scoped="" ref="0x2ace72aeea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2ace72ad2c88" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2ace72ad2c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2ace72ad1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ace72ad17d8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ace72ad17d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ace72ad1b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace72acf5f8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace72acf5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72acf948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72acfad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72acfc58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72acfde0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72ace020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace72ad53c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace72ad53c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72ad5718"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72ad58a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72ad5a28"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72ad5bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72ad5d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ace72ad21c8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ace72ad21c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72ad2518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2ace72ac7bd8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace72ac7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72afe208"/>
        <function-ref name="get" scoped="" ref="0x2ace72ac5cb0"/>
        <function-ref name="isSet" scoped="" ref="0x2ace72ac57a0"/>
        <function-ref name="set" scoped="" ref="0x2ace72afe718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ace72acc318" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72acc318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ace72acc668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ace72acc7f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ace72acc978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ace72accb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace72ad34e8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace72ad34e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72ad3838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2ace72af8848" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace72af8848"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace72af5cc0"/>
        <function-ref name="clear" scoped="" ref="0x2ace72af2420"/>
        <function-ref name="isValid" scoped="" ref="0x2ace72af55e0"/>
        <function-ref name="set" scoped="" ref="0x2ace72af2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2ace72af4430" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace72af4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace72af8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2ace72ac9828" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace72ac9828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72ac8e30"/>
        <function-ref name="get" scoped="" ref="0x2ace72ac8920"/>
        <function-ref name="isSet" scoped="" ref="0x2ace72ac8410"/>
        <function-ref name="set" scoped="" ref="0x2ace72ac7388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ace72acd968" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72acd968"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace72acdcb8"/>
        <function-ref name="noAck" scoped="" ref="0x2ace72acde40"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace72acc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2ace72ad03c8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace72ad03c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72ad0718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ace72accdb0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ace72accdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ace72aca2e8"/>
        <function-ref name="setRetries" scoped="" ref="0x2ace72aca470"/>
        <function-ref name="getRetries" scoped="" ref="0x2ace72aca5f8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ace72aca780"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ace72aca908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace72ace2c0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace72ace2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace72ace610"/>
        <function-ref name="source" scoped="" ref="0x2ace72ace798"/>
        <function-ref name="address" scoped="" ref="0x2ace72ace920"/>
        <function-ref name="destination" scoped="" ref="0x2ace72aceaa8"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72acec30"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace72acedb8"/>
        <function-ref name="type" scoped="" ref="0x2ace72acd020"/>
        <function-ref name="setType" scoped="" ref="0x2ace72acd1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72acd330"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace72acd4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace72acd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2ace72acabd0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2ace72acabd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2ace72ac9020"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace72ac91a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace72ac9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ace72af6808" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace72af6808"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ace72af6b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2ace72acf020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2ace72acf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72acf370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace72aedb78" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace72aedb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace72aea020"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace72aea1a8"/>
        <function-ref name="start" scoped="" ref="0x2ace72aea330"/>
        <function-ref name="stop" scoped="" ref="0x2ace72aea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2ace72b29370" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace72b29370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2ace72b298c0"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2ace72b29a48"/>
        <function-ref name="txModeSet" scoped="" ref="0x2ace72b29bd0"/>
        <function-ref name="txModeGet" scoped="" ref="0x2ace72b29d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2ace72b34600" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2ace72b34600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72b33bf0"/>
        <function-ref name="get" scoped="" ref="0x2ace72b336e0"/>
        <function-ref name="isSet" scoped="" ref="0x2ace72b331d0"/>
        <function-ref name="set" scoped="" ref="0x2ace72b32130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2ace72b19218" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2ace72b19218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ace72b19668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2ace72b12208" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2ace72b12208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ace72b12558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ace72b126e0"/>
        <function-ref name="request" scoped="" ref="0x2ace72b12868"/>
        <function-ref name="granted" scoped="" ref="0x2ace72b129f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ace72b12b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2ace72ae6498" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2ace72ae6498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2ace72ae67e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ace72ae5020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ace72ae5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ace72ae5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace72aeac30" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace72aeac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72ae9020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72ae91a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72ae9330"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72ae94b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72ae9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ace72ae7968" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ace72ae7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72ae7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2ace72b0c020" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2ace72b0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2ace72b0c370"/>
        <function-ref name="address" scoped="" ref="0x2ace72b0c4f8"/>
        <function-ref name="destination" scoped="" ref="0x2ace72b0c680"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72b0c808"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace72b0c990"/>
        <function-ref name="pan" scoped="" ref="0x2ace72b0cb18"/>
        <function-ref name="setPan" scoped="" ref="0x2ace72b0cca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72b0ce28"/>
        <function-ref name="localPan" scoped="" ref="0x2ace72b0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2ace72b0b3d0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2ace72b0b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72b0b720"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72b0b8a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72b0ba30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72b0bbb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72b0bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2ace72b372d0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace72b372d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72b36898"/>
        <function-ref name="get" scoped="" ref="0x2ace72b36388"/>
        <function-ref name="isSet" scoped="" ref="0x2ace72b37e50"/>
        <function-ref name="set" scoped="" ref="0x2ace72b36da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ace72b03a18" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72b03a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ace72b03d68"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ace72b02020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ace72b021a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ace72b02330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2ace72b32948" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2ace72b32948"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72b2f020"/>
        <function-ref name="get" scoped="" ref="0x2ace72b30a70"/>
        <function-ref name="isSet" scoped="" ref="0x2ace72b30560"/>
        <function-ref name="set" scoped="" ref="0x2ace72b2f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2ace72ae2550" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2ace72ae2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72ae28a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72ae2a28"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72ae2bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72ae2d38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72b1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace72ae9dc0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace72ae9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72ae7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2ace72b2ccb8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace72b2ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace72b26150"/>
        <function-ref name="clear" scoped="" ref="0x2ace72b26830"/>
        <function-ref name="isValid" scoped="" ref="0x2ace72b27a40"/>
        <function-ref name="set" scoped="" ref="0x2ace72b25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2ace72b2d890" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace72b2d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace72b2c490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2ace72b01e40" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace72b01e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72aff530"/>
        <function-ref name="get" scoped="" ref="0x2ace72aff020"/>
        <function-ref name="isSet" scoped="" ref="0x2ace72b00a18"/>
        <function-ref name="set" scoped="" ref="0x2ace72affa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ace72b030c0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72b030c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace72b03410"/>
        <function-ref name="noAck" scoped="" ref="0x2ace72b03598"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace72b03720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2ace72b14d80" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2ace72b14d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72b1a170"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72b1a2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72b1a480"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72b1a608"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72b1a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2ace72ae5be0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace72ae5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72ae4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ace72b025e0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ace72b025e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ace72b02930"/>
        <function-ref name="setRetries" scoped="" ref="0x2ace72b02ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ace72b02c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ace72b02dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ace72b01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2ace72b012e8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2ace72b012e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2ace72b01638"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace72b017c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace72b01948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace72ae4e50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace72ae4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace72ae31e8"/>
        <function-ref name="source" scoped="" ref="0x2ace72ae3370"/>
        <function-ref name="address" scoped="" ref="0x2ace72ae34f8"/>
        <function-ref name="destination" scoped="" ref="0x2ace72ae3680"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72ae3808"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace72ae3990"/>
        <function-ref name="type" scoped="" ref="0x2ace72ae3b18"/>
        <function-ref name="setType" scoped="" ref="0x2ace72ae3ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72ae3e28"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace72ae2020"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace72ae21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ace72b25bf0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace72b25bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace72b22088"/>
        <function-ref name="clear" scoped="" ref="0x2ace72b22768"/>
        <function-ref name="isValid" scoped="" ref="0x2ace72b23970"/>
        <function-ref name="set" scoped="" ref="0x2ace72b22e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2ace72b1aaf0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2ace72b1aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72b1ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ace72b2d080" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace72b2d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ace72b2d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2ace72ae4860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2ace72ae4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72ae4bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2ace72b76998" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace72b76998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2ace72b76ce8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2ace72b76e70"/>
        <function-ref name="txModeSet" scoped="" ref="0x2ace72b74020"/>
        <function-ref name="txModeGet" scoped="" ref="0x2ace72b741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2ace72b658e0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2ace72b658e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ace72b65c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2ace72b3d730" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2ace72b3d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2ace72b3da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2ace72b68da8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2ace72b68da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace72b73170"/>
        <function-ref name="checkFrame" scoped="" ref="0x2ace72b732f8"/>
        <function-ref name="source" scoped="" ref="0x2ace72b73480"/>
        <function-ref name="destination" scoped="" ref="0x2ace72b73608"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72b73790"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace72b73918"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace72b73aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2ace72b6fc60" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2ace72b6fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2ace72b3c020"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2ace72b3c1a8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2ace72b3c330"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2ace72b3c4b8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2ace72b3c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2ace72b82640" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72b82640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ace72b82990"/>
        <function-ref name="wait" scoped="" ref="0x2ace72b82b18"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72b82ca0"/>
        <function-ref name="isFree" scoped="" ref="0x2ace72b82e28"/>
        <function-ref name="getNow" scoped="" ref="0x2ace72b86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ace72b858b8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ace72b858b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace72b81e10"/>
        <function-ref name="clear" scoped="" ref="0x2ace72b7a558"/>
        <function-ref name="isValid" scoped="" ref="0x2ace72b81730"/>
        <function-ref name="set" scoped="" ref="0x2ace72b7ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2ace72b3e1b8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2ace72b3e1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2ace72b3e508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2ace72b45618" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2ace72b45618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2ace72b45968"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2ace72b45af0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ace72b45c78"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2ace72b45e00"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2ace72b55020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2ace72b551a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ace72b55330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ace72b554b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2ace72b89858" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace72b89858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2ace72b89ba8"/>
        <function-ref name="getDSN" scoped="" ref="0x2ace72b89d30"/>
        <function-ref name="setFCF" scoped="" ref="0x2ace72b66020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2ace72b661a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2ace72b66330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2ace72b664b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2ace72b66640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2ace72b667c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2ace72b66950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2ace72b66ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2ace72b66c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2ace72b66de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2ace72b64020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ace72b642a8"/>
        <function-ref name="localPan" scoped="" ref="0x2ace72b64430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2ace72b645b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2ace72b64740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2ace72b648c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2ace72b64a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72b64bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ace72b64d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2ace72b87020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ace72b871a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2ace72b87330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2ace72b874b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2ace72b78698" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2ace72b78698"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72b77dc8"/>
        <function-ref name="get" scoped="" ref="0x2ace72b778b8"/>
        <function-ref name="isSet" scoped="" ref="0x2ace72b773a8"/>
        <function-ref name="set" scoped="" ref="0x2ace72b76328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2ace72b416c0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2ace72b416c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ace72b41a10"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2ace72b41b98"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ace72b41d20"/>
        <function-ref name="getSender" scoped="" ref="0x2ace72b4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2ace72b39af8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2ace72b39af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2ace72b39e48"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2ace72b3f020"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2ace72b3f1a8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2ace72b3f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2ace72b7c810" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2ace72b7c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72b7cb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72b7cce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72b7ce70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72b85020"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72b851a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72b85330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x2ace72b4e630" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2ace72b4e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ace72b4e980"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ace72b4eb08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72b4ec90"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2ace72b4ee18"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72b1d020"/>
        <function-ref name="setAck" scoped="" ref="0x2ace72b1d1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72b1d330"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2ace72b1d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2ace72c0b2e8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72c0b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ace72c0b658"/>
        <function-ref name="wait" scoped="" ref="0x2ace72c0b7e0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72c0b968"/>
        <function-ref name="isFree" scoped="" ref="0x2ace72c0baf0"/>
        <function-ref name="getNow" scoped="" ref="0x2ace72c0bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ace72c122d0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace72c122d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2ace723d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace72c0f928"/>
        <function-ref name="fired" scoped="" ref="0x2ace72c119e8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace72c0f320"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace72c11e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace72c0fdb0"/>
        <function-ref name="start" scoped="" ref="0x2ace72c11088"/>
        <function-ref name="stop" scoped="" ref="0x2ace72c11560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2ace73672aa8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ace73672aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ace73672e18"/>
        <function-ref name="wait" scoped="" ref="0x2ace73671020"/>
        <function-ref name="cancel" scoped="" ref="0x2ace736711a8"/>
        <function-ref name="isFree" scoped="" ref="0x2ace73671330"/>
        <function-ref name="getNow" scoped="" ref="0x2ace736714b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ace73671970" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace73671970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2ace723d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace736e7020"/>
        <function-ref name="fired" scoped="" ref="0x2ace736e80c0"/>
        <function-ref name="startAt" scoped="" ref="0x2ace736e89d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace736e8548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace736e74a8"/>
        <function-ref name="start" scoped="" ref="0x2ace736e9730"/>
        <function-ref name="stop" scoped="" ref="0x2ace736e9c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2ace736e7880" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2ace736e7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2ace736e7bd0"/>
        <function-ref name="suspend" scoped="" ref="0x2ace736e7d58"/>
        <function-ref name="resume" scoped="" ref="0x2ace736e5020"/>
        <function-ref name="run" scoped="" ref="0x2ace736e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2ace72c1fc30" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2ace72c1fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2ace72c1c020"/>
        <function-ref name="suspend" scoped="" ref="0x2ace72c1c1a8"/>
        <function-ref name="resume" scoped="" ref="0x2ace72c1c330"/>
        <function-ref name="run" scoped="" ref="0x2ace72c1c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72cd3430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72cd3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72cd3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72cd4a50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72cd4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72cd4da0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72cd3020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72cd31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2ace72cd7020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2ace72cd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2ace72cd7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ace72cd76f8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ace72cd76f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ace72cd7a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace72cda578" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace72cda578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72cda8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72cdaa50"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72cdabd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72cdad60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72cd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace72cd9388" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace72cd9388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72cd96f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72cd9880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72cd9a08"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72cd9b90"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72cd9d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ace72cd87e0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ace72cd87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72cd8b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace72cd3a08" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace72cd3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace72cd3e58"/>
        <function-ref name="checkFrame" scoped="" ref="0x2ace72cd2020"/>
        <function-ref name="source" scoped="" ref="0x2ace72cd21a8"/>
        <function-ref name="destination" scoped="" ref="0x2ace72cd2330"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72cd24b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace72cd2640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace72cd27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace72cd6ba8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace72cd6ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72cd4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72cd41a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72cd4330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72cd44b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72cd4640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72cd47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace72cd80c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace72cd80c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72cd8438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2ace72cd7e10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace72cd7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72cd61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace72cdb020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace72cdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace72cdb370"/>
        <function-ref name="source" scoped="" ref="0x2ace72cdb4f8"/>
        <function-ref name="address" scoped="" ref="0x2ace72cdb680"/>
        <function-ref name="destination" scoped="" ref="0x2ace72cdb808"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72cdb990"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace72cdbb18"/>
        <function-ref name="type" scoped="" ref="0x2ace72cdbca0"/>
        <function-ref name="setType" scoped="" ref="0x2ace72cdbe28"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72cda020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace72cda1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace72cda330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2ace72cd6550" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2ace72cd6550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72cd68c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace736c6708" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace736c6708"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace736c6b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace736c7da0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace736c7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace736c6170"/>
        <function-ref name="cancel" scoped="" ref="0x2ace736c62f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace736c6480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2ace736ca388" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2ace736ca388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2ace736ca6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ace736caa60" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ace736caa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ace736cadd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace736cd888" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace736cd888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace736cdbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace736cdd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace736cc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace736cc1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace736cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace736cc698" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace736cc698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace736cca08"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace736ccb90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace736ccd18"/>
        <function-ref name="cancel" scoped="" ref="0x2ace736cb020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace736cb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ace736cbc28" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ace736cbc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace736ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace736cf438" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace736cf438"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace736cf788"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace736cf910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace736cfa98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace736cfc20"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace736cfda8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace736ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace736c6de0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace736c6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace736c5170"/>
        <function-ref name="checkFrame" scoped="" ref="0x2ace736c52f8"/>
        <function-ref name="source" scoped="" ref="0x2ace736c5480"/>
        <function-ref name="destination" scoped="" ref="0x2ace736c5608"/>
        <function-ref name="setSource" scoped="" ref="0x2ace736c5790"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace736c5918"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace736c5aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ace736c5ce8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ace736c5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ace736c40a0"/>
        <function-ref name="changed" scoped="" ref="0x2ace736c4228"/>
        <function-ref name="amGroup" scoped="" ref="0x2ace736c43b0"/>
        <function-ref name="setAddress" scoped="" ref="0x2ace736c4538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace736c7020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace736c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace736c7370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace736c74f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace736c7680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace736c7808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace736c7990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace736c7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace736cb510" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace736cb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace736cb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2ace736c81c0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2ace736c81c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace736c8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace736ce268" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace736ce268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace736ce5b8"/>
        <function-ref name="source" scoped="" ref="0x2ace736ce740"/>
        <function-ref name="address" scoped="" ref="0x2ace736ce8c8"/>
        <function-ref name="destination" scoped="" ref="0x2ace736cea50"/>
        <function-ref name="setSource" scoped="" ref="0x2ace736cebd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace736ced60"/>
        <function-ref name="type" scoped="" ref="0x2ace736cd020"/>
        <function-ref name="setType" scoped="" ref="0x2ace736cd1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace736cd330"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace736cd4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace736cd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2ace736c88d8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2ace736c88d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace736c8c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2ace72cb54d8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ace72cb54d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ace72cb5828"/>
        <function-ref name="changed" scoped="" ref="0x2ace72cb59b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ace72cb5b38"/>
        <function-ref name="setAddress" scoped="" ref="0x2ace72cb5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72ccb618" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72ccb618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72ccb968"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72ccbaf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72ccbc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ace72cfe020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ace72cfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ace72cfe370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ace72cfe4f8"/>
        <function-ref name="request" scoped="" ref="0x2ace72cfe680"/>
        <function-ref name="granted" scoped="" ref="0x2ace72cfe808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ace72cfe990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ace72cccb40" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2ace72cccb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72ccb020"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72ccb1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72ccb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ace72d63510" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ace72d63510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ace72d63880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ace72d63a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ace72d62550" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ace72d62550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ace72d628c0"/>
        <function-ref name="configure" scoped="" ref="0x2ace72d62a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ace72d64748" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ace72d64748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ace72d64ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ace72d64c40"/>
        <function-ref name="request" scoped="" ref="0x2ace72d64dc8"/>
        <function-ref name="granted" scoped="" ref="0x2ace72d63020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ace72d631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ace72d63c50" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ace72d63c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ace72d62020"/>
        <function-ref name="userId" scoped="" ref="0x2ace72d621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace73745aa0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace73745aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace73745df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ace737440a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2ace737440a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ace737443f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ace73744578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ace73744700"/>
        <function-ref name="dequeue" scoped="" ref="0x2ace73744888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ace73741af8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ace73741af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ace73741e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ace73740020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ace73740b08" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ace73740b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ace73740e78"/>
        <function-ref name="configure" scoped="" ref="0x2ace7373f030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ace7373f2b8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ace7373f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ace7373f608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ace7373f790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ace7373f918"/>
        <function-ref name="dequeue" scoped="" ref="0x2ace7373faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ace73743dd8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ace73743dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ace73741170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ace737412f8"/>
        <function-ref name="request" scoped="" ref="0x2ace73741480"/>
        <function-ref name="granted" scoped="" ref="0x2ace73741608"/>
        <function-ref name="isOwner" scoped="" ref="0x2ace73741790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ace73740268" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ace73740268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ace737405b8"/>
        <function-ref name="userId" scoped="" ref="0x2ace73740740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ace7373fd68" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ace7373fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace7373e0f0"/>
        <function-ref name="runTask" scoped="" ref="0x2ace7373e278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72db30a0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72db30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72db33f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72db3578"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72db3700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72db3988" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72db3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72db3cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ace72d74b50" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ace72d74b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ace72d73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace72d5fb38" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace72d5fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72d76020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72d761a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72d76330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72d764b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72d76640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2ace72d702e0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace72d702e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72d70630"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72d707b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72d70940"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72d70ac8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72d70c50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72d70dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2ace72d732c8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace72d732c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2ace72d73618"/>
        <function-ref name="getDSN" scoped="" ref="0x2ace72d737a0"/>
        <function-ref name="setFCF" scoped="" ref="0x2ace72d73928"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2ace72d73ab0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2ace72d73c38"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2ace72d73dc0"/>
        <function-ref name="setDSN" scoped="" ref="0x2ace72d72020"/>
        <function-ref name="createAckReply" scoped="" ref="0x2ace72d721a8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2ace72d72330"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2ace72d724b8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2ace72d72640"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2ace72d727c8"/>
        <function-ref name="localAddr" scoped="" ref="0x2ace72d72950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ace72d72bd8"/>
        <function-ref name="localPan" scoped="" ref="0x2ace72d72d60"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2ace72d71020"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2ace72d711a8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2ace72d71330"/>
        <function-ref name="setDestPan" scoped="" ref="0x2ace72d714b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72d71640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ace72d717c8"/>
        <function-ref name="getFCF" scoped="" ref="0x2ace72d71950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ace72d71ad8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2ace72d71c60"/>
        <function-ref name="getFramePending" scoped="" ref="0x2ace72d71de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2ace72d76888" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2ace72d76888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72d76bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace72d76d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72d74020"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72d741a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72d74330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2ace72d745b8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2ace72d745b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72d74908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72dbd928" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72dbd928"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72dbdc78"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72dbde00"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72dbc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72dbc2a8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72dbc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72dbc5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2ace72dc0c10" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2ace72dc0c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72dbf020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72dbf1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72dbf330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72dbf4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72dbf640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72dbf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2ace72dbe430" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2ace72dbe430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72dbe780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace72dbc880" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace72dbc880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72dbcbd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72dbcd58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72dba020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72dba1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72dba330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72dba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2ace72dbfa50" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2ace72dbfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72dbfda0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72dbe020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72dbe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2ace72dacd20" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2ace72dacd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72dc00a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72dc0228"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72dc03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2ace72dc0638" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2ace72dc0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72dc0988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2ace72dbea08" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2ace72dbea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72dbed58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72dbd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72dbd1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72dbd330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72dbd4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72dbd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2ace72e43900" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2ace72e43900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2ace72e43c50"/>
        <function-ref name="address" scoped="" ref="0x2ace72e43dd8"/>
        <function-ref name="destination" scoped="" ref="0x2ace72e42020"/>
        <function-ref name="setSource" scoped="" ref="0x2ace72e421a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace72e42330"/>
        <function-ref name="pan" scoped="" ref="0x2ace72e424b8"/>
        <function-ref name="setPan" scoped="" ref="0x2ace72e42640"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72e427c8"/>
        <function-ref name="localPan" scoped="" ref="0x2ace72e42950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace72e42b98" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace72e42b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72e41020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72e411a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72e41330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72e414b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72e41640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72e417c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2ace72e46980" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace72e46980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2ace72e46cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2ace72e46e58"/>
        <function-ref name="setFCF" scoped="" ref="0x2ace72e45020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2ace72e451a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2ace72e45330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2ace72e454b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2ace72e45640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2ace72e457c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2ace72e45950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2ace72e45ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2ace72e45c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2ace72e45de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2ace72e44020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ace72e442a8"/>
        <function-ref name="localPan" scoped="" ref="0x2ace72e44430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2ace72e445b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2ace72e44740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2ace72e448c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2ace72e44a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace72e44bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ace72e44d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2ace72e43020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ace72e431a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2ace72e43330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2ace72e434b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace72e41ab0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace72e41ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72e41e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72e40020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72e401a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72e40330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72e404b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72e40640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2ace737b0778" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2ace737b0778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2ace737b0ac8"/>
        <function-ref name="address" scoped="" ref="0x2ace737b0c50"/>
        <function-ref name="destination" scoped="" ref="0x2ace737b0dd8"/>
        <function-ref name="setSource" scoped="" ref="0x2ace737af020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace737af1a8"/>
        <function-ref name="pan" scoped="" ref="0x2ace737af330"/>
        <function-ref name="setPan" scoped="" ref="0x2ace737af4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace737af640"/>
        <function-ref name="localPan" scoped="" ref="0x2ace737af7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace737afa10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace737afa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace737afd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace737ae020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace737ae1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace737ae330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace737ae4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace737ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2ace737b37f8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace737b37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2ace737b3b48"/>
        <function-ref name="getDSN" scoped="" ref="0x2ace737b3cd0"/>
        <function-ref name="setFCF" scoped="" ref="0x2ace737b3e58"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2ace737b2020"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2ace737b21a8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2ace737b2330"/>
        <function-ref name="setDSN" scoped="" ref="0x2ace737b24b8"/>
        <function-ref name="createAckReply" scoped="" ref="0x2ace737b2640"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2ace737b27c8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2ace737b2950"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2ace737b2ad8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2ace737b2c60"/>
        <function-ref name="localAddr" scoped="" ref="0x2ace737b2de8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ace737b1120"/>
        <function-ref name="localPan" scoped="" ref="0x2ace737b12a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2ace737b1430"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2ace737b15b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2ace737b1740"/>
        <function-ref name="setDestPan" scoped="" ref="0x2ace737b18c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace737b1a50"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ace737b1bd8"/>
        <function-ref name="getFCF" scoped="" ref="0x2ace737b1d60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ace737b0020"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2ace737b01a8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2ace737b0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ace737ae8e8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ace737ae8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ace737aec38"/>
        <function-ref name="changed" scoped="" ref="0x2ace737aedc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2ace737ad020"/>
        <function-ref name="setAddress" scoped="" ref="0x2ace737ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace737ad430" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace737ad430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace737ad780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace737ad908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace737ada90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace737adc18"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace737adda0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace737ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72eb0510" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72eb0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72eb0860"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72eb09e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72eb0b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72eb0df8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72eb0df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72eaf170"/>
        <function-ref name="header" scoped="" ref="0x2ace72eaf2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace72eb2470" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace72eb2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72eb27c0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72eb2948"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72eb2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace72eaf580" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace72eaf580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ace72eaf8d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2ace72eafa58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ace72eafbe0"/>
        <function-ref name="getSender" scoped="" ref="0x2ace72eafd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace72eb2d18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace72eb2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72eb00a0"/>
        <function-ref name="header" scoped="" ref="0x2ace72eb0228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace737cc458" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace737cc458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace737cc7a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ace737cc930"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace737ccab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace737ccd40" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace737ccd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace737cb0d8"/>
        <function-ref name="header" scoped="" ref="0x2ace737cb260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2ace737c9bd8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ace737c9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace737c8020"/>
        <function-ref name="clearAll" scoped="" ref="0x2ace737c81a8"/>
        <function-ref name="get" scoped="" ref="0x2ace737c8330"/>
        <function-ref name="set" scoped="" ref="0x2ace737c84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace737d1d98" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace737d1d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace737cd170"/>
        <function-ref name="cancel" scoped="" ref="0x2ace737cd2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace737cd480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2ace737c9020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2ace737c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2ace737c9370"/>
        <function-ref name="insertNode" scoped="" ref="0x2ace737c94f8"/>
        <function-ref name="getNode" scoped="" ref="0x2ace737c9680"/>
        <function-ref name="evicted" scoped="" ref="0x2ace737c9808"/>
        <function-ref name="getIndex" scoped="" ref="0x2ace737c9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace737cd6c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace737cd6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace737cda18"/>
        <function-ref name="header" scoped="" ref="0x2ace737cdba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace737cdde8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace737cdde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace737cc170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2ace737cb4a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2ace737cb4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ace737cb7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2ace737cb980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ace737cbb08"/>
        <function-ref name="getSender" scoped="" ref="0x2ace737cbc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2ace72e9dd70" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2ace72e9dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2ace72e9a0f0"/>
        <function-ref name="insertNode" scoped="" ref="0x2ace72e9a278"/>
        <function-ref name="getNode" scoped="" ref="0x2ace72e9a400"/>
        <function-ref name="evicted" scoped="" ref="0x2ace72e9a588"/>
        <function-ref name="getIndex" scoped="" ref="0x2ace72e9a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2ace72e96b18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ace72e96b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72e96e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2ace72e94020"/>
        <function-ref name="get" scoped="" ref="0x2ace72e941a8"/>
        <function-ref name="set" scoped="" ref="0x2ace72e94330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2ace72e97850" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2ace72e97850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2ace72e97ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2ace72e97d28"/>
        <function-ref name="getNode" scoped="" ref="0x2ace72e96020"/>
        <function-ref name="evicted" scoped="" ref="0x2ace72e961a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2ace72e96330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace72e97238" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72e97238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72e97588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2ace737c6140" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2ace737c6140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace737c6490"/>
        <function-ref name="clearAll" scoped="" ref="0x2ace737c6618"/>
        <function-ref name="get" scoped="" ref="0x2ace737c67a0"/>
        <function-ref name="set" scoped="" ref="0x2ace737c6928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72ee8c38" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72ee8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72ee7020"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72ee71a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72ee7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72ee75b8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72ee75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72ee7908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2ace72ee4100" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2ace72ee4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace72ee4450"/>
        <function-ref name="noAck" scoped="" ref="0x2ace72ee45d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace72ee4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace72eeb2e8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace72eeb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72eeb638"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72eeb7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72eeb948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace72ee9e20" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace72ee9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72ee81a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72ee8330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72ee84b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72ee8640"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72ee87c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72ee8950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace72ee7b90" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace72ee7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72ee6020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72ee61a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72ee6330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72ee64b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72ee6640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72ee67c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2ace72ee5470" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2ace72ee5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ace72ee57c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2ace72ee5948"/>
        <function-ref name="getRetries" scoped="" ref="0x2ace72ee5ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ace72ee5c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ace72ee5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace72eebbd0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace72eebbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72ee9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ace72ee6a10" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72ee6a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace72ee6d60"/>
        <function-ref name="noAck" scoped="" ref="0x2ace72ee5020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace72ee51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ace72ee9268" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ace72ee9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ace72ee95b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2ace72ee9740"/>
        <function-ref name="getRetries" scoped="" ref="0x2ace72ee98c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ace72ee9a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ace72ee9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace72ede988" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace72ede988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace72edecd8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace72edee60"/>
        <function-ref name="start" scoped="" ref="0x2ace72f14020"/>
        <function-ref name="stop" scoped="" ref="0x2ace72f141a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72f115c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72f115c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72f11918"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72f11aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72f11c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72f10020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72f10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72f10370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace72f14430" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace72f14430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72f14780"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72f14908"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72f14a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace72f132e8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace72f132e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72f13638"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72f137c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72f13948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72f13ad0"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72f13c58"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72f13de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ace72f12060" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ace72f12060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ace72f123b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ace72f12538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ace72f126c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ace72f12848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ace72f12b30" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ace72f12b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace72f12e80"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace72f11030"/>
        <function-ref name="start" scoped="" ref="0x2ace72f111b8"/>
        <function-ref name="stop" scoped="" ref="0x2ace72f11340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace72f14d18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace72f14d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72f130a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace72f105f8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace72f105f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72f10948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72f10ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72f10c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72f10de0"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72f0e020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72f0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ace73810458" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ace73810458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ace738107a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ace73810930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ace73810ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ace73810c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace72f83270" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace72f83270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace72f835c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace72f83748"/>
        <function-ref name="start" scoped="" ref="0x2ace72f838d0"/>
        <function-ref name="stop" scoped="" ref="0x2ace72f83a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2ace72f805d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ace72f805d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace72f80928"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace72f80ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace72f80c38"/>
        <function-ref name="done" scoped="" ref="0x2ace72f80dc0"/>
        <function-ref name="standby" scoped="" ref="0x2ace72f7f020"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace72f7f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace72f83ce0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace72f83ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72f810a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72f81228"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72f813b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2ace72f7fc98" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace72f7fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72f7e020"/>
        <function-ref name="header" scoped="" ref="0x2ace72f7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace72f81638" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace72f81638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72f81988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2ace72f7f3f0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace72f7f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72f7f740"/>
        <function-ref name="ready" scoped="" ref="0x2ace72f7f8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72f7fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2ace72f81bd0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2ace72f81bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2ace72f80020"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace72f801a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace72f80330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace73809870" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace73809870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace73809bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace73809d48"/>
        <function-ref name="start" scoped="" ref="0x2ace73808020"/>
        <function-ref name="stop" scoped="" ref="0x2ace738081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2ace73808430" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ace73808430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace73808780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2ace73805450" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ace73805450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace738057a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace73805928"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace73805ab0"/>
        <function-ref name="done" scoped="" ref="0x2ace73805c38"/>
        <function-ref name="standby" scoped="" ref="0x2ace73805dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace73804020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace73808a08" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace73808a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73808d58"/>
        <function-ref name="cancel" scoped="" ref="0x2ace73806020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace738061a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2ace738024f0" loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2ace738024f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace73802840"/>
        <function-ref name="runTask" scoped="" ref="0x2ace738029c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2ace73803578" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace73803578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace738038c8"/>
        <function-ref name="header" scoped="" ref="0x2ace73803a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2ace73802c90" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2ace73802c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace73801020"/>
        <function-ref name="runTask" scoped="" ref="0x2ace738011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace73806430" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace73806430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace73806780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2ace73803d18" loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2ace73803d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace738020a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ace73802228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2ace73804c98" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace73804c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73803020"/>
        <function-ref name="ready" scoped="" ref="0x2ace738031a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73803330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2ace738069c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2ace738069c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2ace73806d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace73805020"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace738051a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2ace73804268" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2ace73804268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2ace738045b8"/>
        <function-ref name="suspend" scoped="" ref="0x2ace73804740"/>
        <function-ref name="resume" scoped="" ref="0x2ace738048c8"/>
        <function-ref name="run" scoped="" ref="0x2ace73804a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72fc40c0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72fc40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72fc4410"/>
        <function-ref name="ready" scoped="" ref="0x2ace72fc4598"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72fc4720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72fc49a8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72fc49a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72fc4cf8"/>
        <function-ref name="header" scoped="" ref="0x2ace72fc4e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2ace72fc20f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72fc20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ace72fc2440"/>
        <function-ref name="wait" scoped="" ref="0x2ace72fc25c8"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72fc2750"/>
        <function-ref name="isFree" scoped="" ref="0x2ace72fc28d8"/>
        <function-ref name="getNow" scoped="" ref="0x2ace72fc2a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace72fc2ce8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace72fc2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2ace72fc10a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2ace72fc1228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2ace72fc13b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2ace72fc1538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace72fc58c8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace72fc58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72fc5c18"/>
        <function-ref name="header" scoped="" ref="0x2ace72fc5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ace72fc5020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace72fc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72fc5370"/>
        <function-ref name="ready" scoped="" ref="0x2ace72fc54f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72fc5680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace73838d38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace73838d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace738370d8"/>
        <function-ref name="ready" scoped="" ref="0x2ace73837260"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace738373e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace73837670" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace73837670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace738379c0"/>
        <function-ref name="header" scoped="" ref="0x2ace73837b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2ace73837d90" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ace73837d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ace73836170"/>
        <function-ref name="wait" scoped="" ref="0x2ace738362f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ace73836480"/>
        <function-ref name="isFree" scoped="" ref="0x2ace73836608"/>
        <function-ref name="getNow" scoped="" ref="0x2ace73836790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ace738369d8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ace738369d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ace73836d28"/>
        <function-ref name="rand32" scoped="" ref="0x2ace73835020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace738352a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace738352a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2ace738355f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2ace73835780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2ace73835908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2ace73835a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace73838578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace73838578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace738388c8"/>
        <function-ref name="header" scoped="" ref="0x2ace73838a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ace7383bb58" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace7383bb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73838020"/>
        <function-ref name="ready" scoped="" ref="0x2ace738381a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73838330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2ace73835d58" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2ace73835d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace738340d8"/>
        <function-ref name="runTask" scoped="" ref="0x2ace73834260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ace72f8c690" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ace72f8c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ace72f8c9e0"/>
        <function-ref name="rand32" scoped="" ref="0x2ace72f8cb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ace72f8b668" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ace72f8b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72f8c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace72f91940" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72f91940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72f91c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ace72fd2568" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ace72fd2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ace72fd28b8"/>
        <function-ref name="rand32" scoped="" ref="0x2ace72fd2a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ace72fd3528" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ace72fd3528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72fd20c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace72f8ab40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace72f8ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace72fd3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace72fdd020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace72fdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72fdd370"/>
        <function-ref name="ready" scoped="" ref="0x2ace72fdd4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72fdd680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72fdd908" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72fdd908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72fddc58"/>
        <function-ref name="header" scoped="" ref="0x2ace72fddde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2ace72fdc060" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ace72fdc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ace72fdc3b0"/>
        <function-ref name="wait" scoped="" ref="0x2ace72fdc538"/>
        <function-ref name="cancel" scoped="" ref="0x2ace72fdc6c0"/>
        <function-ref name="isFree" scoped="" ref="0x2ace72fdc848"/>
        <function-ref name="getNow" scoped="" ref="0x2ace72fdc9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2ace72fdbd60" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2ace72fdbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72fd90d8"/>
        <function-ref name="get" scoped="" ref="0x2ace72fd9260"/>
        <function-ref name="setValue" scoped="" ref="0x2ace72fd93e8"/>
        <function-ref name="set" scoped="" ref="0x2ace72fd9570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace72fdcc58" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace72fdcc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2ace72fdb020"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2ace72fdb1a8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ace72fdb330"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2ace72fdb4b8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2ace72fdb640"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2ace72fdb7c8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ace72fdb950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ace72fdbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace72fbce00" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace72fbce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72fde1a8"/>
        <function-ref name="header" scoped="" ref="0x2ace72fde330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ace72fbc558" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace72fbc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace72fbc8a8"/>
        <function-ref name="ready" scoped="" ref="0x2ace72fbca30"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace72fbcbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ace72fde578" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ace72fde578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace72fde8c8"/>
        <function-ref name="noAck" scoped="" ref="0x2ace72fdea50"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace72fdebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2ace72fd97f8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2ace72fd97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace72fd9b48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace72fd9cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace72fd9e58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace72fd8020"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace72fd81a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace72fd8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace72fd47e0" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace72fd47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72fd4b30"/>
        <function-ref name="header" scoped="" ref="0x2ace72fd4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace72fd4020" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace72fd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace72fd4370"/>
        <function-ref name="header" scoped="" ref="0x2ace72fd44f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2ace73016020" loc="21:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2ace73016020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2ace73016370"/>
        <function-ref name="getDSN" scoped="" ref="0x2ace730164f8"/>
        <function-ref name="setFCF" scoped="" ref="0x2ace73016680"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2ace73016808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2ace73016990"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2ace73016b18"/>
        <function-ref name="setDSN" scoped="" ref="0x2ace73016ca0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2ace73016e28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2ace73015020"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2ace730151a8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2ace73015330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2ace730154b8"/>
        <function-ref name="localAddr" scoped="" ref="0x2ace73015640"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2ace730158c8"/>
        <function-ref name="localPan" scoped="" ref="0x2ace73015a50"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2ace73015bd8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2ace73015d60"/>
        <function-ref name="setFramePending" scoped="" ref="0x2ace73014020"/>
        <function-ref name="setDestPan" scoped="" ref="0x2ace730141a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace73014330"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2ace730144b8"/>
        <function-ref name="getFCF" scoped="" ref="0x2ace73014640"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2ace730147c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2ace73014950"/>
        <function-ref name="getFramePending" scoped="" ref="0x2ace73014ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1DriverConfig" ref="0x2ace73013020" loc="22:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2ace73013020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ace73013370"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ace730134f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73013680"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2ace73013808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace73013990"/>
        <function-ref name="setAck" scoped="" ref="0x2ace73013b18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace73013ca0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2ace73013e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2ace73010180" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ace73010180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ace730104f0"/>
        <function-ref name="wait" scoped="" ref="0x2ace73010678"/>
        <function-ref name="cancel" scoped="" ref="0x2ace73010800"/>
        <function-ref name="isFree" scoped="" ref="0x2ace73010988"/>
        <function-ref name="getNow" scoped="" ref="0x2ace73010b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ace7300e190" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace7300e190"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2ace723d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace7300c918"/>
        <function-ref name="fired" scoped="" ref="0x2ace7300d980"/>
        <function-ref name="startAt" scoped="" ref="0x2ace7300c310"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7300de08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace7300cda0"/>
        <function-ref name="start" scoped="" ref="0x2ace7300d020"/>
        <function-ref name="stop" scoped="" ref="0x2ace7300d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2ace738cf5a0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2ace738cf5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ace738cf910"/>
        <function-ref name="wait" scoped="" ref="0x2ace738cfa98"/>
        <function-ref name="cancel" scoped="" ref="0x2ace738cfc20"/>
        <function-ref name="isFree" scoped="" ref="0x2ace738cfda8"/>
        <function-ref name="getNow" scoped="" ref="0x2ace738ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ace738ce4d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace738ce4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2ace723d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace738cbc88"/>
        <function-ref name="fired" scoped="" ref="0x2ace738cdd08"/>
        <function-ref name="startAt" scoped="" ref="0x2ace738cb680"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace738cb1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace738ca150"/>
        <function-ref name="start" scoped="" ref="0x2ace738cd3a8"/>
        <function-ref name="stop" scoped="" ref="0x2ace738cd880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2ace738ca528" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2ace738ca528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2ace738ca878"/>
        <function-ref name="suspend" scoped="" ref="0x2ace738caa00"/>
        <function-ref name="resume" scoped="" ref="0x2ace738cab88"/>
        <function-ref name="run" scoped="" ref="0x2ace738cad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace73040338" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace73040338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace73040688"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace73040810"/>
        <function-ref name="start" scoped="" ref="0x2ace73040998"/>
        <function-ref name="stop" scoped="" ref="0x2ace73040b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2ace7303db10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2ace7303db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ace7303de60"/>
        <function-ref name="request" scoped="" ref="0x2ace7303c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace73037020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace73037020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73037370"/>
        <function-ref name="ready" scoped="" ref="0x2ace730374f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73037680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace73037908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace73037908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace73037c58"/>
        <function-ref name="header" scoped="" ref="0x2ace73037de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2ace7303fbe0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ace7303fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace7303e020"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace7303e1a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace7303e330"/>
        <function-ref name="done" scoped="" ref="0x2ace7303e4b8"/>
        <function-ref name="standby" scoped="" ref="0x2ace7303e640"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace7303e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace7303c268" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace7303c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7303c5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace7303c740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7303c8c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace7303ca50"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace7303cbd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace7303cd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2ace73038020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2ace73038020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace73038470"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace730385f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace73038780"/>
        <function-ref name="done" scoped="" ref="0x2ace73038908"/>
        <function-ref name="standby" scoped="" ref="0x2ace73038a90"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace73038c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2ace7303b020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ace7303b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ace7303b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace7303d3f0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace7303d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace7303d740"/>
        <function-ref name="header" scoped="" ref="0x2ace7303d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2ace73039a08" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2ace73039a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace73039d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ace7303b658" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ace7303b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace7303b9a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace7303bb30"/>
        <function-ref name="start" scoped="" ref="0x2ace7303bcb8"/>
        <function-ref name="stop" scoped="" ref="0x2ace7303be40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace73036800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace73036800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace73036b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace73036cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73036e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace73035020"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace730351a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace73035330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ace7303f648" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2ace7303f648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace7303f998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace730355b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace730355b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ace73035908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2ace73039120" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2ace73039120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73039470"/>
        <function-ref name="cancel" scoped="" ref="0x2ace730395f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73039780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ace7303ea10" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace7303ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7303ed60"/>
        <function-ref name="ready" scoped="" ref="0x2ace7303d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace7303d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2ace730360a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2ace730360a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ace730363f0"/>
        <function-ref name="request" scoped="" ref="0x2ace73036578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ace73040d68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2ace73040d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7303f0f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace7303f278"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace7303f400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2ace730b5da0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2ace730b5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730b3170"/>
        <function-ref name="get" scoped="" ref="0x2ace730b32f8"/>
        <function-ref name="setValue" scoped="" ref="0x2ace730b3480"/>
        <function-ref name="set" scoped="" ref="0x2ace730b3608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace730b7020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace730b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730b7370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace730b74f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace730b7680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace730b7808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace730b7990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace730b7b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace730b5020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace730b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730b5370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace730b54f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace730b5680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace730b5808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace730b5990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace730b5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2ace730bb598" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace730bb598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace730baa88"/>
        <function-ref name="clear" scoped="" ref="0x2ace730b8190"/>
        <function-ref name="isValid" scoped="" ref="0x2ace730ba3a8"/>
        <function-ref name="set" scoped="" ref="0x2ace730b8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2ace730b6020" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace730b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace730b6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ace730be920" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace730be920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace730bdd78"/>
        <function-ref name="clear" scoped="" ref="0x2ace730bc4b8"/>
        <function-ref name="isValid" scoped="" ref="0x2ace730bd698"/>
        <function-ref name="set" scoped="" ref="0x2ace730bcb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2ace738a6b30" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2ace738a6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace738a6e80"/>
        <function-ref name="get" scoped="" ref="0x2ace738a5030"/>
        <function-ref name="setValue" scoped="" ref="0x2ace738a51b8"/>
        <function-ref name="set" scoped="" ref="0x2ace738a5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace738a7cd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace738a7cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace738a60a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace738a6228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace738a63b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace738a6538"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace738a66c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace738a6848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace738a38a8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace738a38a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace738a3bf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace738a3d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace738a1020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace738a11a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace738a1330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace738a14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2ace738aa2d0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2ace738aa2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace738a9768"/>
        <function-ref name="clear" scoped="" ref="0x2ace738a9e48"/>
        <function-ref name="isValid" scoped="" ref="0x2ace738a9088"/>
        <function-ref name="set" scoped="" ref="0x2ace738a7558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2ace738a56d0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace738a56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace738a43a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ace738a48c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ace738a48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace738a3490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ace738ae688" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ace738ae688"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace738acae0"/>
        <function-ref name="clear" scoped="" ref="0x2ace738ab1f0"/>
        <function-ref name="isValid" scoped="" ref="0x2ace738ac400"/>
        <function-ref name="set" scoped="" ref="0x2ace738ab8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ace73080380" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ace73080380"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace7307f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ace7307eab0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ace7307eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace7307d658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ace7307dc80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace7307dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720499d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2ace72049d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace73073a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace730724a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace73072020"/>
        <function-ref name="overflow" scoped="" ref="0x2ace73072930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace730aea70" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace730aea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730aedc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace730e0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace730e01a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace730e0330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace730e04b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace730e0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace730e0928" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace730e0928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730e0c78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace730e0e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace730df020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace730df1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace730df330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace730df4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2ace730ae020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2ace730ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730ae390"/>
        <function-ref name="get" scoped="" ref="0x2ace730ae518"/>
        <function-ref name="setValue" scoped="" ref="0x2ace730ae6a0"/>
        <function-ref name="set" scoped="" ref="0x2ace730ae828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace730dd268" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace730dd268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace730dd5b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace730dd740"/>
        <function-ref name="start" scoped="" ref="0x2ace730dd8c8"/>
        <function-ref name="stop" scoped="" ref="0x2ace730dda50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2ace730d9988" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2ace730d9988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ace730d9cd8"/>
        <function-ref name="request" scoped="" ref="0x2ace730d9e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace730d4020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace730d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace730d4370"/>
        <function-ref name="ready" scoped="" ref="0x2ace730d44f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace730d4680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace730d4908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace730d4908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace730d4c58"/>
        <function-ref name="header" scoped="" ref="0x2ace730d4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2ace730dcb10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ace730dcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace730dce60"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace730db020"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace730db1a8"/>
        <function-ref name="done" scoped="" ref="0x2ace730db330"/>
        <function-ref name="standby" scoped="" ref="0x2ace730db4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace730db640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace730d80e0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace730d80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730d8430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace730d85b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace730d8740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace730d88c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace730d8a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace730d8bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2ace730d5020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2ace730d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace730d5470"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace730d55f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace730d5780"/>
        <function-ref name="done" scoped="" ref="0x2ace730d5908"/>
        <function-ref name="standby" scoped="" ref="0x2ace730d5a90"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace730d5c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2ace730d8e60" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ace730d8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ace730d71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace730d9268" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace730d9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace730d95b8"/>
        <function-ref name="header" scoped="" ref="0x2ace730d9740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2ace730d6908" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2ace730d6908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace730d6c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ace730d74d0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ace730d74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace730d7820"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace730d79a8"/>
        <function-ref name="start" scoped="" ref="0x2ace730d7b30"/>
        <function-ref name="stop" scoped="" ref="0x2ace730d7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace730d3800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace730d3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730d3b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace730d3cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace730d3e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace730d1020"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace730d11a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace730d1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ace730dc578" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2ace730dc578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace730dc8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace730d15b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace730d15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ace730d1908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2ace730d6020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2ace730d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace730d6370"/>
        <function-ref name="cancel" scoped="" ref="0x2ace730d64f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace730d6680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ace730db888" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace730db888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace730dbbd8"/>
        <function-ref name="ready" scoped="" ref="0x2ace730dbd60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace730d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2ace730d30a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2ace730d30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ace730d33f0"/>
        <function-ref name="request" scoped="" ref="0x2ace730d3578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ace730ddc98" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2ace730ddc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace730dc020"/>
        <function-ref name="cancel" scoped="" ref="0x2ace730dc1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace730dc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ace730cdd08" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ace730cdd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace730cc0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace730cc228"/>
        <function-ref name="start" scoped="" ref="0x2ace730cc3b0"/>
        <function-ref name="stop" scoped="" ref="0x2ace730cc538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2ace730c93f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2ace730c93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ace730c9740"/>
        <function-ref name="request" scoped="" ref="0x2ace730c98c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ace730c48c8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ace730c48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace730c4c18"/>
        <function-ref name="ready" scoped="" ref="0x2ace730c4da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace730c3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ace730c32a8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ace730c32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace730c35f8"/>
        <function-ref name="header" scoped="" ref="0x2ace730c3780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2ace730cb5f8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ace730cb5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace730cb948"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace730cbad0"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace730cbc58"/>
        <function-ref name="done" scoped="" ref="0x2ace730cbde0"/>
        <function-ref name="standby" scoped="" ref="0x2ace730ca020"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace730ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace730c9b10" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace730c9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730c9e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace730c8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace730c81a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace730c8330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace730c84b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace730c8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2ace730c5a08" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2ace730c5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace730c5e58"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace730c4020"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace730c41a8"/>
        <function-ref name="done" scoped="" ref="0x2ace730c4330"/>
        <function-ref name="standby" scoped="" ref="0x2ace730c44b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace730c4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2ace730c88c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2ace730c88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ace730c8c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace730cac98" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace730cac98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace730c9020"/>
        <function-ref name="header" scoped="" ref="0x2ace730c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2ace730c5430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2ace730c5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace730c5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ace730c6020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ace730c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ace730c6370"/>
        <function-ref name="stopDone" scoped="" ref="0x2ace730c64f8"/>
        <function-ref name="start" scoped="" ref="0x2ace730c6680"/>
        <function-ref name="stop" scoped="" ref="0x2ace730c6808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace730c22a8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace730c22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace730c25f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace730c2780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace730c2908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace730c2a90"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace730c2c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace730c2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ace730cb060" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2ace730cb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace730cb3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace730c1060" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace730c1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2ace730c13b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2ace730c6a90" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2ace730c6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace730c6de0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace730c5020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace730c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ace730ca3f0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace730ca3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace730ca740"/>
        <function-ref name="ready" scoped="" ref="0x2ace730ca8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace730caa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2ace730c3a08" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2ace730c3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ace730c3d58"/>
        <function-ref name="request" scoped="" ref="0x2ace730c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ace730cc780" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2ace730cc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace730ccad0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace730ccc58"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace730ccde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2ace7312e5b0" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace7312e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2ace7312e900"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2ace7312ea88"/>
        <function-ref name="txModeSet" scoped="" ref="0x2ace7312ec10"/>
        <function-ref name="txModeGet" scoped="" ref="0x2ace7312ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace7312c020" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace7312c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7312c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace7312c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7312c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace7312c808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace7312c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace7312cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2ace731303b0" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2ace731303b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7312fa40"/>
        <function-ref name="get" scoped="" ref="0x2ace7312f530"/>
        <function-ref name="isSet" scoped="" ref="0x2ace7312f020"/>
        <function-ref name="set" scoped="" ref="0x2ace7312e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ace7312b8c8" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ace7312b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7312bc18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace7312bda0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7312a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace7312a1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace7312a330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace7312a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntCtrlFlag" ref="0x2ace7312ce00" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntCtrlFlag" scoped="" ref="0x2ace7312ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7312b1a8"/>
        <function-ref name="get" scoped="" ref="0x2ace7312b330"/>
        <function-ref name="setValue" scoped="" ref="0x2ace7312b4b8"/>
        <function-ref name="set" scoped="" ref="0x2ace7312b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RxModeLock" ref="0x2ace7310eaa0" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2ace7310eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace7310edf0"/>
        <function-ref name="stop" scoped="" ref="0x2ace73130020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2ace73121798" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2ace73121798"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ace73121ae8"/>
        <function-ref name="request" scoped="" ref="0x2ace73121c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2ace7311b600" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2ace7311b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace73119bf0"/>
        <function-ref name="get" scoped="" ref="0x2ace731196e0"/>
        <function-ref name="isSet" scoped="" ref="0x2ace731191d0"/>
        <function-ref name="set" scoped="" ref="0x2ace73118130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2ace73151478" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace73151478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2ace731517c8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2ace73151950"/>
        <function-ref name="txModeSet" scoped="" ref="0x2ace73151ad8"/>
        <function-ref name="txModeGet" scoped="" ref="0x2ace73151c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ace731575a8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ace731575a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace73156a88"/>
        <function-ref name="clear" scoped="" ref="0x2ace73155190"/>
        <function-ref name="isValid" scoped="" ref="0x2ace731563a8"/>
        <function-ref name="set" scoped="" ref="0x2ace73155870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2ace7314e4f0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2ace7314e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7314e840"/>
        <function-ref name="get" scoped="" ref="0x2ace7314e9c8"/>
        <function-ref name="setValue" scoped="" ref="0x2ace7314eb50"/>
        <function-ref name="set" scoped="" ref="0x2ace7314ecd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2ace73126778" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ace73126778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace73126ac8"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace73126c50"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace73126dd8"/>
        <function-ref name="done" scoped="" ref="0x2ace73122020"/>
        <function-ref name="standby" scoped="" ref="0x2ace731221a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace73122330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2ace7311d2d0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace7311d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7311c898"/>
        <function-ref name="get" scoped="" ref="0x2ace7311c388"/>
        <function-ref name="isSet" scoped="" ref="0x2ace7311de50"/>
        <function-ref name="set" scoped="" ref="0x2ace7311cda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace73120020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace73120020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace73120370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace731204f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73120680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace73120808"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace73120990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace73120b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace73158100" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace73158100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ace73158450"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ace731585d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73158760"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2ace731588e8"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace73158a70"/>
        <function-ref name="setAck" scoped="" ref="0x2ace73158bf8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace73158d80"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2ace73157020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace73121020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace73121020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace73121370"/>
        <function-ref name="header" scoped="" ref="0x2ace731214f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace73162ae0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace73162ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2ace723d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace7315e270"/>
        <function-ref name="fired" scoped="" ref="0x2ace7315f310"/>
        <function-ref name="startAt" scoped="" ref="0x2ace7315fc20"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7315f798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace7315e6f8"/>
        <function-ref name="start" scoped="" ref="0x2ace73160970"/>
        <function-ref name="stop" scoped="" ref="0x2ace73160e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ace73118990" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ace73118990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace73115020"/>
        <function-ref name="get" scoped="" ref="0x2ace73117a70"/>
        <function-ref name="isSet" scoped="" ref="0x2ace73117560"/>
        <function-ref name="set" scoped="" ref="0x2ace73115530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2ace731532d8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2ace731532d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace731528a8"/>
        <function-ref name="get" scoped="" ref="0x2ace73152398"/>
        <function-ref name="isSet" scoped="" ref="0x2ace73153e58"/>
        <function-ref name="set" scoped="" ref="0x2ace73152db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2ace7314dc70" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2ace7314dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace7314c020"/>
        <function-ref name="stop" scoped="" ref="0x2ace7314c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2ace7314f020" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2ace7314f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace7314f370"/>
        <function-ref name="stop" scoped="" ref="0x2ace7314f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftAckAlarm" ref="0x2ace7315c020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftAckAlarm" scoped="" ref="0x2ace7315c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2ace723d9020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace7315a690"/>
        <function-ref name="fired" scoped="" ref="0x2ace7315b6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace7315a088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7315bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace7315ab18"/>
        <function-ref name="start" scoped="" ref="0x2ace7315cd70"/>
        <function-ref name="stop" scoped="" ref="0x2ace7315b270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2ace73163830" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2ace73163830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace73162410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ace731225d8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace731225d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73122928"/>
        <function-ref name="ready" scoped="" ref="0x2ace73122ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73122c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2ace73115d70" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace73115d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace73164388"/>
        <function-ref name="get" scoped="" ref="0x2ace73114e38"/>
        <function-ref name="isSet" scoped="" ref="0x2ace73114928"/>
        <function-ref name="set" scoped="" ref="0x2ace73164898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2ace7314d0e0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2ace7314d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7314d430"/>
        <function-ref name="get" scoped="" ref="0x2ace7314d5b8"/>
        <function-ref name="setValue" scoped="" ref="0x2ace7314d740"/>
        <function-ref name="set" scoped="" ref="0x2ace7314d8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2ace7314f898" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2ace7314f898"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7314fbe8"/>
        <function-ref name="get" scoped="" ref="0x2ace7314fd70"/>
        <function-ref name="setValue" scoped="" ref="0x2ace7314e020"/>
        <function-ref name="set" scoped="" ref="0x2ace7314e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ace73163020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace73163020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ace73163370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2ace7311fa28" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2ace7311fa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2ace7311fd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2ace731432c0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2ace731432c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2ace73143610"/>
        <function-ref name="request" scoped="" ref="0x2ace73143798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2ace731859f8" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2ace731859f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2ace72048c50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ace73188780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2ace7313e548" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2ace7313e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7313db18"/>
        <function-ref name="get" scoped="" ref="0x2ace7313d608"/>
        <function-ref name="isSet" scoped="" ref="0x2ace7313d0f8"/>
        <function-ref name="set" scoped="" ref="0x2ace7313c088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2ace7317e880" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2ace7317e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7317ebd0"/>
        <function-ref name="get" scoped="" ref="0x2ace7317ed58"/>
        <function-ref name="setValue" scoped="" ref="0x2ace7317d020"/>
        <function-ref name="set" scoped="" ref="0x2ace7317d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2ace731751c0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2ace731751c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2ace73175510"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2ace73175698"/>
        <function-ref name="txModeSet" scoped="" ref="0x2ace73175820"/>
        <function-ref name="txModeGet" scoped="" ref="0x2ace731759a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2ace73147b90" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ace73147b90"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace73146020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ace7317b2b0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ace7317b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ace7317a768"/>
        <function-ref name="clear" scoped="" ref="0x2ace7317ae48"/>
        <function-ref name="isValid" scoped="" ref="0x2ace7317a088"/>
        <function-ref name="set" scoped="" ref="0x2ace73179558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2ace731462d0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2ace731462d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2ace73146620"/>
        <function-ref name="turnOn" scoped="" ref="0x2ace731467a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2ace73146930"/>
        <function-ref name="done" scoped="" ref="0x2ace73146ab8"/>
        <function-ref name="standby" scoped="" ref="0x2ace73146c40"/>
        <function-ref name="getChannel" scoped="" ref="0x2ace73146dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2ace73188d50" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ace73188d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="TRadio" ref="0x2ace723dab68"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace73187928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2ace73141208" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2ace73141208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace731407f8"/>
        <function-ref name="get" scoped="" ref="0x2ace731402e8"/>
        <function-ref name="isSet" scoped="" ref="0x2ace73141d88"/>
        <function-ref name="set" scoped="" ref="0x2ace73140d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2ace73143a50" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2ace73143a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace73143da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace73142020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace731421a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace73142330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace731424b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace73142640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2ace73180ad0" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2ace73180ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ace73180e20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ace7317f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7317f1a8"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2ace7317f330"/>
        <function-ref name="headerLength" scoped="" ref="0x2ace7317f4b8"/>
        <function-ref name="setAck" scoped="" ref="0x2ace7317f640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2ace7317f7c8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2ace7317f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2ace731459e8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2ace731459e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace73145d38"/>
        <function-ref name="header" scoped="" ref="0x2ace73143020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2ace731729e8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2ace731729e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace73172d38"/>
        <function-ref name="stop" scoped="" ref="0x2ace73171020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ace7318a760" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ace7318a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ace7318aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2ace73177020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2ace73177020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace73176608"/>
        <function-ref name="get" scoped="" ref="0x2ace731760f8"/>
        <function-ref name="isSet" scoped="" ref="0x2ace73177ba0"/>
        <function-ref name="set" scoped="" ref="0x2ace73176b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ace7313c8e8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ace7313c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7318e020"/>
        <function-ref name="get" scoped="" ref="0x2ace7318f9a0"/>
        <function-ref name="isSet" scoped="" ref="0x2ace7318f490"/>
        <function-ref name="set" scoped="" ref="0x2ace7318e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ace731470d8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ace731470d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace73147428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2ace73175d30" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2ace73175d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ace731743e8"/>
        <function-ref name="stop" scoped="" ref="0x2ace73174570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2ace7318ed70" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2ace7318ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7318b388"/>
        <function-ref name="get" scoped="" ref="0x2ace7318de38"/>
        <function-ref name="isSet" scoped="" ref="0x2ace7318d928"/>
        <function-ref name="set" scoped="" ref="0x2ace7318b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2ace731450c0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2ace731450c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73145410"/>
        <function-ref name="ready" scoped="" ref="0x2ace73145598"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73145720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2ace731722f0" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ace731722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ace73172640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x2ace73184020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2ace73184020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace731800f8"/>
        <function-ref name="test" scoped="" ref="0x2ace731839e8"/>
        <function-ref name="fired" scoped="" ref="0x2ace73183560"/>
        <function-ref name="get" scoped="" ref="0x2ace73184ba0"/>
        <function-ref name="reset" scoped="" ref="0x2ace73183e70"/>
        <function-ref name="getMode" scoped="" ref="0x2ace731805d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace73181c30"/>
        <function-ref name="set" scoped="" ref="0x2ace73183088"/>
        <function-ref name="start" scoped="" ref="0x2ace73181320"/>
        <function-ref name="stop" scoped="" ref="0x2ace731817a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2ace7317d518" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2ace7317d518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7317d868"/>
        <function-ref name="get" scoped="" ref="0x2ace7317d9f0"/>
        <function-ref name="setValue" scoped="" ref="0x2ace7317db78"/>
        <function-ref name="set" scoped="" ref="0x2ace7317dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2ace7317fcf0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2ace7317fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7317e0a0"/>
        <function-ref name="get" scoped="" ref="0x2ace7317e228"/>
        <function-ref name="setValue" scoped="" ref="0x2ace7317e3b0"/>
        <function-ref name="set" scoped="" ref="0x2ace7317e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ace7318a020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ace7318a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ace7318a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2ace73174800" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2ace73174800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2ace73174b50"/>
        <function-ref name="suspend" scoped="" ref="0x2ace73174cd8"/>
        <function-ref name="resume" scoped="" ref="0x2ace73174e60"/>
        <function-ref name="run" scoped="" ref="0x2ace73172020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2ace73142930" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2ace73142930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2ace73142c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2ace7328ba10" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2ace7328ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ace720488f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2ace72048c50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2ace7328a7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ace73285188" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ace73285188"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace73285d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ace73282560" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ace73282560"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace73281130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ace73281758" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ace73281758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ace73280578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ace7327f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ace73280a00"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7327f4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace73286160" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace73286160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace7327b918"/>
        <function-ref name="fired" scoped="" ref="0x2ace7327c980"/>
        <function-ref name="startAt" scoped="" ref="0x2ace7327b310"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace7327ce08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace7327bda0"/>
        <function-ref name="start" scoped="" ref="0x2ace7327c020"/>
        <function-ref name="stop" scoped="" ref="0x2ace7327c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2ace7391d610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7391d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7391a6f8"/>
        <function-ref name="test" scoped="" ref="0x2ace7391b020"/>
        <function-ref name="fired" scoped="" ref="0x2ace7391cb30"/>
        <function-ref name="force" scoped="" ref="0x2ace73918088"/>
        <function-ref name="get" scoped="" ref="0x2ace7391c1d0"/>
        <function-ref name="reset" scoped="" ref="0x2ace7391b4a8"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7391abd0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7391a270"/>
        <function-ref name="set" scoped="" ref="0x2ace7391c658"/>
        <function-ref name="start" scoped="" ref="0x2ace7391b930"/>
        <function-ref name="stop" scoped="" ref="0x2ace7391bdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace73926ab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace73926ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace73922150"/>
        <function-ref name="fired" scoped="" ref="0x2ace739241f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace73924b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace73924680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace739225d8"/>
        <function-ref name="start" scoped="" ref="0x2ace73925828"/>
        <function-ref name="stop" scoped="" ref="0x2ace73925d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace73922b18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace73922b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7391fc20"/>
        <function-ref name="test" scoped="" ref="0x2ace73920548"/>
        <function-ref name="get" scoped="" ref="0x2ace73921728"/>
        <function-ref name="reset" scoped="" ref="0x2ace739209d0"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7391d130"/>
        <function-ref name="overflow" scoped="" ref="0x2ace739200c0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7391f798"/>
        <function-ref name="set" scoped="" ref="0x2ace73921bb0"/>
        <function-ref name="start" scoped="" ref="0x2ace73920e58"/>
        <function-ref name="stop" scoped="" ref="0x2ace7391f310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2ace7397dc28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7397dc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace73979db8"/>
        <function-ref name="test" scoped="" ref="0x2ace7397b658"/>
        <function-ref name="fired" scoped="" ref="0x2ace7397b1d0"/>
        <function-ref name="force" scoped="" ref="0x2ace73978778"/>
        <function-ref name="get" scoped="" ref="0x2ace7397c820"/>
        <function-ref name="reset" scoped="" ref="0x2ace7397bae0"/>
        <function-ref name="getMode" scoped="" ref="0x2ace739782f0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace73979930"/>
        <function-ref name="set" scoped="" ref="0x2ace7397cca8"/>
        <function-ref name="start" scoped="" ref="0x2ace73979020"/>
        <function-ref name="stop" scoped="" ref="0x2ace739794a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace7390d020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace7390d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace73983690"/>
        <function-ref name="fired" scoped="" ref="0x2ace739846f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace73983088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace73984b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace73983b18"/>
        <function-ref name="start" scoped="" ref="0x2ace7390dd70"/>
        <function-ref name="stop" scoped="" ref="0x2ace73984270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace7390e810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace7390e810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7390eb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace739810a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace739810a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7397d270"/>
        <function-ref name="test" scoped="" ref="0x2ace73980a58"/>
        <function-ref name="get" scoped="" ref="0x2ace73981c20"/>
        <function-ref name="reset" scoped="" ref="0x2ace7397f020"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7397d748"/>
        <function-ref name="overflow" scoped="" ref="0x2ace739805d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7397fdb8"/>
        <function-ref name="set" scoped="" ref="0x2ace739800f8"/>
        <function-ref name="start" scoped="" ref="0x2ace7397f4a8"/>
        <function-ref name="stop" scoped="" ref="0x2ace7397f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace73274230" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace73274230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace73271918"/>
        <function-ref name="fired" scoped="" ref="0x2ace73273980"/>
        <function-ref name="startAt" scoped="" ref="0x2ace73271310"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace73273e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace73271da0"/>
        <function-ref name="start" scoped="" ref="0x2ace73273020"/>
        <function-ref name="stop" scoped="" ref="0x2ace732734f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2ace7395b610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace7395b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace739576f8"/>
        <function-ref name="test" scoped="" ref="0x2ace73958020"/>
        <function-ref name="fired" scoped="" ref="0x2ace7395ab30"/>
        <function-ref name="force" scoped="" ref="0x2ace73956088"/>
        <function-ref name="get" scoped="" ref="0x2ace7395a1d0"/>
        <function-ref name="reset" scoped="" ref="0x2ace739584a8"/>
        <function-ref name="getMode" scoped="" ref="0x2ace73957bd0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace73957270"/>
        <function-ref name="set" scoped="" ref="0x2ace7395a658"/>
        <function-ref name="start" scoped="" ref="0x2ace73958930"/>
        <function-ref name="stop" scoped="" ref="0x2ace73958db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace73963ab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace73963ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace73960150"/>
        <function-ref name="fired" scoped="" ref="0x2ace739611f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace73961b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace73961680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace739605d8"/>
        <function-ref name="start" scoped="" ref="0x2ace73962828"/>
        <function-ref name="stop" scoped="" ref="0x2ace73962d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace73960b18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace73960b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace7395cc20"/>
        <function-ref name="test" scoped="" ref="0x2ace7395d548"/>
        <function-ref name="get" scoped="" ref="0x2ace7395e728"/>
        <function-ref name="reset" scoped="" ref="0x2ace7395d9d0"/>
        <function-ref name="getMode" scoped="" ref="0x2ace7395b130"/>
        <function-ref name="overflow" scoped="" ref="0x2ace7395d0c0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace7395c798"/>
        <function-ref name="set" scoped="" ref="0x2ace7395ebb0"/>
        <function-ref name="start" scoped="" ref="0x2ace7395de58"/>
        <function-ref name="stop" scoped="" ref="0x2ace7395c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2ace739b6c28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2ace739b6c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace739b3db8"/>
        <function-ref name="test" scoped="" ref="0x2ace739b4658"/>
        <function-ref name="fired" scoped="" ref="0x2ace739b41d0"/>
        <function-ref name="force" scoped="" ref="0x2ace739b1778"/>
        <function-ref name="get" scoped="" ref="0x2ace739b5820"/>
        <function-ref name="reset" scoped="" ref="0x2ace739b4ae0"/>
        <function-ref name="getMode" scoped="" ref="0x2ace739b12f0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace739b3930"/>
        <function-ref name="set" scoped="" ref="0x2ace739b5ca8"/>
        <function-ref name="start" scoped="" ref="0x2ace739b3020"/>
        <function-ref name="stop" scoped="" ref="0x2ace739b34a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ace739be020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ace739be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2ace72044078"/>
            <typename><typedef-ref name="T62khz" ref="0x2ace72044360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ace739bc690"/>
        <function-ref name="fired" scoped="" ref="0x2ace739bd6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ace739bc088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ace739bdb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ace739bcb18"/>
        <function-ref name="start" scoped="" ref="0x2ace739bed70"/>
        <function-ref name="stop" scoped="" ref="0x2ace739bd270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ace7394c810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ace7394c810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ace71f14570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ace71f14570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ace7394cb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2ace739ba0a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2ace739ba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2ace739b6270"/>
        <function-ref name="test" scoped="" ref="0x2ace739b9a58"/>
        <function-ref name="get" scoped="" ref="0x2ace739bac20"/>
        <function-ref name="reset" scoped="" ref="0x2ace739b8020"/>
        <function-ref name="getMode" scoped="" ref="0x2ace739b6748"/>
        <function-ref name="overflow" scoped="" ref="0x2ace739b95d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ace739b8db8"/>
        <function-ref name="set" scoped="" ref="0x2ace739b90f8"/>
        <function-ref name="start" scoped="" ref="0x2ace739b84a8"/>
        <function-ref name="stop" scoped="" ref="0x2ace739b8930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace7330ac20" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace7330ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73309020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace733091a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73309330"/>
        <function-ref name="cancel" scoped="" ref="0x2ace733094b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73309640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace73309888" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace73309888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace73309bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace73309d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace73308020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace733081a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace73308330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace73308578" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace73308578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace733088c8"/>
        <function-ref name="source" scoped="" ref="0x2ace73308a50"/>
        <function-ref name="address" scoped="" ref="0x2ace73308bd8"/>
        <function-ref name="destination" scoped="" ref="0x2ace73308d60"/>
        <function-ref name="setSource" scoped="" ref="0x2ace73307020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace733071a8"/>
        <function-ref name="type" scoped="" ref="0x2ace73307330"/>
        <function-ref name="setType" scoped="" ref="0x2ace733074b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace73307640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace733077c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace73307950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ace73307bd8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ace73307bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace73306020"/>
        <function-ref name="noAck" scoped="" ref="0x2ace733061a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace73306330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace73999400" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace73999400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73999750"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace739998d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73999a60"/>
        <function-ref name="cancel" scoped="" ref="0x2ace73999be8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73999d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace73998020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace73998020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace73998370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace739984f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace73998680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73998808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace73998990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace73998bd8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace73998bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace73997020"/>
        <function-ref name="source" scoped="" ref="0x2ace739971a8"/>
        <function-ref name="address" scoped="" ref="0x2ace73997330"/>
        <function-ref name="destination" scoped="" ref="0x2ace739974b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ace73997640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace739977c8"/>
        <function-ref name="type" scoped="" ref="0x2ace73997950"/>
        <function-ref name="setType" scoped="" ref="0x2ace73997ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace73997c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace73997de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace73996020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ace739962a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ace739962a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ace739965f8"/>
        <function-ref name="noAck" scoped="" ref="0x2ace73996780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ace73996908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ace7398d790" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace7398d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7398dae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace7398dc68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7398ddf0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace7398c020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace7398c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ace7398c450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace7398c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7398c7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace7398c928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7398cab0"/>
        <function-ref name="cancel" scoped="" ref="0x2ace7398cc38"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace7398cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ace7398b060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestUsbStationAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace7398b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace7398b3b0"/>
        <function-ref name="source" scoped="" ref="0x2ace7398b538"/>
        <function-ref name="address" scoped="" ref="0x2ace7398b6c0"/>
        <function-ref name="destination" scoped="" ref="0x2ace7398b848"/>
        <function-ref name="setSource" scoped="" ref="0x2ace7398b9d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace7398bb58"/>
        <function-ref name="type" scoped="" ref="0x2ace7398bce0"/>
        <function-ref name="setType" scoped="" ref="0x2ace7398be68"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace7398a020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace7398a1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace7398a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace73321020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace73321020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace73321370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace733214f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace73321680"/>
        <function-ref name="cancel" scoped="" ref="0x2ace73321808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace73321990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ace7331e6f8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ace7331e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7331ea68"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace7331ebf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7331ed78"/>
        <function-ref name="cancel" scoped="" ref="0x2ace7331d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace7331d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ace7331f8a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ace7331f8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ace7331fc18"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace7331fda0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7331e020"/>
        <function-ref name="cancel" scoped="" ref="0x2ace7331e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ace7331e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ace7331ca10" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace7331ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace7331cd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace7331a020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace7331a1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace7331a330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace7331a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2ace7331a780" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2ace7331a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace7331aad0"/>
        <function-ref name="runTask" scoped="" ref="0x2ace7331ac58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2ace73319020" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2ace73319020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ace73319370"/>
        <function-ref name="runTask" scoped="" ref="0x2ace733194f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ace7331d3f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace7331d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace7331d740"/>
        <function-ref name="source" scoped="" ref="0x2ace7331d8c8"/>
        <function-ref name="address" scoped="" ref="0x2ace7331da50"/>
        <function-ref name="destination" scoped="" ref="0x2ace7331dbd8"/>
        <function-ref name="setSource" scoped="" ref="0x2ace7331dd60"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace7331c020"/>
        <function-ref name="type" scoped="" ref="0x2ace7331c1a8"/>
        <function-ref name="setType" scoped="" ref="0x2ace7331c330"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace7331c4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace7331c640"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace7331c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ace732fda28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ace732fda28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ace732fdd78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ace732fc020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ace732fc1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ace732fc330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ace732fc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ace732fd490" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ace732fd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ace732fd7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ace732fc700" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="TestUsbStationAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ace732fc700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ace732fca50"/>
        <function-ref name="source" scoped="" ref="0x2ace732fcbd8"/>
        <function-ref name="address" scoped="" ref="0x2ace732fcd60"/>
        <function-ref name="destination" scoped="" ref="0x2ace732fb020"/>
        <function-ref name="setSource" scoped="" ref="0x2ace732fb1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ace732fb330"/>
        <function-ref name="type" scoped="" ref="0x2ace732fb4b8"/>
        <function-ref name="setType" scoped="" ref="0x2ace732fb640"/>
        <function-ref name="isForMe" scoped="" ref="0x2ace732fb7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ace732fb950"/>
        <function-ref name="localGroup" scoped="" ref="0x2ace732fbad8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ace7201e600" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.&#10;&#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ace7201f1d8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2ace72024408" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2ace72024198" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2ace7201cb78" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2ace720195a0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ace72019330" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2ace720250a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ace72019db8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2ace720258f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ace71f52290" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ace71f52a80" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ace72089a10" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72089a10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ace72090290" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ace72085e50" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ace72092a58" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ace720924c0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ace720927d8" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ace72083d60" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ace7208e258" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ace720909b0" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ace720835c8" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ace72086570" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ace72086300" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ace72091950" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ace720913b8" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ace720916d0" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ace72085020" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ace72086d40" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ace720857c8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ace720ba678" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace720ba678"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ace720ba8a8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720ba8a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ace720b3178" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720ba8a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ace720b5328" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ace720b4810" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720ba8a8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720ba8a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ace720b4270" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720ba8a8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ace720b4590" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720ba8a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ace720b5a70" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ace720b38f8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720ba8a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ace720b7390" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720ba8a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ace720b7120" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace720ba8a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ace720b7b60" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCompare" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x2ace72126758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
          <interfacedef-ref qname="HplAtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72126758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2ace72131bb8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ace72131948" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ace72134740" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ace72134070" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x2ace721309f0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ace72135070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72126758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ace72134de8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2ace72130328" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ace72131290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ace72135970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72126758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2ace72135700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72126758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ace721324e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ace72132b80" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCounter" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x2ace72120758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
          <interfacedef-ref qname="HplAtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72120758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2ace7212bc50" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ace7212b9e0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ace7212d7a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ace7211d070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72120758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ace7212de50" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2ace72129378" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ace7212d0d8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ace7212b328" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ace7211d970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72120758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2ace7211d700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72120758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ace7212c560" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ace7212cc00" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCapture" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x2ace72196068" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
          <interfacedef-ref qname="HplAtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72196068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2ace721a44e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2ace721a4270" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ace72193070" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ace72194958" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ace72196920" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72196068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ace72193718" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2ace721a4be0" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ace72192b88" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ace72194290" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72196068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2ace72194020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72196068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ace72193de0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ace721924b8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa_cb/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ace71fefcd8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the&#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ace71fa9320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10;&#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ace71ff3da0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ace71ff8428" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ace71ff8b60" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ace71ff7328" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ace720031d8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ace72002810" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ace72001020" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ace71ff7a40" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ace72001b20" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ace720018b0" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ace71ff9cd8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ace72003948" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ace720020d8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ace71fcf360" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ace72250a38" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72250a38"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ace72250c68" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72250c68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ace7224d528" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72250c68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ace7224c550" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ace7224dd38" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ace7224cc40" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <short>&#10; The interface to a TinyOS task scheduler.</short>
        <long>&#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ace71f42630" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Initialize the scheduler.</short>
          <long>&#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ace71f4f528" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ace71f42d48" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long>&#10; Run the next task if one is waiting, otherwise return immediately.&#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2ace7244d788" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ace7244d518" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ace7244bbf8" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ace7244b988" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ace72435b70" loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         starting or the device was off and the device is now ready to turn&#10;         on.  After receiving this return value, you should expect a&#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ace7244b020" loc="130:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         stopping or the device was on and the device is now ready to turn&#10;         off.  After receiving this return value, you should expect a&#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ace72430cd8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ace724303d8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ace72430738" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72430a48" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ace724292d8" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace7242bbe8" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72429020" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ace7242b3e0" loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ace7242d108" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace7242ee50" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ace7242c5c8" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace7242c020" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ace7242c348" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2ace72449020" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2ace72449020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2ace72448e58" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72448be8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ace72448520" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2ace72449020"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace724482b0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2ace72449b30" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace724498c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ace72446b30" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the&#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2ace72449020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72446568" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ace724468b0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2ace72449020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ace724322e8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
              <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace724288f0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ace72428c18" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72432020" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2ace72441020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72444cd8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2ace72440290" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72440020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2ace7245e338" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace7245e0c8" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2ace7245ba48" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2ace7245b290" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ace7245b020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ace7245a1d8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis&#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2ace724393b0" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ace72439140" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ace724243b0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ace72424140" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ace72415908" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ace724253b0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ace72425140" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ace7243fb18" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ace7243f560" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ace7243f898" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ace724236f8" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ace72423140" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ace72423478" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2ace7243c020" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ace7243ecf8" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ace7243a2a0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ace7243cce8" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2ace7243a020" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ace723e83b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ace7243dcf0" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ace7243da80" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ace724377b8" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ace72437208" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ace72437538" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2ace72436560" loc="195:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ace72474ab0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ace724721d8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ace72475d20" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ace72471020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ace72474400" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ace72472890" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ace72475020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ace72475690" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <short>&#10; The basic message data type accessors.</short>
        <long>&#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ace72554e50" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72554be0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ace72550e20" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength().&#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72550bb0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ace7256f020" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than&#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72570a08" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72570d18" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ace72570178" loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ace725722a0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72573c48" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72572020" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ace72566c50" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace725666c0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace725669d0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ace725832d8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72585c90" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72583020" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ace72585488" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ace725640a8" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72565e08" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ace725625c8" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;&#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72562020" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ace72562348" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Protection" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <short>&#10; Protection (Serial) Interface&#10; </short>
        <long>&#10; Protection (Serial) Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="sendLost" ref="0x2ace725f01d8" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="17:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered after invalid data found in protection component, following the reset&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="amTypeMismatch" ref="0x2ace725f23a0" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered if the message am_type in the sendDone event DO NOT match that used in send command&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleSendDone" ref="0x2ace725f2ac0" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
        <documentation loc="13:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/Protection.nc">
          <short>&#10; triggered when  'idle' protection component catch the sendDone event&#10;</short>
        </documentation>
        <interfacedef-ref qname="Protection"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RestartControl" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <short>&#10; Serial Restart Interface&#10; </short>
        <long>&#10; Serial Restart Interface&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="restart" ref="0x2ace725ce700" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/RestartControl.nc">
        <interfacedef-ref qname="RestartControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ace726647d0" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ace72663020" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialReset" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <short>&#10; Reset interface for Serial Protector&#10;&#10; </short>
        <long>&#10; Reset interface for Serial Protector&#10;&#10; @author tango&#10; @date 2014/03/17&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="txReset" ref="0x2ace72644258" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialReset.nc">
        <interfacedef-ref qname="SerialReset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ace72662b98" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ace726625f8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72662918" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2ace7265c4e0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ace7265c270" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2ace7265b2a0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ace7265cc58" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace7265b020" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2ace7265e258" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2ace7265aa38" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ace7265a160" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace7265a480" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ace7265a7a8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2ace7265ead0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ace72660358" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2ace7265fa50" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace7265fd70" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ace726600c8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2ace72640348" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72642ce8" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2ace726400c8" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2ace72643610" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2ace72642418" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.&#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72643e28" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2ace72642198" loc="23:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2ace72690020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2ace72693778" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short>&#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2ace72699710" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2ace72698ab0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2ace72695578" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.&#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ace72695308" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2ace72697328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2ace72698290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ace72698020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2ace72695d70" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2ace72697b78" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been&#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2ace726a1ba0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2ace726a04b8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2ace726a12a0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2ace7267cb98" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
          <variable name="first_byte" ref="0x2ace726a1020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2ace7269f020" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ace726a0d40" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2ace7267bd48" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="proto" ref="0x2ace7267bad8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2ace7269c9f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ace7269c780" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2ace7269b4b8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ace7269b248" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ace728824a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ace72882238" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2ace728812a0" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2ace72882c98" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2ace72881020" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2ace7289d3e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2ace7289e5b0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2ace7289a9f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ace7289a780" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2ace7289ba38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2ace7286f730" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2ace7286fe50" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2ace7289ecd0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2ace7289dac0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2ace7289b3a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ace7289b138" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2ace7289a110" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2ace72a20b18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ace72a20b18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2ace72a500d8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ace72a20b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2ace72a4e9a0" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ace72a20b18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2ace72a4e730" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ace72a20b18"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2ace7191b488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2ace7191b488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2ace72a4d870" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it,&#10; where 0 is the head of the queue and (size - 1) is the tail.&#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ace72a20b18"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ace72a4d600" loc="108:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x2ace72a53a80" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2ace72a51968" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ace72a50bf8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ace72a20b18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2ace72a53378" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2ace72a511d8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2ace72a62560" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2ace72a622f0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sniff" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <short>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; </short>
        <long>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; @author tango&#10; @date 2014/03/12&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="catch" ref="0x2ace72ac35c0" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
          <short>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; </short>
          <long>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; @param 'message_t* ONE msg'        the receied packet&#10; @param 'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param len      the length of the data region pointed to by payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Sniff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72a8eb78" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ace72ac3020" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72ac3330" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2ace72abf2a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10;&#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2ace72a8db60" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ace72abf020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2ace72ab7860" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72ab7278" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2ace72ab75e0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2ace72ab5948" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72ab56d8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2ace72ab9a60" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2ace72ab9108" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2ace72abde58" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ace72aab130" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72aab130"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ace72aab360" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72aab360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2ace72aa9020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72aab360"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72aaad78" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2ace72ae1108" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72aa9e38" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2ace72aabe80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72aabc10" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ace72adf348" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72aab360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72ae1d30" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ace72adf0c8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace72aab360"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2ace72aaf800" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72aaf590" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2ace72ab6b30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72ab6548" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2ace72ab68b0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2ace72ab28a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72ab2630" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2ace72ab1e48" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72ab1860" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2ace72ab1bc8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2ace72aae728" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72aae4b8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ace72af95f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace72af95f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ace72af9e80" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short>&#10; Return current time.</short>
          <long>&#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2ace72afae30" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72afabc0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AntennaDiversityConfig" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <short>&#10; antenna user mode manager&#10;&#10; </short>
        <long>&#10; antenna user mode manager&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rxModeSet" ref="0x2ace72b2b7d0" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rxmode" ref="0x2ace72b2b560" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rxModeGet" ref="0x2ace72b2a020" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeSet" ref="0x2ace72b2a998" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txmode" ref="0x2ace72b2a728" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeGet" ref="0x2ace72b290d8" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ace72b0fc78" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2ace72b10d50" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ace72b10460" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ace72b0f518" loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ace72b0e840" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2ace72b0ac10" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b0a9a0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ace72b0d770" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ace72b0a290" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b0a020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ace72b07610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b07020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ace72b07390" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ace72b09938" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b09348" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ace72b096b8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2ace72b06980" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2ace723f3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b06710" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2ace72b05600" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2ace723f3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b05020" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ace72b05380" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2ace723f3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ace72b06020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b07cc0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2ace72b05d08" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2ace723f3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ace72b175c0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ace72b1bc98" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ace72b17020" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72b17330" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ace72b14988" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b143c0" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ace72b146d0" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ace72b15b70" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ace72b16338" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b160c8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ace72b152a0" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b16c68" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ace72b15020" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2ace72b65600" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2ace72b3d468" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b3d1f8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2ace72b692d0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b69060" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2ace72b689b8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up,&#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b68748" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ace72b6cc30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b6c9c0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ace72b6d5b8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b6d348" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ace72b6a900" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b6a348" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ace72b6a680" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ace72b6c2a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b6dcc0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ace72b6c020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ace72b68020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b699a0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ace72b69cd0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2ace72b72020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2ace72b72918" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2ace72b6f980" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b6f710" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2ace72b713d0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b71160" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2ace72b71e58" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b71be8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2ace72b83b60" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2ace72b84ce0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2ace723d9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2ace72b84a70" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2ace723d9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ace72b83458" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2ace72b84290" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2ace72b82328" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2ace723d9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2ace72b4de78" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b4dc08" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2ace72b45328" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2ace72b47b50" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ace72b47570" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ace72b478d0" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2ace72b4b8d8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b4b668" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2ace72b493b0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b49140" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2ace72b482a0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified&#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ace72b49c30" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ace72b48020" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2ace72b4c178" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2ace72b4ce80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b4c908" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ace72b4cc00" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2ace72b48d90" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b48b20" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses. It also&#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2ace72b56520" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b562b0" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2ace72b58d30" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b58ac0" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2ace72b63ba8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used,&#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b63608" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2ace72b63928" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2ace72b60b78" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b60908" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2ace72b8c2a0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b8eba0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ace72b8c020" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2ace72b60108" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b62e38" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2ace72b57af8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b57568" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2ace72b57878" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2ace72b5e478" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a&#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ace72b5fe30" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ace72b5e1f8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2ace72b8e468" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b8e1f8" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2ace72b62630" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b623c0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2ace72b5cd68" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b5caf8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2ace72b5c2e0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ace72b5ecc8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ace72b5c060" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2ace72b8a7b0" loc="178:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2ace723f3410"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2ace72b8cca0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b8ca30" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2ace72b8a020" loc="173:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2ace723f3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2ace72b8fa20" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b8f470" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ace72b8f7a0" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2ace72b5f630" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b5f3c0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2ace72b58348" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b5ad60" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2ace72b580c8" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2ace72b902a0" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b56c78" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2ace72b90020" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ace72b89290" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b89020" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2ace72b5bab0" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b5b538" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2ace72b5b830" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2ace72b6ee58" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used,&#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b6ebe8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2ace72b8b750" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b8b4e0" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2ace72b90ca8" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b90a38" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2ace72b5a5b8" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b5a348" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2ace72b42b28" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b42578" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2ace72b428a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2ace72b41328" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2ace72b433b0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b43140" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2ace72b43dd0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b43b60" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2ace72b3b4e8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b3b278" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2ace72b44a30" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b447c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2ace72b3bcd0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2ace72b39760" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b394f0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2ace72b7c468" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b7c1f8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ace72b7f968" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b7f6f8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ace72b7d020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ace72b7e710" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b7e160" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ace72b7e490" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2ace72b86e60" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure&#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b86bf0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2ace72b7da38" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b7d7c8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2ace72b50070" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if addressRecognition enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2ace72b515a8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAddressRecognition' TRUE to enable address recognition&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2ace72b51338" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ace72b53488" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckEnabled" ref="0x2ace72b4e360" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if ack enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2ace72b1ec48" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b1e9d8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAck" ref="0x2ace72b509d0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAck' TRUE to enable acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAck" ref="0x2ace72b50760" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2ace72b52020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b53cd0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2ace72b52aa8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72b52838" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.&#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2ace72bf80d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the&#10; run event is currently not executing, then it  is called immediately&#10; and this command returns only after the completion of the run event.&#10; If the run event is currently executed, then this method returns at&#10; once, and makes sure that the run event is called once more when&#10; it is finished. If this method is called from a task, then by the&#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2ace72bf8978" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2ace72bf7328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from&#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2ace72bfb990" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2ace72c382c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
              <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72c38020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2ace72c3fda0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a task. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72c3fb30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ace72c3a7a8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72c3a538" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ace72c3bcd0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72c3b728" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ace72c3ba50" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2ace72c64db8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2ace72c63c48" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2ace72c63558" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2ace72c645d8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2ace72c64020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ace723e8760"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ace72c64358" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2ace72cf6bb0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ace72cf34d0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side&#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2ace72cef988" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ace72cef1d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2ace72cf11d8" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2ace72cf19c8" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10;&#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2ace72d27620" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ace72cf0940"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ace72d273b0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ace72cf0940"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2ace72d2a7a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2ace72d29290" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ace72cf0940"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ace72d29020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ace72cf0940"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ace72d29b30" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue.&#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2ace72cf0940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2ace72e7fe70" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
              <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72e7fbc8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2ace72e7f290" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72e7f020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ace72e6c020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ace72e6ec58" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2ace72e6c790" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ace72e76c80" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ace72e76a10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ace72e6e5b8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ace72e6e348" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2ace72e73030" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ace72e74d90" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2ace72e714a8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1].&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ace72e71238" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2ace72e73ac0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ace72e73850" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2ace72e70020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ace72e71ca8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2ace72e745c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not&#10; found in the table, then the value NEIGHBORHOOD is  returned,&#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ace72e74358" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ace723e8b18"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2ace72f06760" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time. The radio cannot send or receive in this state&#10; and releases all access to shared resources (e.g. SPI bus).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2ace72f03790" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages&#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2ace72f02290" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ace72f02020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2ace72f029f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2ace72f03020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ace72f001d8" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ace71920160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2ace72f05e10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a tasklet. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72f05ba0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2ace72efd1d8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept&#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept&#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ace72efe998" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ace72efe728" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <short>&#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long>&#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2ace72f6dd88" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ace71920bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2ace72f6d5f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ace719216a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2ace72f8e518" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ace72f8e518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2ace72f8b020" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ace72f8e518"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2ace72f8ed50" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ace72f8e518"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2ace72fb2e50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72fb2be0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ace72fb7dd8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72fb7b68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2ace72fb3ab0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72fb3520" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ace72fb3830" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ace71f16818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ace72fb24e8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ace72fb2278" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ace72421780"/>
                <typename><typedef-ref name="message_t" ref="0x2ace72420cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2ace72ffc020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ace72ffdc68" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ace72ffd4e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ace7310a450" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ace7310ac28" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCalibration" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <short>&#10; FTN/CF/DCU Calibration Interface, recommanded to do it every 5 min or less&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="run" ref="0x2ace7311f790" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <interfacedef-ref qname="RadioCalibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ace71f4ae08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ace731896e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ace731896e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ace73189910" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace73189910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2ace731853c8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace73189910"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ace73185158" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ace73189910"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
