<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="58:CountToRadioAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b76433a0460"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b7642df3598"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b7642df3598"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b7643390640"/></to>
    </wire>
    <wire loc="59:CountToRadioAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76433a3d70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76433ff1b8"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b76433ff1b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b76433fb930"/></to>
    </wire>
    <wire loc="63:CountToRadioAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b7642de5d80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7643427470"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7643427470"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b7642f45510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:CountToRadioAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b76433ec460"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b764344b750"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b764344b750"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76434666f0"/></to>
    </wire>
    <wire loc="71:CountToRadioAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b76433db278"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7643cd6390"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b7643cd6390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b76441e2400"/></to>
    </wire>
    <wire loc="72:CountToRadioAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b76433f5b58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7643cd5bd8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b7643cd5bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b76441e0bd8"/></to>
    </wire>
    <wire loc="76:CountToRadioAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76433f0c58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7643ccfc20"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7643ccfc20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7643446928"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b7643a9d788"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7643905b40"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b7644012430"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76437fe238"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7643feade8"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7643f44438"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7643e73660"/></to>
    </wire>
    <wire loc="16:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7642fa5378"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b7643390c78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b7642c1b020"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b7642c1b020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b7642da92a8"/></to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b764338f6a8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b7643a9fc10"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b764338f6a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7642df4888"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7642df4888"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7642dfee78"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b764338fd70"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7642dfb790"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7642e3b8b8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b7642dee538"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b764342dc28"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x2b7642df8bd8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x2b7642dee538"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x2b7642df8578"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7642e01560"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7642e01560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7642e2cab0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="Max706Init" scoped="" ref="0x2b7642e08340"/></from>
      <to><interface-ref name="Max706Init" scoped="" ref="0x2b7642e575c0"/></to>
    </wire>
    <wire loc="21:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="Max706Init" scoped="" ref="0x2b7642e575c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7642e61518"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <from><interface-ref name="At45dbInit" scoped="" ref="0x2b7642e089b0"/></from>
      <to><interface-ref name="At45dbOff" scoped="" ref="0x2b7643200820"/></to>
    </wire>
    <wire loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <from><interface-ref name="At45dbOff" scoped="" ref="0x2b7643200820"/></from>
      <to><interface-ref name="At45dbOff" scoped="" ref="0x2b764321f728"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b7642e01c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76441a8810"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b7642e01c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7644183810"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b7642e01c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7643db2108"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b7642e01c48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7643d8b080"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x2b7642e2b858"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x2b7642e01c48"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x2b7642e2a020"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x2b7642e00320"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x2b7642e2a688"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x2b7642e10b80"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b7642e2b1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7642e3b288"/></to>
    </wire>
    <wire loc="18:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b7642e61b20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b7642df3598"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="WDI" scoped="" ref="0x2b7642f2ee38"/></from>
      <to><interface-ref name="WDI" scoped="" ref="0x2b7642e6da10"/></to>
    </wire>
    <wire loc="15:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
      <from><interface-ref name="WDI" scoped="" ref="0x2b7642e6da10"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x2b7642e8daf0"/></to>
    </wire>
    <wire loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="TimerWD" scoped="" ref="0x2b7642f31dd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7643207128"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7643207128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b7642f45510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <from><interface-ref name="Reflush" scoped="" ref="0x2b7642f261d8"/></from>
      <to><interface-ref name="Reflush" scoped="" ref="0x2b7642e57c50"/></to>
    </wire>
    <wire loc="161:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b7642e8daf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee1d28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b7642e977e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eef020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b7642e89348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed87c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b7642e92348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee7a88"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b7642e9d020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee1d28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b7642ea54d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eef020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b7642e77020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ea0b28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b7642e8cc78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee1d28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b7642e75348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed0020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b7642e7e4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eca370"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b7642e867e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed87c0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b7642e8f7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee7a88"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b7642e697e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ea0b28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b7642e727e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed0020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b7642e7b968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eca370"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b7642e83c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed87c0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b7642e9a4d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee1d28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b7642ea71a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eef020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b7642e94020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee7a88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b7642e66c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ea0b28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b7642e6fe00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed0020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b7642e96e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eef020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b7642e801a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eca370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b7642e884d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed87c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b7642e914d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee7a88"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b7642e9c1a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee1d28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b7642e761a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ea0b28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b7642e744d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed0020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b7642e7d658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eca370"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b7642e85968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed87c0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b7642e8e968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee7a88"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b7642e68968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ea0b28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b7642e71968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed0020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b7642e7aaf0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eca370"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b7642e98658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee1d28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b7642e8be00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed87c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b7642e931a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee7a88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b7642e9fe00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee1d28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b7642ea6348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eef020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b7642e65e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ea0b28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b7642e81020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed0020"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b7642e7f348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eca370"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b7642e87658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed87c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b7642e90658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee7a88"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b7642e9b348"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee1d28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b7642e6c578"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ea0b28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b7642e73658"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed0020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b7642e7c7e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eca370"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b7642e84af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed87c0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b7642ea8020"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eef020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b7642e82e00"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ee7a88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b7642e79c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642eca370"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b7642e67af0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ea0b28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b7642e70c78"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x2b7642ed0020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <from><interface-ref name="wd_task" scoped="" ref="0x2b7642f27360"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b7642f45510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b76431f5af8"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76431b8648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76431881a8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76431881a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7643d3b610"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b76431efe80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b764319e290"/></to>
    </wire>
    <wire loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b7643d84b10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7643d418c0"/></to>
    </wire>
    <wire loc="17:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7643d418c0"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x2b7642f55988"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7643d38778"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b764312f610"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b764312f610"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7643127270"/></to>
    </wire>
    <wire loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="ClientAlarm" scoped="" ref="0x2b7642f55988"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7642fa5cc0"/></to>
    </wire>
    <wire loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b7642f9f020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b764311ae10"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b764311ae10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7643da35a0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7643da35a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7643d8b828"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643da0690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7643022a88"/></to>
    </wire>
    <wire loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7643022a88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b764303cad0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b7643d9b368"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b764301bbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643d879e8"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643da0690"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b7643dd1568"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b7643d9b368"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2b764302e0c8"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2b7643040e00"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b764301bbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b7643035700"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b764301bbe0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b764304a988"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b764301bbe0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b7643045b88"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b7643054148"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b7642dd01e0"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7642dce2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7643acf168"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7642dce2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b76432a2558"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7642dce2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7643055a50"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76430dd2b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76430f4dd8"/></to>
    </wire>
    <wire loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76430f4dd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7643db28b0"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643121020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7643022a88"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643daf9e8"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643121020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b7643147450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76430dd2b0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b76431b55e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b764320a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76432125e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b764322b978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <from><interface-ref name="SSN" scoped="" ref="0x2b764321fdc0"/></from>
      <to><interface-ref name="SSN" scoped="" ref="0x2b7643363220"/></to>
    </wire>
    <wire loc="24:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="SSN" scoped="" ref="0x2b7643363220"/></from>
      <to><interface-ref name="PortG2" scoped="" ref="0x2b7642ea8020"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b7643242c20"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b7643291020"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b764322d020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b7643292020"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b764321d918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7643293978"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b7643227668"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b76432925b8"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b764322b978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b7643346748"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b7643346748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b7643e71a28"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b764336b550"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7643291860"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b76432900a0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b76432ae8b0"/></to>
    </wire>
    <wire loc="83:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b76432ae8b0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b76432a6738"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b764328ed20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b7642dd01e0"/></to>
    </wire>
    <wire loc="288:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b764328d368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b76432bf4d8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b7642dd01e0"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b76432a2c08"/></from>
      <to><interface-ref name="PortG2" scoped="" ref="0x2b7642ea8020"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="OSS" scoped="" ref="0x2b76432a1de0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b7642e75348"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b764329e020"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b7642e744d0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b764329d190"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b7642e73658"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b76432c0338"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b7642e727e0"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b7643345510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b7643e6f820"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7643345c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7643e6e020"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7643e6e8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b764336b550"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b7643e6d0a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b7643e73c38"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b7643e6db50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="WPN" scoped="" ref="0x2b764335dca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b7643372c68"/></to>
    </wire>
    <wire loc="30:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b764335eb30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b7643374958"/></to>
    </wire>
    <wire loc="28:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b7643361688"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b7642e727e0"/></to>
    </wire>
    <wire loc="26:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b76433624f0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b7642e744d0"/></to>
    </wire>
    <wire loc="29:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x2b764335f9a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x2b764335a5d8"/></to>
    </wire>
    <wire loc="27:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b7643360810"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b7642e73658"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642da81c8"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b7642da5668"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b7642d1fcb8"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b764342dc28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b76433fb368"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b7643423020"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b76433fc710"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b76433fc710"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b7642e70c78"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b7643422190"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b764342f958"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b764342f958"/></from>
      <to><interface-ref name="PortG5" scoped="" ref="0x2b7642ea54d0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b7643421338"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b764342eae0"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b764342eae0"/></from>
      <to><interface-ref name="PortG0" scoped="" ref="0x2b7642e977e0"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b76434666f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b764348f020"/></to>
    </wire>
    <wire loc="62:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b76434431c8"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b764348b020"/></to>
    </wire>
    <wire loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b764348b020"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b76434b8810"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b764343b720"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b764348bb28"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b764348bb28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b76434b6348"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b7643442020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b76434898d8"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b76434898d8"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b76434b39e8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b7643447798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7643463798"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b7643463798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b76434ba020"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b7643444498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b764348c498"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b764348c498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b76434b9d10"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b764344f418"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b7643485628"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b7643485628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b76434c86a8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7643446928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b764348d928"/></to>
    </wire>
    <wire loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b764348d928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76434b91c8"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7643473260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b764349dcb8"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b764349dcb8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b76434e4a48"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7643457cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7643486c78"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7643486c78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76434a5cb8"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b76434721d8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b7643484128"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b7643484128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b76434c72d0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b7643442c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b76434875d0"/></to>
    </wire>
    <wire loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b76434875d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b76434b42c0"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7643469130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7643496bf0"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7643496bf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76434dd9d8"/></to>
    </wire>
    <wire loc="219:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b764348f020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b7643828988"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b76434a2348"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b76434bf348"/></to>
    </wire>
    <wire loc="332:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b76434bf348"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b7643a7f020"/></to>
    </wire>
    <wire loc="278:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76434dd9d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76439cd920"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b76434b8810"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b7643698020"/></to>
    </wire>
    <wire loc="135:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b76434b6348"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b76436986f8"/></to>
    </wire>
    <wire loc="137:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b76434b39e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b764369b578"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b76434ba020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b764369a388"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b76434b9d10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b76436997e0"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b7643479020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b76434c2020"/></to>
    </wire>
    <wire loc="330:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b76434c2020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b7643a81b10"/></to>
    </wire>
    <wire loc="220:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b76434c86a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b764384c060"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76434b91c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76436990c8"/></to>
    </wire>
    <wire loc="277:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b76434e4a48"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7643a0a598"/></to>
    </wire>
    <wire loc="111:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b764349a8b0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b76434e5630"/></to>
    </wire>
    <wire loc="334:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b76434e5630"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7643a76220"/></to>
    </wire>
    <wire loc="106:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b764347bc58"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b76434c6b78"/></to>
    </wire>
    <wire loc="331:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b76434c6b78"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b7643a7a860"/></to>
    </wire>
    <wire loc="255:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76434a5cb8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7643939578"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b764348a718"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b76434b5020"/></to>
    </wire>
    <wire loc="139:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b76434b5020"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7643698e10"/></to>
    </wire>
    <wire loc="198:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b76434c72d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b7643833268"/></to>
    </wire>
    <wire loc="136:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b76434b42c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b764369c020"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b7643480c30"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b76434c6020"/></to>
    </wire>
    <wire loc="231:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b76434c6020"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b76438ccbd0"/></to>
    </wire>
    <wire loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b764349cca8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76434e1db8"/></to>
    </wire>
    <wire loc="333:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76434e1db8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b7643a779d0"/></to>
    </wire>
    <wire loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b7643489300"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b76434b5bb0"/></to>
    </wire>
    <wire loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b76434b5bb0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b7643697550"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b7643828988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b764384cb30"/></to>
    </wire>
    <wire loc="317:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b76434e10d0"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643a50b60"/></to>
    </wire>
    <wire loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b7643a7f020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b7643a950c8"/></to>
    </wire>
    <wire loc="171:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b76434b1710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b76436e2268"/></to>
    </wire>
    <wire loc="159:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b76434b0420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76436aed88"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76436aed88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b7643f42918"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Sniff" scoped="" ref="0x2b7643698020"/></from>
      <to><interface-ref name="Sniff" scoped="" ref="0x2b7643ef1c28"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b76436986f8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b7643ef0388"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b764369a388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7643ef2100"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b76436997e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b7643ef1550"/></to>
    </wire>
    <wire loc="172:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b76434ca9c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7643791900"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7643791900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7643fdf020"/></to>
    </wire>
    <wire loc="173:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b76434a5020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b76436e4340"/></to>
    </wire>
    <wire loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b7643a81b10"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b7643a99cf0"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b764384c060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b764401a458"/></to>
    </wire>
    <wire loc="316:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b76434bd838"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643a3ea50"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b764369b578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7643ef33f0"/></to>
    </wire>
    <wire loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76436990c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7643ef2df8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7643a0a598"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b76440e62d0"/></to>
    </wire>
    <wire loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7643a76220"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b7643bb2188"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b7643a7a860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b7643ad4860"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b76434a9250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b76436e3020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7643698e10"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7643ef0aa0"/></to>
    </wire>
    <wire loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b7643833268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b764382e470"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b76438ccbd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b76440119c8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b764369c020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7643ef6e40"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76439cd920"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76440ea688"/></to>
    </wire>
    <wire loc="170:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b76434b1020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b76436e3c18"/></to>
    </wire>
    <wire loc="105:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b7643a779d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b7643ad19d0"/></to>
    </wire>
    <wire loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b7643697550"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b7643eef1e0"/></to>
    </wire>
    <wire loc="112:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b764351a858"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7643794980"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7643794980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7643f8b020"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7643541640"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b76435942e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b76435168b8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7643a0a598"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2b764353b810"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a857b0"/></to>
    </wire>
    <wire loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a857b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a9a530"/></to>
    </wire>
    <wire loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76435be2d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7643a744b8"/></to>
    </wire>
    <wire loc="110:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7643a744b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7643bb3160"/></to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7643694a08"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b7643508b48"/></to>
    </wire>
    <wire loc="127:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7643695a50"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b764368db40"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7643694430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b7643710908"/></to>
    </wire>
    <wire loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7643697ba8"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b764370f020"/></to>
    </wire>
    <wire loc="148:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b76436b1020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b76436aed88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b764368c618"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b7643710020"/></to>
    </wire>
    <wire loc="164:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b76436e2860"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7643794980"/></to>
    </wire>
    <wire loc="165:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76436de740"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b76436d6230"/></to>
    </wire>
    <wire loc="166:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76436dd060"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b76436d6b18"/></to>
    </wire>
    <wire loc="167:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b76436df900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7643712120"/></to>
    </wire>
    <wire loc="180:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b764370fe00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b764380b470"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b764380b470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7643feed98"/></to>
    </wire>
    <wire loc="181:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b764370e740"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7643834bd0"/></to>
    </wire>
    <wire loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b7643834bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b76438315b8"/></to>
    </wire>
    <wire loc="182:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b764370ed18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b76437c7b98"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b76437c7b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7643fde268"/></to>
    </wire>
    <wire loc="187:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b76437c6ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7643833e20"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7643833e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7643831b90"/></to>
    </wire>
    <wire loc="192:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7643809580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b76434ee5f0"/></to>
    </wire>
    <wire loc="193:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b764380a510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76438342e8"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b76438342e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7643832c38"/></to>
    </wire>
    <wire loc="199:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b764382fa10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7643939578"/></to>
    </wire>
    <wire loc="200:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7643832c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b764384f430"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b764384f430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b764384b5c8"/></to>
    </wire>
    <wire loc="201:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76438315b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b764384fd18"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b764384fd18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b764384a020"/></to>
    </wire>
    <wire loc="202:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7643831b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b764384d2e8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b764384d2e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b764384a5f8"/></to>
    </wire>
    <wire loc="215:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b764384cb30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b76438cd270"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b76438cd270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b7644013870"/></to>
    </wire>
    <wire loc="216:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b764384b5c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b76438cdce0"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b76438cdce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7644012a08"/></to>
    </wire>
    <wire loc="217:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b764384a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b76438cc638"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b76438cc638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b7644011430"/></to>
    </wire>
    <wire loc="218:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b764384a5f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a06020"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a06020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b76440e4cd8"/></to>
    </wire>
    <wire loc="228:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b76438ca3f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b76438f2020"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b76438f2020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b764408cb58"/></to>
    </wire>
    <wire loc="229:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b76438cac98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b764380bd18"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b764380bd18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7643fea6c8"/></to>
    </wire>
    <wire loc="230:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b76438cb5d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b7643a1cb10"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b7643a1cb10"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b7643a15020"/></to>
    </wire>
    <wire loc="235:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b764380adf8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b76438f28c8"/></to>
    </wire>
    <wire loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b76438f28c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b764408a578"/></to>
    </wire>
    <wire loc="244:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b76438f0ce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b7643514950"/></to>
    </wire>
    <wire loc="245:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b76438f10c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7643927558"/></to>
    </wire>
    <wire loc="246:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76438f19a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7643931020"/></to>
    </wire>
    <wire loc="247:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b76438f00f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b76435942e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b764395b190"/></from>
      <to><interface-ref name="SoftAckAlarm" scoped="" ref="0x2b7643a708e0"/></to>
    </wire>
    <wire loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftAckAlarm" scoped="" ref="0x2b7643a708e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7643be9230"/></to>
    </wire>
    <wire loc="253:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b7643936d60"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b76439fe020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="254:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7643937060"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b764395c180"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="256:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7643937c58"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b76434f2468"/></to>
    </wire>
    <wire loc="257:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7643938020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b764397ba10"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b764397ba10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7643975020"/></to>
    </wire>
    <wire loc="258:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7643938908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b764397a3f0"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b764397a3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7643975908"/></to>
    </wire>
    <wire loc="259:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x2b76439357f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a857b0"/></to>
    </wire>
    <wire loc="260:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b76439317e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7643927e00"/></to>
    </wire>
    <wire loc="261:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7643962020"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7643794980"/></to>
    </wire>
    <wire loc="262:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b764395f020"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b76434fb3a8"/></to>
    </wire>
    <wire loc="267:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b76439725b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b76435057b0"/></to>
    </wire>
    <wire loc="268:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7643975020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7643a1b888"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b7643a1b888"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7643a14020"/></to>
    </wire>
    <wire loc="269:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7643975908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a1a268"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a1a268"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7643a14908"/></to>
    </wire>
    <wire loc="270:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2b76439740a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b7643a85020"/></to>
    </wire>
    <wire loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b7643a85020"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b7643a9bd70"/></to>
    </wire>
    <wire loc="275:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7643a05020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7643a76220"/></to>
    </wire>
    <wire loc="276:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7643a04020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b76439fea70"/></to>
    </wire>
    <wire loc="279:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b7643a04da0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b76439fe020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="284:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7643a20928"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a4f700"/></to>
    </wire>
    <wire loc="294:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7643a125b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b76435057b0"/></to>
    </wire>
    <wire loc="295:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7643a14020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7643a4c3f0"/></to>
    </wire>
    <wire loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b7643a4c3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7643a478c8"/></to>
    </wire>
    <wire loc="296:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7643a14908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a87748"/></to>
    </wire>
    <wire loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a87748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a9b5f8"/></to>
    </wire>
    <wire loc="297:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2b7643a15020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b7643a4e5f8"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b7643a4e5f8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b7643a48a08"/></to>
    </wire>
    <wire loc="306:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2b7643a48a08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b7643a88020"/></to>
    </wire>
    <wire loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b7643a88020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b7643a9dd88"/></to>
    </wire>
    <wire loc="307:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7643a478c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7643a88dc0"/></to>
    </wire>
    <wire loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b7643a88dc0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b7643a9cbc0"/></to>
    </wire>
    <wire loc="312:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntCtrlFlag" scoped="" ref="0x2b7643a91618"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b76439fe020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="313:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643aa9e28"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643a50b60"/></to>
    </wire>
    <wire loc="314:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643aabc80"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643a3ea50"/></to>
    </wire>
    <wire loc="315:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2b7643aa79c8"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2b7643a3e1e8"/></to>
    </wire>
    <wire loc="318:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643535998"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643a50b60"/></to>
    </wire>
    <wire loc="319:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643537698"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643a3ea50"/></to>
    </wire>
    <wire loc="323:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7643a900c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a857b0"/></to>
    </wire>
    <wire loc="328:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7643ab1a48"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b76434fb3a8"/></to>
    </wire>
    <wire loc="329:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b7643aae020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7643a0a598"/></to>
    </wire>
    <wire loc="336:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b7643aa63c0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b76439fe020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="337:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b7643aa5020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b76439fe020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="338:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b7643aa5b78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b76439fe020"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b76435942e8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b7643eba718"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7643eb9660"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76435be2d0"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b7643eb5568"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b76435cbc30"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7643eeb700"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76436834d8"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7643eef838"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7643697ba8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7643eee740"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b7643695a50"/></to>
    </wire>
    <wire loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7643eed060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7643694430"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7643eed738"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7643694a08"/></to>
    </wire>
    <wire loc="99:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b76436adaf8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b7643f41698"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76436ac268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7643f41dd8"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7643f3f6c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76436acae8"/></to>
    </wire>
    <wire loc="103:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b7643f3fe40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b7643f44a10"/></to>
    </wire>
    <wire loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b7643f3e920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7643fdd060"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76436834d8"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b7643fddad0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b76437c6ab0"/></to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b7643fe7020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b76437cbd70"/></to>
    </wire>
    <wire loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b76437cbd70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b76437fe850"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7643fe7bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7643fe4140"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7643fe4140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b76437fdb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b7643fe9458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b764380a510"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7643fe9d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b764380adf8"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b7643fe84a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7643809580"/></to>
    </wire>
    <wire loc="118:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b764382d100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b764382fa10"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b7644010450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b76438cb5d8"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b764400f268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b76435cbc30"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b764400fc98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b76438ca3f0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7644067578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b76438cac98"/></to>
    </wire>
    <wire loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b76440664f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b7644066c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b7644067d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b764408ad38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b76438f10c0"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b76440862a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b76438f0ce8"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b7644089670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b76438f19a8"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b7644089d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b76438f00f0"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b76440889d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b7643906690"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b7643906690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b7643900568"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2b7644086d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b7643904668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b7643901528"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b764390a940"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7643905b40"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b764395c180"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b76440ae5a0"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76440ad4d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b764395b190"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b76440aa528"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b76435cbc30"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b764397e338"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b7643978658"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b764397ab10"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b76439740a0"/></to>
    </wire>
    <wire loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b764397dbe0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b7643976020"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7643979268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7643974800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b7643978020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b76439725b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b764397d648"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b7643977a08"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b764397ed68"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b7643977120"/></to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b76440df8a8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7643a04020"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b76440e16d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7643a05020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b76440e08c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b76439df380"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b76439df380"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b76439ddab0"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b76440e2b30"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b7643a04da0"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b76439dcc80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b764312f610"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b7643a1d268"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b7643a184d0"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b7643a1a988"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b7643a130a0"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a190e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7643a13800"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b7643a19e60"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7643a125b8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b7643a1c578"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b7643a16908"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b7643a1dc98"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b7643a16020"/></to>
    </wire>
    <wire loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b7643a0ed08"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b7643a49020"/></to>
    </wire>
    <wire loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b7643a4b3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b7643a46a08"/></to>
    </wire>
    <wire loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a4bb10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b7643a442a8"/></to>
    </wire>
    <wire loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b7643a4a8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7643a43060"/></to>
    </wire>
    <wire loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a4cc98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b7643a462a8"/></to>
    </wire>
    <wire loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b7643a4e060"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b7643a48430"/></to>
    </wire>
    <wire loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b7643a0d780"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b7643a49a90"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7643bb3160"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b764413bab0"/></to>
    </wire>
    <wire loc="100:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b7643a7c3b0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b7643a92458"/></to>
    </wire>
    <wire loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7643be9230"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76441c0ab0"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b7643bb2188"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b7643baf560"/></to>
    </wire>
    <wire loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCalibration" scoped="" ref="0x2b7643a812b8"/></from>
      <to><interface-ref name="RadioCalibration" scoped="" ref="0x2b7643a99498"/></to>
    </wire>
    <wire loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b7643ac6588"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b7643ab1a48"/></to>
    </wire>
    <wire loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b7643ac4858"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b7643aa63c0"/></to>
    </wire>
    <wire loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b7643ac34f0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b7643aa5020"/></to>
    </wire>
    <wire loc="101:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b7643ac20e0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b7643aa5b78"/></to>
    </wire>
    <wire loc="104:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b7643ac2e50"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b7643aae020"/></to>
    </wire>
    <wire loc="107:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b7643ace7f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b7643bb2188"/></to>
    </wire>
    <wire loc="108:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x2b7643acda30"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x2b764302e0c8"/></to>
    </wire>
    <wire loc="115:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b7643ab92b0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b76435cbc30"/></to>
    </wire>
    <wire loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b7643acb498"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b7643bbab28"/></to>
    </wire>
    <wire loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b7643ab9d68"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b7642dd01e0"/></to>
    </wire>
    <wire loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="ExtAmpControl" scoped="" ref="0x2b7643ab8498"/></from>
      <to><interface-ref name="ExtAmpControl" scoped="" ref="0x2b7643aa4860"/></to>
    </wire>
    <wire loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643abeb00"/></from>
      <to><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643aabc80"/></to>
    </wire>
    <wire loc="133:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643abcc78"/></from>
      <to><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643aa9e28"/></to>
    </wire>
    <wire loc="134:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <from><interface-ref name="RxModeLock" scoped="" ref="0x2b7643aba840"/></from>
      <to><interface-ref name="RxModeLock" scoped="" ref="0x2b7643aa79c8"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7643bae758"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b76430dd2b0"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b764413bab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7644182020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7644138b18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7643022a88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b7644192610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b764301bbe0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b764417e0a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7644138b18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b764417ac28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b7644192610"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b76441c0ab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b76441a7020"/></to>
    </wire>
    <wire loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b76441bcb18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7643022a88"/></to>
    </wire>
    <wire loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b76441b7610"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b764301bbe0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b76441a30a0"/></from>
      <to><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b76441bcb18"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <from><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b764419fc28"/></from>
      <to><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b76441b7610"/></to>
    </wire>
    <wire loc="63:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b76441e2400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b76441d5790"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b7643cd5020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b76441e0020"/></to>
    </wire>
    <wire loc="64:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b76441e0020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7643442020"/></to>
    </wire>
    <wire loc="65:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b76441e0bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7643442c30"/></to>
    </wire>
    <wire loc="67:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b7643cd32a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b76441de2a8"/></to>
    </wire>
    <wire loc="66:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b76441de2a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7643457cb0"/></to>
    </wire>
    <wire loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b76441d4450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7643c4f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b76441d3060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7643442c30"/></to>
    </wire>
    <wire loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b7643c4f020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b7643c9e2c8"/></to>
    </wire>
    <wire loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b7643c9d060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b7643447798"/></to>
    </wire>
    <wire loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b7643c9dc38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7643442c30"/></to>
    </wire>
    <wire loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b7643c9b268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7643442020"/></to>
    </wire>
    <wire loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b7643c9a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b7643c9a7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b7643cc9268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b7643442020"/></to>
    </wire>
    <wire loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b7643cc9e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b7643442c30"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc" safe="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Max706C" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
        <short>&#10; External Watchdog Chip Max706reua&#10;&#10; </short>
        <long>&#10; External Watchdog Chip Max706reua&#10;&#10; @author tango&#10; @date 2013/10/15&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMax706PinsC" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
        <short>&#10; pins connection of Max706 (External WatchDog Component)&#10;&#10; </short>
        <long>&#10; pins connection of Max706 (External WatchDog Component)&#10;&#10; @author tango&#10; @date 2013/12/02&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Max706P" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
        <short>&#10; External Watchdog Chip Max706reua&#10;&#10; </short>
        <long>&#10; External Watchdog Chip Max706reua&#10;&#10; @author tango&#10; @date 2013/10/15&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Max706C.TimerWDC" loc="44(Max706C.TimerWDC):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C" loc="7(TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="MuxAlarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.VirtualizeAlarmC" loc="46(MuxAlarm62khz32C_.VirtualizeAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C" loc="37(MuxAlarm62khz32C_.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="0">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7642fabd40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fa84a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC" loc="35(Counter62khz32C.AtmegaCounterC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterC.AtmegaCounterP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76430f3020"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76430f3748"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbOffC" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
        <short>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; </short>
        <long>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; @author tango&#10; @date 2013/06/26&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbOffP" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
        <short>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; </short>
        <long>&#10; At45dbInit, make the device into deep sleep mode when no At45db connected&#10;&#10; @author tango&#10; @date 2013/06/26&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.SpiMaster" loc="89(Atm128SpiC.SpiMaster):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128SpiP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbPinsC" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
        <short>&#10; HPL implemenation for AT45DB custom pins&#10; </short>
        <long>&#10; HPL implemenation for AT45DB custom pins&#10; @author tango&#10; @date 2013/06/27&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbPinsC.NP0" loc="16(HplAt45dbPinsC.NP0):/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbPinsC.NP1" loc="16(HplAt45dbPinsC.NP1):/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbPinsC.NP2" loc="16(HplAt45dbPinsC.NP2):/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="CountToRadioC" loc="50:CountToRadioC.nc" safe="">
      <documentation loc="1:CountToRadio.h">
        <short>***********************************************************************&#10;> File Name: CountToRadio.h&#10;> Author: wangqi&#10;> Mail: 912293097@qq.com&#10;> Created Time: 2014&#9189;&#9145;&#9140;08&#9190;&#9116;&#9096;26&#9190;&#9111;&#9125; &#9190;&#9112;&#9119;&#9190;&#9116;&#9119;&#9188;&#9146;&#9100; 17&#9190;&#9111;&#9142;50&#9189;&#9096;&#9094;18&#9191;&#9127;&#9106;&#10;***********************************************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="CountToRadioAppC.Timer0" loc="44(CountToRadioAppC.Timer0):/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.RadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a&#10; specific random number generator, it should wire to that component&#10; directly.&#10;&#10; @author  Barbara Hohlt&#10; @author  Phil Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard&#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative&#10;  linear congruential generator,&#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1)&#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAddressRecognitionLayerC" loc="11(RFA1RadioC.SoftwareAddressRecognitionLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SoftwareAddressRecognitionLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC" loc="37(RFA1RadioC.SoftwareAckRadioAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP" loc="50(RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="1">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ADLayerC" loc="10(RFA1RadioC.ADLayerC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AntennaDiversityLayerC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="1">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7642fabd40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fa84a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC" loc="37(RFA1DriverLayerC.SoftAckAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="2">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP" loc="35(RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP):/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <instance number="2">
        <component-ref qname="AtmegaAlarmP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7642fabd40"/></type-var>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fa84a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CountToRadioAppC.AMSenderC" loc="47(CountToRadioAppC.AMSenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CountToRadioAppC.AMSenderC.SenderC" loc="47(CountToRadioAppC.AMSenderC.SenderC):/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CountToRadioAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CountToRadioAppC.AMSenderC.SenderC.AMQueueEntryP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CountToRadioAppC.AMReceiverC" loc="43(CountToRadioAppC.AMReceiverC):/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x2b7642ea27f0" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b7642ea2b58" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b7642eb2020" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this&#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MuxAlarm62khz32C" loc="7:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeAlarmC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc" abstract="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being&#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7642f67cd8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7642f67cd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7642f64460" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f64460"/></type-var>
        </typedef>
        <constant name="num_alarms" ref="0x2b7642f64770" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b7642fabd40" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7642fabd40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7642fa84a0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fa84a0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b7642fa87c0" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2b7642fa8af8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
          <component-ref qname="AtmegaAlarmC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaAlarmP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b7642fd2cd8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7642fd2cd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7642fce460" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fce460"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b7642fce780" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x2b7642fceab8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
          <component-ref qname="AtmegaAlarmP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b76430f3020" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76430f3020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b76430f3748" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76430f3748"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b76430f3a68" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
          <component-ref qname="AtmegaCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x2b76430eabe8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76430eabe8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b76430e7348" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76430e7348"/></type-var>
        </typedef>
        <constant name="mode" ref="0x2b76430e7668" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b7643129ab8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b7643129ab8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b7643126278" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b7643126278"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b7643126640" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b7643126640"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b7643126db8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b7643126db8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b76431241a0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b7643124930" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b7643124930"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b764312db48" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b764312db48"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b7643140348" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b7643140348"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b7643140710" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b7643140710"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b764315d020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b764315d020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b764315d3c8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7643181370" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7643181370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76431af020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76431af020"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b76431af330" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc" abstract="" safe="">
      <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b7643306060" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b7643300d98" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAddressRecognitionLayerC" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
        <short>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; </short>
        <long>&#10; Software Address Recognition Layer (above Software Acknowledgement Layer)&#10;&#10; @author tango&#10; @date 2014/02/27&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76439db450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76439db450"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AntennaDiversityLayerC" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc" abstract="">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayer.h">
        <short>&#10; Antenna Diversity Layer&#10;&#10; </short>
        <long>&#10; Antenna Diversity Layer&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="rxmode_dfl" ref="0x2b7643a3d020" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
        <constant name="txmode_dfl" ref="0x2b7643a3d378" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
          <component-ref qname="AntennaDiversityLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b7643c34b48" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b7643c2d5b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the&#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b7643c24170" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b7643c4a2a8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b7643cd1a08" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b7642df2aa8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b7642df2aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642df2df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b7642df3598" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b7642df3598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b7642df38e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7642df4888" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7642df4888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642df4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b7642dfb790" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7642dfb790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b7642dfbae0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b7642dfbc68"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b7642dfbdf0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b7642dee020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b7642dee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b7642dee538" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2b7642dee538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642dee888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7642dfee78" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7642dfee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642df81f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Max706Init" ref="0x2b7642e08340" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Max706Init" scoped="" ref="0x2b7642e08340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e08690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbInit" ref="0x2b7642e089b0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbInit" scoped="" ref="0x2b7642e089b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e08d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x2b7642df8bd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x2b7642df8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e08020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x2b7642df8578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x2b7642df8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642df88c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7642e01560" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7642e01560"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e018b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2b7642e00320" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2b7642e00320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e00670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2b7642e01c48" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2b7642e01c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e00020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x2b7642e2a688" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x2b7642e2a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e2a9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7642e2cab0" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7642e2cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e2ce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x2b7642e2a020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x2b7642e2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e2a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b7642e2b1f0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b7642e2b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e2b540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x2b7642e2b858" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x2b7642e2b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e2bba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7642e3b288" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7642e3b288"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e3b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b7642e3b8b8" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7642e3b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b7642e3bc08"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b7642e3bd90"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b7642e3a020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b7642e3a1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b7642e3a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x2b7642e10b80" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x2b7642e10b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e56020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Reflush" ref="0x2b7642e57c50" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <component-ref qname="Max706C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reflush" scoped="" ref="0x2b7642e57c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b7642e63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Max706Init" ref="0x2b7642e575c0" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706C.nc">
      <component-ref qname="Max706C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Max706Init" scoped="" ref="0x2b7642e575c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e57910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WDI" ref="0x2b7642e6da10" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/max706/HplMax706PinsC.nc">
      <component-ref qname="HplMax706PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDI" scoped="" ref="0x2b7642e6da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e6dd60"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e5f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e5f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e5f330"/>
        <function-ref name="get" scoped="" ref="0x2b7642e5f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e5f640"/>
        <function-ref name="set" scoped="" ref="0x2b7642e5f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e5f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b7642e977e0" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b7642e977e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e96020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e961a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e96330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e964b8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e96640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e967c8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e96950"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e96ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b7642e89348" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b7642e89348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e89698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e89820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e899a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e89b30"/>
        <function-ref name="get" scoped="" ref="0x2b7642e89cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e89e40"/>
        <function-ref name="set" scoped="" ref="0x2b7642e88020"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b7642e92348" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b7642e92348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e92698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e92820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e929a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e92b30"/>
        <function-ref name="get" scoped="" ref="0x2b7642e92cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e92e40"/>
        <function-ref name="set" scoped="" ref="0x2b7642e91020"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b7642e9d020" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b7642e9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e9d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e9d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e9d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e9d808"/>
        <function-ref name="get" scoped="" ref="0x2b7642e9d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e9db18"/>
        <function-ref name="set" scoped="" ref="0x2b7642e9dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e9de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b7642ea54d0" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b7642ea54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ea5820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ea59a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ea5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ea5cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7642ea5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ea4020"/>
        <function-ref name="set" scoped="" ref="0x2b7642ea41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ea4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b7642e77020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b7642e77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e77370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e774f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e77680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e77808"/>
        <function-ref name="get" scoped="" ref="0x2b7642e77990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e77b18"/>
        <function-ref name="set" scoped="" ref="0x2b7642e77ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e77e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b7642e8cc78" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b7642e8cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e9f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e9f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e9f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e9f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e9f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e9f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e9f950"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e9fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b7642e75348" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b7642e75348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e75698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e75820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e759a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e75b30"/>
        <function-ref name="get" scoped="" ref="0x2b7642e75cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e75e40"/>
        <function-ref name="set" scoped="" ref="0x2b7642e74020"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b7642e7e4d0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b7642e7e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e7e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e7e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e7eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e7ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e7ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e7d020"/>
        <function-ref name="set" scoped="" ref="0x2b7642e7d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e7d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b7642e867e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b7642e867e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e86b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e86cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e86e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e85020"/>
        <function-ref name="get" scoped="" ref="0x2b7642e851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e85330"/>
        <function-ref name="set" scoped="" ref="0x2b7642e854b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e85640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b7642e8f7e0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b7642e8f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e8fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e8fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e8fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e8e020"/>
        <function-ref name="get" scoped="" ref="0x2b7642e8e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e8e330"/>
        <function-ref name="set" scoped="" ref="0x2b7642e8e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e8e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b7642e697e0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b7642e697e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e69b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e69cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e69e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e68020"/>
        <function-ref name="get" scoped="" ref="0x2b7642e681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e68330"/>
        <function-ref name="set" scoped="" ref="0x2b7642e684b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e68640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b7642e727e0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b7642e727e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e72b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e72cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e72e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e71020"/>
        <function-ref name="get" scoped="" ref="0x2b7642e711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e71330"/>
        <function-ref name="set" scoped="" ref="0x2b7642e714b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e71640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b7642e7b968" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b7642e7b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e7bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e7be40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e7a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e7a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e7a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e7a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e7a640"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e7a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b7642e83c78" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b7642e83c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e82020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e821a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e82330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e824b8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e82640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e827c8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e82950"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e82ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b7642e9a4d0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b7642e9a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e9a820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e9a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e9ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e9acb8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e9ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e98020"/>
        <function-ref name="set" scoped="" ref="0x2b7642e981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e98330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b7642ea71a0" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b7642ea71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ea74f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ea7678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ea7800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ea7988"/>
        <function-ref name="get" scoped="" ref="0x2b7642ea7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ea7c98"/>
        <function-ref name="set" scoped="" ref="0x2b7642ea7e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ea6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b7642e94020" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b7642e94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e94370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e944f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e94680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e94808"/>
        <function-ref name="get" scoped="" ref="0x2b7642e94990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e94b18"/>
        <function-ref name="set" scoped="" ref="0x2b7642e94ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e94e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b7642e66c78" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b7642e66c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e65020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e651a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e65330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e654b8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e65640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e657c8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e65950"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e65ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b7642e6fe00" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b7642e6fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e6e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e6e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e6e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e6e640"/>
        <function-ref name="get" scoped="" ref="0x2b7642e6e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e6e950"/>
        <function-ref name="set" scoped="" ref="0x2b7642e6ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e6ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b7642e96e00" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b7642e96e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ea91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ea9330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ea94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ea9640"/>
        <function-ref name="get" scoped="" ref="0x2b7642ea97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ea9950"/>
        <function-ref name="set" scoped="" ref="0x2b7642ea9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ea9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b7642e801a0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b7642e801a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e804f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e80678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e80800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e80988"/>
        <function-ref name="get" scoped="" ref="0x2b7642e80b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e80c98"/>
        <function-ref name="set" scoped="" ref="0x2b7642e80e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b7642e884d0" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b7642e884d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e88820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e889a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e88b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e88cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e88e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e87020"/>
        <function-ref name="set" scoped="" ref="0x2b7642e871a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e87330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b7642e914d0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b7642e914d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e91820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e919a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e91b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e91cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e91e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e90020"/>
        <function-ref name="set" scoped="" ref="0x2b7642e901a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e90330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b7642e9c1a0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b7642e9c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e9c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e9c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e9c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e9c988"/>
        <function-ref name="get" scoped="" ref="0x2b7642e9cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e9cc98"/>
        <function-ref name="set" scoped="" ref="0x2b7642e9ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b7642e761a0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b7642e761a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e764f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e76678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e76800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e76988"/>
        <function-ref name="get" scoped="" ref="0x2b7642e76b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e76c98"/>
        <function-ref name="set" scoped="" ref="0x2b7642e76e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b7642e744d0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b7642e744d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e74820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e749a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e74b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e74cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e74e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e73020"/>
        <function-ref name="set" scoped="" ref="0x2b7642e731a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e73330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b7642e7d658" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b7642e7d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e7d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e7db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e7dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e7de40"/>
        <function-ref name="get" scoped="" ref="0x2b7642e7c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e7c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e7c330"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e7c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b7642e85968" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b7642e85968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e85cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e85e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e84020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e841a8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e84330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e844b8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e84640"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e847c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b7642e8e968" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b7642e8e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e8ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e8ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e8d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e8d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e8d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e8d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e8d640"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e8d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b7642e68968" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b7642e68968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e68cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e68e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e67020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e671a8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e67330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e674b8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e67640"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b7642e71968" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b7642e71968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e71db8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e70020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e701a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e70330"/>
        <function-ref name="get" scoped="" ref="0x2b7642e704b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e70640"/>
        <function-ref name="set" scoped="" ref="0x2b7642e707c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e70950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b7642e7aaf0" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b7642e7aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e7ae40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e79020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e791a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e79330"/>
        <function-ref name="get" scoped="" ref="0x2b7642e794b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e79640"/>
        <function-ref name="set" scoped="" ref="0x2b7642e797c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e79950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b7642e98658" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b7642e98658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e989a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e98b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e98cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e98e40"/>
        <function-ref name="get" scoped="" ref="0x2b7642e97020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e971a8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e97330"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e974b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b7642e8be00" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b7642e8be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e8a3e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e8a570"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e8a6f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e8a880"/>
        <function-ref name="get" scoped="" ref="0x2b7642e8aa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e8ab90"/>
        <function-ref name="set" scoped="" ref="0x2b7642e8ad18"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b7642e931a0" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b7642e931a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e934f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e93678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e93800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e93988"/>
        <function-ref name="get" scoped="" ref="0x2b7642e93b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e93c98"/>
        <function-ref name="set" scoped="" ref="0x2b7642e93e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b7642e9fe00" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b7642e9fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e9e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e9e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e9e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e9e640"/>
        <function-ref name="get" scoped="" ref="0x2b7642e9e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e9e950"/>
        <function-ref name="set" scoped="" ref="0x2b7642e9ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e9ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b7642ea6348" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b7642ea6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ea6698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ea6820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ea69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ea6b30"/>
        <function-ref name="get" scoped="" ref="0x2b7642ea6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ea6e40"/>
        <function-ref name="set" scoped="" ref="0x2b7642ea5020"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ea51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b7642e65e00" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b7642e65e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e641a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e64330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e644b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e64640"/>
        <function-ref name="get" scoped="" ref="0x2b7642e647c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e64950"/>
        <function-ref name="set" scoped="" ref="0x2b7642e64ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e64c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b7642e81020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b7642e81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e81370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e814f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e81680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e81808"/>
        <function-ref name="get" scoped="" ref="0x2b7642e81990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e81b18"/>
        <function-ref name="set" scoped="" ref="0x2b7642e81ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e81e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b7642e8daf0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b7642e8daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e8de40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e8c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e8c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e8c330"/>
        <function-ref name="get" scoped="" ref="0x2b7642e8c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e8c640"/>
        <function-ref name="set" scoped="" ref="0x2b7642e8c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e8c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b7642e7f348" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b7642e7f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e7f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e7f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e7f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e7fb30"/>
        <function-ref name="get" scoped="" ref="0x2b7642e7fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e7fe40"/>
        <function-ref name="set" scoped="" ref="0x2b7642e7e020"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b7642e87658" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b7642e87658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e879a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e87b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e87cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e87e40"/>
        <function-ref name="get" scoped="" ref="0x2b7642e86020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e861a8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e86330"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e864b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b7642e90658" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b7642e90658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e909a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e90b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e90cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e90e40"/>
        <function-ref name="get" scoped="" ref="0x2b7642e8f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e8f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e8f330"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e8f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b7642e9b348" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b7642e9b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e9b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e9b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e9b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e9bb30"/>
        <function-ref name="get" scoped="" ref="0x2b7642e9bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e9be40"/>
        <function-ref name="set" scoped="" ref="0x2b7642e9a020"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b7642e6c578" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b7642e6c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e6c8c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e6ca50"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e6cbd8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e6cd60"/>
        <function-ref name="get" scoped="" ref="0x2b7642e69020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e691a8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e69330"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e694b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b7642e73658" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b7642e73658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e739a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e73b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e73cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e73e40"/>
        <function-ref name="get" scoped="" ref="0x2b7642e72020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e721a8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e72330"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b7642e7c7e0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b7642e7c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e7cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e7ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e7ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e7b020"/>
        <function-ref name="get" scoped="" ref="0x2b7642e7b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e7b330"/>
        <function-ref name="set" scoped="" ref="0x2b7642e7b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e7b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b7642e84af0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b7642e84af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e84e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e83020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e831a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e83330"/>
        <function-ref name="get" scoped="" ref="0x2b7642e834b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e83640"/>
        <function-ref name="set" scoped="" ref="0x2b7642e837c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e83950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b7642ea8020" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b7642ea8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ea8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ea84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ea8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ea8808"/>
        <function-ref name="get" scoped="" ref="0x2b7642ea8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ea8b18"/>
        <function-ref name="set" scoped="" ref="0x2b7642ea8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ea8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b7642e82e00" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b7642e82e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e951a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e95330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e954b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e95640"/>
        <function-ref name="get" scoped="" ref="0x2b7642e957c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e95950"/>
        <function-ref name="set" scoped="" ref="0x2b7642e95ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e95c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b7642e79c78" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b7642e79c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e8b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e8b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e8b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e8b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e8b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e8b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e8b950"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e8bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b7642e67af0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b7642e67af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e67e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e66020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e661a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e66330"/>
        <function-ref name="get" scoped="" ref="0x2b7642e664b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e66640"/>
        <function-ref name="set" scoped="" ref="0x2b7642e667c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e66950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b7642e70c78" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b7642e70c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642e6f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642e6f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642e6f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642e6f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7642e6f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642e6f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b7642e6f950"/>
        <function-ref name="clr" scoped="" ref="0x2b7642e6fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b7642ea0b28" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b7642ea0b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ec3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ec31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ec3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ec34b8"/>
        <function-ref name="get" scoped="" ref="0x2b7642ec3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ec37c8"/>
        <function-ref name="set" scoped="" ref="0x2b7642ec3950"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ec3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b7642ed0020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b7642ed0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ed0390"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ed0518"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ed06a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ed0828"/>
        <function-ref name="get" scoped="" ref="0x2b7642ed09b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ed0b38"/>
        <function-ref name="set" scoped="" ref="0x2b7642ed0cc0"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ed0e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b7642eca370" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b7642eca370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642eca6e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642eca868"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642eca9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ecab78"/>
        <function-ref name="get" scoped="" ref="0x2b7642ecad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ec8020"/>
        <function-ref name="set" scoped="" ref="0x2b7642ec81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ec8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b7642ed87c0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b7642ed87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ed8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ed8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ed8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ed7020"/>
        <function-ref name="get" scoped="" ref="0x2b7642ed71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ed7330"/>
        <function-ref name="set" scoped="" ref="0x2b7642ed74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ed7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b7642ee7a88" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b7642ee7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ee7df8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ee6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ee61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ee6330"/>
        <function-ref name="get" scoped="" ref="0x2b7642ee64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ee6640"/>
        <function-ref name="set" scoped="" ref="0x2b7642ee67c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ee6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b7642ee1d28" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b7642ee1d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642ee00d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642ee0260"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642ee03e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642ee0570"/>
        <function-ref name="get" scoped="" ref="0x2b7642ee06f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642ee0880"/>
        <function-ref name="set" scoped="" ref="0x2b7642ee0a08"/>
        <function-ref name="clr" scoped="" ref="0x2b7642ee0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x2b7642eef020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x2b7642eef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642eef390"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642eef518"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642eef6a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642eef828"/>
        <function-ref name="get" scoped="" ref="0x2b7642eef9b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642eefb38"/>
        <function-ref name="set" scoped="" ref="0x2b7642eefcc0"/>
        <function-ref name="clr" scoped="" ref="0x2b7642eefe48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wd_task" ref="0x2b7642f27360" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wd_task" scoped="" ref="0x2b7642f27360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7642f276b0"/>
        <function-ref name="runTask" scoped="" ref="0x2b7642f27838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b7642e61b20" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b7642e61b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b7642e61e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Reflush" ref="0x2b7642f261d8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reflush" scoped="" ref="0x2b7642f261d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b7642f26528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7642e61518" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7642e61518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642e61868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerWD" ref="0x2b7642f31dd8" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerWD" scoped="" ref="0x2b7642f31dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7642f2e0c0"/>
        <function-ref name="fired" scoped="" ref="0x2b7642f24798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7642f2f4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7642f2f088"/>
        <function-ref name="getdt" scoped="" ref="0x2b7642f2e960"/>
        <function-ref name="gett0" scoped="" ref="0x2b7642f2e510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7642f24be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7642f259e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7642f2faa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7642f25e80"/>
        <function-ref name="stop" scoped="" ref="0x2b7642f24348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WDI" ref="0x2b7642f2ee38" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/max706/Max706P.nc">
      <component-ref qname="Max706P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WDI" scoped="" ref="0x2b7642f2ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7642f2d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7642f2d348"/>
        <function-ref name="toggle" scoped="" ref="0x2b7642f2d4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7642f2d658"/>
        <function-ref name="get" scoped="" ref="0x2b7642f2d7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7642f2d968"/>
        <function-ref name="set" scoped="" ref="0x2b7642f2daf0"/>
        <function-ref name="clr" scoped="" ref="0x2b7642f2dc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7643207128" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Max706C.TimerWDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7643207128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76432035f0"/>
        <function-ref name="fired" scoped="" ref="0x2b7643206a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76432048c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7643204470"/>
        <function-ref name="getdt" scoped="" ref="0x2b7643202020"/>
        <function-ref name="gett0" scoped="" ref="0x2b7643203a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643204020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7643207c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7643203020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7643206158"/>
        <function-ref name="stop" scoped="" ref="0x2b76432065f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b7642f45510" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b7642f45510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7642f41768"/>
        <function-ref name="fired" scoped="" ref="0x2b7642f44e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7642f42b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7642f42728"/>
        <function-ref name="getdt" scoped="" ref="0x2b7642f40088"/>
        <function-ref name="gett0" scoped="" ref="0x2b7642f41bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7642f422d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7642f44088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7642f41198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7642f44528"/>
        <function-ref name="stop" scoped="" ref="0x2b7642f449c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76431881a8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b76431881a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643185918"/>
        <function-ref name="fired" scoped="" ref="0x2b7643187980"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643185310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643187e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643185da0"/>
        <function-ref name="start" scoped="" ref="0x2b7643187020"/>
        <function-ref name="stop" scoped="" ref="0x2b76431874f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7643d418c0" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.MuxAlarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7643d418c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643d3e020"/>
        <function-ref name="fired" scoped="" ref="0x2b7643d3f020"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643d3f930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643d3f4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643d3e4a8"/>
        <function-ref name="start" scoped="" ref="0x2b7643d40660"/>
        <function-ref name="stop" scoped="" ref="0x2b7643d40b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientAlarm" ref="0x2b7642f55988" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/MuxAlarm62khz32C_.nc">
      <component-ref qname="MuxAlarm62khz32C_"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClientAlarm" scoped="" ref="0x2b7642f55988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7642f69020"/>
        <function-ref name="fired" scoped="" ref="0x2b7642f6a0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b7642f6a9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7642f6a548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7642f694a8"/>
        <function-ref name="start" scoped="" ref="0x2b7642f54730"/>
        <function-ref name="stop" scoped="" ref="0x2b7642f54c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7642fa5cc0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7642fa5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7642fa1470"/>
        <function-ref name="fired" scoped="" ref="0x2b7642fa34c8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7642fa3e18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7642fa3970"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7642fa1918"/>
        <function-ref name="start" scoped="" ref="0x2b7642fa4ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b7642fa3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7642fa5378" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7642fa5378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642fa56c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b7642f9f020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b7642f9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7642f9d690"/>
        <function-ref name="fired" scoped="" ref="0x2b7642f9e6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7642f9d088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7642f9eb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7642f9db18"/>
        <function-ref name="start" scoped="" ref="0x2b7642f9fd70"/>
        <function-ref name="stop" scoped="" ref="0x2b7642f9e270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b764311ae10" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b764311ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643117628"/>
        <function-ref name="fired" scoped="" ref="0x2b7643118580"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643117020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643118a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643117ab0"/>
        <function-ref name="start" scoped="" ref="0x2b7643119be8"/>
        <function-ref name="stop" scoped="" ref="0x2b76431180f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b7643d9b368" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b7643d9b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643d97580"/>
        <function-ref name="test" scoped="" ref="0x2b7643d9ae08"/>
        <function-ref name="fired" scoped="" ref="0x2b7643d9a980"/>
        <function-ref name="force" scoped="" ref="0x2b7643d96020"/>
        <function-ref name="get" scoped="" ref="0x2b7643d9a020"/>
        <function-ref name="reset" scoped="" ref="0x2b7643d98310"/>
        <function-ref name="getMode" scoped="" ref="0x2b7643d97a58"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643d970f8"/>
        <function-ref name="set" scoped="" ref="0x2b7643d9a4a8"/>
        <function-ref name="start" scoped="" ref="0x2b7643d98798"/>
        <function-ref name="stop" scoped="" ref="0x2b7643d98c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7643da35a0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7643da35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643da1c88"/>
        <function-ref name="fired" scoped="" ref="0x2b7643da2d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643da1680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643da11f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643da0150"/>
        <function-ref name="start" scoped="" ref="0x2b7643da23a8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643da2880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b7643da0690" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643da0690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643d9c930"/>
        <function-ref name="test" scoped="" ref="0x2b7643d9d1f8"/>
        <function-ref name="get" scoped="" ref="0x2b7643d9f3a8"/>
        <function-ref name="reset" scoped="" ref="0x2b7643d9d680"/>
        <function-ref name="getMode" scoped="" ref="0x2b7643d9ce08"/>
        <function-ref name="overflow" scoped="" ref="0x2b7643d9fd08"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643d9c4a8"/>
        <function-ref name="set" scoped="" ref="0x2b7643d9f830"/>
        <function-ref name="start" scoped="" ref="0x2b7643d9db08"/>
        <function-ref name="stop" scoped="" ref="0x2b7643d9c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b7643dd1568" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b7643dd1568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643dcd6f8"/>
        <function-ref name="test" scoped="" ref="0x2b7643dcf020"/>
        <function-ref name="fired" scoped="" ref="0x2b7643dd0a90"/>
        <function-ref name="force" scoped="" ref="0x2b7643dcc088"/>
        <function-ref name="get" scoped="" ref="0x2b7643dd0130"/>
        <function-ref name="reset" scoped="" ref="0x2b7643dcf4a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b7643dcdbd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643dcd270"/>
        <function-ref name="set" scoped="" ref="0x2b7643dd05b8"/>
        <function-ref name="start" scoped="" ref="0x2b7643dcf930"/>
        <function-ref name="stop" scoped="" ref="0x2b7643dcfdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7643d8b828" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7643d8b828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643d87020"/>
        <function-ref name="fired" scoped="" ref="0x2b7643d88020"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643d88930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643d884a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643d874a8"/>
        <function-ref name="start" scoped="" ref="0x2b7643d895e0"/>
        <function-ref name="stop" scoped="" ref="0x2b7643d89ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7643d8b080" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7643d8b080"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643d8b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b7643d879e8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="MuxAlarm62khz32C_.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643d879e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643dd3b80"/>
        <function-ref name="test" scoped="" ref="0x2b7643dd44a8"/>
        <function-ref name="get" scoped="" ref="0x2b7643dd5598"/>
        <function-ref name="reset" scoped="" ref="0x2b7643dd4930"/>
        <function-ref name="getMode" scoped="" ref="0x2b7643dd1088"/>
        <function-ref name="overflow" scoped="" ref="0x2b7643dd4020"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643dd36f8"/>
        <function-ref name="set" scoped="" ref="0x2b7643dd5a20"/>
        <function-ref name="start" scoped="" ref="0x2b7643dd4db8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643dd3270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7643022a88" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7643022a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b764301cb80"/>
        <function-ref name="test" scoped="" ref="0x2b764301d4a8"/>
        <function-ref name="get" scoped="" ref="0x2b764301f658"/>
        <function-ref name="reset" scoped="" ref="0x2b764301d930"/>
        <function-ref name="getMode" scoped="" ref="0x2b764301b088"/>
        <function-ref name="overflow" scoped="" ref="0x2b764301d020"/>
        <function-ref name="isOn" scoped="" ref="0x2b764301c6f8"/>
        <function-ref name="set" scoped="" ref="0x2b764301fae0"/>
        <function-ref name="start" scoped="" ref="0x2b764301ddb8"/>
        <function-ref name="stop" scoped="" ref="0x2b764301c270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2b764302e0c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b764302e0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b764303e270"/>
        <function-ref name="test" scoped="" ref="0x2b764302da58"/>
        <function-ref name="fired" scoped="" ref="0x2b764302d5d0"/>
        <function-ref name="get" scoped="" ref="0x2b764302ec48"/>
        <function-ref name="reset" scoped="" ref="0x2b7643025020"/>
        <function-ref name="getMode" scoped="" ref="0x2b764303e748"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643025db8"/>
        <function-ref name="set" scoped="" ref="0x2b764302d0f8"/>
        <function-ref name="start" scoped="" ref="0x2b76430254a8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643025930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b764301bbe0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b764301bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643031db8"/>
        <function-ref name="test" scoped="" ref="0x2b76430185b8"/>
        <function-ref name="fired" scoped="" ref="0x2b7643018130"/>
        <function-ref name="force" scoped="" ref="0x2b7643030778"/>
        <function-ref name="get" scoped="" ref="0x2b76430197a0"/>
        <function-ref name="reset" scoped="" ref="0x2b7643018a40"/>
        <function-ref name="getMode" scoped="" ref="0x2b76430302f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643031930"/>
        <function-ref name="set" scoped="" ref="0x2b7643019c28"/>
        <function-ref name="start" scoped="" ref="0x2b7643031020"/>
        <function-ref name="stop" scoped="" ref="0x2b76430314a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b7643035700" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b7643035700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b764304b930"/>
        <function-ref name="test" scoped="" ref="0x2b76430331f8"/>
        <function-ref name="fired" scoped="" ref="0x2b7643034d08"/>
        <function-ref name="force" scoped="" ref="0x2b764304a310"/>
        <function-ref name="get" scoped="" ref="0x2b76430343a8"/>
        <function-ref name="reset" scoped="" ref="0x2b7643033680"/>
        <function-ref name="getMode" scoped="" ref="0x2b764304be08"/>
        <function-ref name="isOn" scoped="" ref="0x2b764304b4a8"/>
        <function-ref name="set" scoped="" ref="0x2b7643034830"/>
        <function-ref name="start" scoped="" ref="0x2b7643033b08"/>
        <function-ref name="stop" scoped="" ref="0x2b764304b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b7643055a50" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7643055a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b7643055da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b764304a988" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b764304a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643046b80"/>
        <function-ref name="test" scoped="" ref="0x2b76430484a8"/>
        <function-ref name="fired" scoped="" ref="0x2b7643048020"/>
        <function-ref name="force" scoped="" ref="0x2b7643045510"/>
        <function-ref name="get" scoped="" ref="0x2b7643049560"/>
        <function-ref name="reset" scoped="" ref="0x2b7643048930"/>
        <function-ref name="getMode" scoped="" ref="0x2b7643045088"/>
        <function-ref name="isOn" scoped="" ref="0x2b76430466f8"/>
        <function-ref name="set" scoped="" ref="0x2b76430499e8"/>
        <function-ref name="start" scoped="" ref="0x2b7643048db8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643046270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b764303cad0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b764303cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643037b80"/>
        <function-ref name="test" scoped="" ref="0x2b76430384a8"/>
        <function-ref name="get" scoped="" ref="0x2b7643039690"/>
        <function-ref name="reset" scoped="" ref="0x2b7643038930"/>
        <function-ref name="getMode" scoped="" ref="0x2b7643035088"/>
        <function-ref name="overflow" scoped="" ref="0x2b7643038020"/>
        <function-ref name="isOn" scoped="" ref="0x2b76430376f8"/>
        <function-ref name="set" scoped="" ref="0x2b7643039b18"/>
        <function-ref name="start" scoped="" ref="0x2b7643038db8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643037270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b7643054148" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b7643054148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b7643054498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x2b7643040e00" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b7643040e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b76430550f8"/>
        <function-ref name="test" scoped="" ref="0x2b7643057980"/>
        <function-ref name="fired" scoped="" ref="0x2b76430574f8"/>
        <function-ref name="get" scoped="" ref="0x2b764303fa18"/>
        <function-ref name="reset" scoped="" ref="0x2b7643057e08"/>
        <function-ref name="getMode" scoped="" ref="0x2b76430555d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643056c20"/>
        <function-ref name="set" scoped="" ref="0x2b7643057020"/>
        <function-ref name="start" scoped="" ref="0x2b7643056310"/>
        <function-ref name="stop" scoped="" ref="0x2b7643056798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b7643045b88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b7643045b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643041db8"/>
        <function-ref name="test" scoped="" ref="0x2b7643042580"/>
        <function-ref name="fired" scoped="" ref="0x2b76430420f8"/>
        <function-ref name="force" scoped="" ref="0x2b7643040778"/>
        <function-ref name="get" scoped="" ref="0x2b7643044760"/>
        <function-ref name="reset" scoped="" ref="0x2b7643042a08"/>
        <function-ref name="getMode" scoped="" ref="0x2b76430402f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643041930"/>
        <function-ref name="set" scoped="" ref="0x2b7643044be8"/>
        <function-ref name="start" scoped="" ref="0x2b7643041020"/>
        <function-ref name="stop" scoped="" ref="0x2b76430414a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b7642dce2b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7642dce2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b7642dce600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b7642dd2468" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b7642dd2468"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b7642c24e78"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b7642c24e78"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b7642dd27b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b7642dd2940"/>
        <function-ref name="led1On" scoped="" ref="0x2b7642dd2ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b7642dd2c50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b7642dd2dd8"/>
        <function-ref name="get" scoped="" ref="0x2b7642dd1020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b7642dd11a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b7642dd17c8"/>
        <function-ref name="set" scoped="" ref="0x2b7642dd1330"/>
        <function-ref name="led0On" scoped="" ref="0x2b7642dd14b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b7642dd1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b7642d1fcb8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b7642d1fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b7642dc30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b7642dd01e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b7642dd01e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b7642dd0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b76430dd2b0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b76430dd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76430d9088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76430d9998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76430d9510"/>
        <function-ref name="overflow" scoped="" ref="0x2b76430d9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b76430f4dd8" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b76430f4dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643105be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7643104548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76431040c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b76431049d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b7643121020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterC.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643121020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b764311d0f8"/>
        <function-ref name="test" scoped="" ref="0x2b764311f9e8"/>
        <function-ref name="get" scoped="" ref="0x2b7643121ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b764311fe70"/>
        <function-ref name="getMode" scoped="" ref="0x2b764311d5d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b764311f560"/>
        <function-ref name="isOn" scoped="" ref="0x2b764311ec30"/>
        <function-ref name="set" scoped="" ref="0x2b764311f088"/>
        <function-ref name="start" scoped="" ref="0x2b764311e320"/>
        <function-ref name="stop" scoped="" ref="0x2b764311e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7643db2108" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7643db2108"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643db2458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7643db28b0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7643db28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643db1660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7643daf020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7643db1ae8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7643daf4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b7643daf9e8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterC.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7643daf9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643dfeb80"/>
        <function-ref name="test" scoped="" ref="0x2b7643e004a8"/>
        <function-ref name="get" scoped="" ref="0x2b7643dae598"/>
        <function-ref name="reset" scoped="" ref="0x2b7643e00930"/>
        <function-ref name="getMode" scoped="" ref="0x2b7643dfd088"/>
        <function-ref name="overflow" scoped="" ref="0x2b7643e00020"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643dfe6f8"/>
        <function-ref name="set" scoped="" ref="0x2b7643daea20"/>
        <function-ref name="start" scoped="" ref="0x2b7643e00db8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643dfe270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b764312f610" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b764312f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b764312c3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b764312ccb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b764312c830"/>
        <function-ref name="overflow" scoped="" ref="0x2b764312a190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b7643147450" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b7643147450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76431461d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7643146ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7643146658"/>
        <function-ref name="overflow" scoped="" ref="0x2b7643144020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7643127270" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7643127270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643149020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7643149930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76431494a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7643149db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7643d3b610" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7643d3b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643d39c88"/>
        <function-ref name="fired" scoped="" ref="0x2b7643d3ad08"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643d39680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643d391f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643d38150"/>
        <function-ref name="start" scoped="" ref="0x2b7643d3a3a8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643d3a880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b7643d84b10" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b7643d84b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643d81238"/>
        <function-ref name="fired" scoped="" ref="0x2b7643d822b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643d82bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643d82738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643d816c0"/>
        <function-ref name="start" scoped="" ref="0x2b7643d838f8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643d83dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b7643d38778" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7643d38778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643d37578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7643d84020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7643d37a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b7643d844a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b76431b55e8" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b76431b55e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76431b5938"/>
        <function-ref name="runTask" scoped="" ref="0x2b76431b5ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b76431b8648" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b76431b8648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76431b6cc0"/>
        <function-ref name="fired" scoped="" ref="0x2b76431b7d50"/>
        <function-ref name="startAt" scoped="" ref="0x2b76431b66b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76431b6230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76431b5190"/>
        <function-ref name="start" scoped="" ref="0x2b76431b73f0"/>
        <function-ref name="stop" scoped="" ref="0x2b76431b78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b764319e290" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b764319e290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76431ba5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b76431bcba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76431bb8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b76431bb470"/>
        <function-ref name="getdt" scoped="" ref="0x2b76431b8020"/>
        <function-ref name="gett0" scoped="" ref="0x2b76431baa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76431bb020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b764319edd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b76431ba020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76431bc2b8"/>
        <function-ref name="stop" scoped="" ref="0x2b76431bc758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b764320a020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b764320a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b764320a370"/>
        <function-ref name="runTask" scoped="" ref="0x2b764320a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b76431efe80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b76431efe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b764320b238"/>
        <function-ref name="fired" scoped="" ref="0x2b764320e910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b764320d648"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b764320d1f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b764320bad8"/>
        <function-ref name="gett0" scoped="" ref="0x2b764320b688"/>
        <function-ref name="isRunning" scoped="" ref="0x2b764320ed60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b764320f9f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b764320dc18"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b764320e020"/>
        <function-ref name="stop" scoped="" ref="0x2b764320e4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b76431f5af8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b76431f5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76431ef020"/>
        <function-ref name="fired" scoped="" ref="0x2b76431f2530"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76431f02d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b76431f2e10"/>
        <function-ref name="getdt" scoped="" ref="0x2b76431ef900"/>
        <function-ref name="gett0" scoped="" ref="0x2b76431ef490"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76431f29a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b76431f36f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b76431f08c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76431f3bb0"/>
        <function-ref name="stop" scoped="" ref="0x2b76431f20c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbOff" ref="0x2b7643200820" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffC.nc">
      <component-ref qname="At45dbOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbOff" scoped="" ref="0x2b7643200820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643200b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x2b7643231270" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x2b7643231270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b76432315c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b76432191b0" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b76432191b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7643219500"/>
        <function-ref name="isInput" scoped="" ref="0x2b7643219688"/>
        <function-ref name="toggle" scoped="" ref="0x2b7643219810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7643219998"/>
        <function-ref name="get" scoped="" ref="0x2b7643219b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7643219ca8"/>
        <function-ref name="set" scoped="" ref="0x2b7643219e30"/>
        <function-ref name="clr" scoped="" ref="0x2b7643218020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbOff" ref="0x2b764321f728" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbOff" scoped="" ref="0x2b764321f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b764321fa78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b764321b020" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b764321b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764321b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b764321b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b764321b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764321b808"/>
        <function-ref name="get" scoped="" ref="0x2b764321b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764321bb18"/>
        <function-ref name="set" scoped="" ref="0x2b764321bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b764321be28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SSN" ref="0x2b764321fdc0" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SSN" scoped="" ref="0x2b764321fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764321c170"/>
        <function-ref name="isInput" scoped="" ref="0x2b764321c2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b764321c480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764321c608"/>
        <function-ref name="get" scoped="" ref="0x2b764321c790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764321c918"/>
        <function-ref name="set" scoped="" ref="0x2b764321caa0"/>
        <function-ref name="clr" scoped="" ref="0x2b764321cc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b76432125e8" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b76432125e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7643212938"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7643212ac0"/>
        <function-ref name="request" scoped="" ref="0x2b7643212c48"/>
        <function-ref name="granted" scoped="" ref="0x2b7643212dd0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7643216020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b7643218378" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/at45dbx/At45dbOffP.nc">
      <component-ref qname="At45dbOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b7643218378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76432186c8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7643218850"/>
        <function-ref name="toggle" scoped="" ref="0x2b76432189d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7643218b60"/>
        <function-ref name="get" scoped="" ref="0x2b7643218ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7643218e70"/>
        <function-ref name="set" scoped="" ref="0x2b7643217020"/>
        <function-ref name="clr" scoped="" ref="0x2b76432171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b7643242c20" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b7643242c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764322b020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764322b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b764322d020" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b764322d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b764322d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b764321d918" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b764321d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b764321dc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b7643227668" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b7643227668"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b76432279b8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b7643227b40"/>
        <function-ref name="splitRead" scoped="" ref="0x2b7643227cc8"/>
        <function-ref name="write" scoped="" ref="0x2b7643227e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b764322b978" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b764322b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b764322bcc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b764322be50"/>
        <function-ref name="request" scoped="" ref="0x2b7643226020"/>
        <function-ref name="granted" scoped="" ref="0x2b76432261a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7643226330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b7643291860" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7643291860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b7643291bd0"/>
        <function-ref name="configure" scoped="" ref="0x2b7643291d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b764328d368" loc="288:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b764328d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b764328d6b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b764328d840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b7643291020" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b7643291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643291370"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76432914f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b7643292020" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b7643292020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b7643292370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7643293978" loc="91:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7643293978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643293cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b76432900a0" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b76432900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b76432903f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b764328e950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b7643290700"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b764328ead8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b7643290a10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b7643290b98"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b7643290d20"/>
        <function-ref name="read" scoped="" ref="0x2b764328f020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b764328f1a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b764328f330"/>
        <function-ref name="setClock" scoped="" ref="0x2b764328f4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b764328f640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b764328f7c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b764328fa50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b764328fbd8"/>
        <function-ref name="write" scoped="" ref="0x2b764328fd60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b764328e020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b764328e1a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b764328e330"/>
        <function-ref name="getClock" scoped="" ref="0x2b764328e4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b764328e640"/>
        <function-ref name="sleep" scoped="" ref="0x2b7643290578"/>
        <function-ref name="dataReady" scoped="" ref="0x2b7643290888"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b764328e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b76432925b8" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b76432925b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b7643292908"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b7643292a90"/>
        <function-ref name="splitRead" scoped="" ref="0x2b7643292c18"/>
        <function-ref name="write" scoped="" ref="0x2b7643292da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b764328ed20" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b764328ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b764328d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b76432ae8b0" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b76432ae8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b76432aec00"/>
        <function-ref name="sleep" scoped="" ref="0x2b76432a91a8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b76432ab020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b76432a9330"/>
        <function-ref name="initMaster" scoped="" ref="0x2b76432ab330"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b76432ab4b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b76432ab640"/>
        <function-ref name="read" scoped="" ref="0x2b76432ab7c8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b76432ab950"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b76432abad8"/>
        <function-ref name="setClock" scoped="" ref="0x2b76432abc60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76432abde8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b76432aa020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b76432aa2a8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b76432aa430"/>
        <function-ref name="write" scoped="" ref="0x2b76432aa5b8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76432aa740"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b76432aa8c8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b76432aaa50"/>
        <function-ref name="getClock" scoped="" ref="0x2b76432aabd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b76432aad60"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b76432aed88"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b76432ab1a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b76432a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b764329d190" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b764329d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764329d4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b764329d668"/>
        <function-ref name="toggle" scoped="" ref="0x2b764329d7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764329d978"/>
        <function-ref name="get" scoped="" ref="0x2b764329db00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764329dc88"/>
        <function-ref name="set" scoped="" ref="0x2b764329de10"/>
        <function-ref name="clr" scoped="" ref="0x2b76432c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b76432c0338" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b76432c0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76432c0688"/>
        <function-ref name="isInput" scoped="" ref="0x2b76432c0810"/>
        <function-ref name="toggle" scoped="" ref="0x2b76432c0998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76432c0b20"/>
        <function-ref name="get" scoped="" ref="0x2b76432c0ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76432c0e30"/>
        <function-ref name="set" scoped="" ref="0x2b76432bf020"/>
        <function-ref name="clr" scoped="" ref="0x2b76432bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b76432a2558" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b76432a2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b76432a28a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b764329e020" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b764329e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764329e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b764329e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b764329e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764329e808"/>
        <function-ref name="get" scoped="" ref="0x2b764329e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764329eb18"/>
        <function-ref name="set" scoped="" ref="0x2b764329eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b764329ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b76432a2c08" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b76432a2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76432a1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b76432a11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b76432a1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76432a14b8"/>
        <function-ref name="get" scoped="" ref="0x2b76432a1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76432a17c8"/>
        <function-ref name="set" scoped="" ref="0x2b76432a1950"/>
        <function-ref name="clr" scoped="" ref="0x2b76432a1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b76432a0cc8" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b76432a0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b76432a20a0"/>
        <function-ref name="stop" scoped="" ref="0x2b76432a2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b76432bf4d8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b76432bf4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b76432bf828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b76432a6738" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b76432a6738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b76432a6a88"/>
        <function-ref name="sleep" scoped="" ref="0x2b76432a3020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b76432a6d98"/>
        <function-ref name="dataReady" scoped="" ref="0x2b76432a31a8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b76432a51a8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b76432a5330"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b76432a54b8"/>
        <function-ref name="read" scoped="" ref="0x2b76432a5640"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b76432a57c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b76432a5950"/>
        <function-ref name="setClock" scoped="" ref="0x2b76432a5ad8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b76432a5c60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b76432a5de8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b76432a4120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b76432a42a8"/>
        <function-ref name="write" scoped="" ref="0x2b76432a4430"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b76432a45b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b76432a4740"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b76432a48c8"/>
        <function-ref name="getClock" scoped="" ref="0x2b76432a4a50"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b76432a4bd8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b76432a6c10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b76432a5020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b76432a4d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OSS" ref="0x2b76432a1de0" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OSS" scoped="" ref="0x2b76432a1de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764329f170"/>
        <function-ref name="isInput" scoped="" ref="0x2b764329f2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b764329f480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764329f608"/>
        <function-ref name="get" scoped="" ref="0x2b764329f790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764329f918"/>
        <function-ref name="set" scoped="" ref="0x2b764329faa0"/>
        <function-ref name="clr" scoped="" ref="0x2b764329fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b7643345510" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b7643345510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b7643345880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b7643345a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b764336b550" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b764336b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b764336b8c0"/>
        <function-ref name="configure" scoped="" ref="0x2b764336ba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b7643346748" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7643346748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7643346ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7643346c40"/>
        <function-ref name="request" scoped="" ref="0x2b7643346dc8"/>
        <function-ref name="granted" scoped="" ref="0x2b7643345020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76433451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b7643345c50" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7643345c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b764336b020"/>
        <function-ref name="userId" scoped="" ref="0x2b764336b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7643e73660" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7643e73660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643e739b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b7643e73c38" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b7643e73c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b7643e72020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b7643e721a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b7643e72330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b7643e724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b7643e6f820" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b7643e6f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b7643e6fb90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b7643e6fd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b7643e6e8c0" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7643e6e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b7643e6ec30"/>
        <function-ref name="configure" scoped="" ref="0x2b7643e6edb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b7643e6d0a0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b7643e6d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b7643e6d3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b7643e6d578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b7643e6d700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b7643e6d888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b7643e71a28" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7643e71a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7643e71d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7643e6f020"/>
        <function-ref name="request" scoped="" ref="0x2b7643e6f1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b7643e6f330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7643e6f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b7643e6e020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7643e6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b7643e6e370"/>
        <function-ref name="userId" scoped="" ref="0x2b7643e6e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b7643e6db50" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b7643e6db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7643e6c020"/>
        <function-ref name="runTask" scoped="" ref="0x2b7643e6c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="WPN" ref="0x2b764335dca8" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WPN" scoped="" ref="0x2b764335dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764335c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b764335c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b764335c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764335c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b764335c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764335c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b764335c950"/>
        <function-ref name="clr" scoped="" ref="0x2b764335cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b764335eb30" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b764335eb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764335ee80"/>
        <function-ref name="isInput" scoped="" ref="0x2b764335d030"/>
        <function-ref name="toggle" scoped="" ref="0x2b764335d1b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764335d340"/>
        <function-ref name="get" scoped="" ref="0x2b764335d4c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764335d650"/>
        <function-ref name="set" scoped="" ref="0x2b764335d7d8"/>
        <function-ref name="clr" scoped="" ref="0x2b764335d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MISO" ref="0x2b7643361688" loc="11:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b7643361688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76433619d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7643361b60"/>
        <function-ref name="toggle" scoped="" ref="0x2b7643361ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7643361e70"/>
        <function-ref name="get" scoped="" ref="0x2b7643360020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76433601a8"/>
        <function-ref name="set" scoped="" ref="0x2b7643360330"/>
        <function-ref name="clr" scoped="" ref="0x2b76433604b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x2b76433624f0" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b76433624f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7643362840"/>
        <function-ref name="isInput" scoped="" ref="0x2b76433629c8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7643362b50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7643362cd8"/>
        <function-ref name="get" scoped="" ref="0x2b7643362e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7643361020"/>
        <function-ref name="set" scoped="" ref="0x2b76433611a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7643361330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SSN" ref="0x2b7643363220" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SSN" scoped="" ref="0x2b7643363220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7643363570"/>
        <function-ref name="isInput" scoped="" ref="0x2b76433636f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7643363880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7643363a08"/>
        <function-ref name="get" scoped="" ref="0x2b7643363b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7643363d18"/>
        <function-ref name="set" scoped="" ref="0x2b7643362020"/>
        <function-ref name="clr" scoped="" ref="0x2b76433621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x2b764335f9a0" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x2b764335f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764335fcf0"/>
        <function-ref name="isInput" scoped="" ref="0x2b764335fe78"/>
        <function-ref name="toggle" scoped="" ref="0x2b764335e030"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764335e1b8"/>
        <function-ref name="get" scoped="" ref="0x2b764335e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764335e4c8"/>
        <function-ref name="set" scoped="" ref="0x2b764335e650"/>
        <function-ref name="clr" scoped="" ref="0x2b764335e7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MOSI" ref="0x2b7643360810" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/chips/at45db/HplAt45dbPinsC.nc">
      <component-ref qname="HplAt45dbPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b7643360810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7643360b60"/>
        <function-ref name="isInput" scoped="" ref="0x2b7643360ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7643360e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764335f020"/>
        <function-ref name="get" scoped="" ref="0x2b764335f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764335f330"/>
        <function-ref name="set" scoped="" ref="0x2b764335f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b764335f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b764335a5d8" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <component-ref qname="HplAt45dbPinsC.NP0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x2b764335a5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764335a928"/>
        <function-ref name="isInput" scoped="" ref="0x2b764335aab0"/>
        <function-ref name="toggle" scoped="" ref="0x2b764335ac38"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764335adc0"/>
        <function-ref name="get" scoped="" ref="0x2b7643359020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76433591a8"/>
        <function-ref name="set" scoped="" ref="0x2b7643359330"/>
        <function-ref name="clr" scoped="" ref="0x2b76433594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b7643374958" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <component-ref qname="HplAt45dbPinsC.NP1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x2b7643374958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7643374ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7643374e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7643373020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76433731a8"/>
        <function-ref name="get" scoped="" ref="0x2b7643373330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76433734b8"/>
        <function-ref name="set" scoped="" ref="0x2b7643373640"/>
        <function-ref name="clr" scoped="" ref="0x2b76433737c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x2b7643372c68" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/system/NoPinC.nc">
      <component-ref qname="HplAt45dbPinsC.NP2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x2b7643372c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7643371020"/>
        <function-ref name="isInput" scoped="" ref="0x2b76433711a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7643371330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b76433714b8"/>
        <function-ref name="get" scoped="" ref="0x2b7643371640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b76433717c8"/>
        <function-ref name="set" scoped="" ref="0x2b7643371950"/>
        <function-ref name="clr" scoped="" ref="0x2b7643371ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b764338fd70" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b764338fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b764338e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b7643390640" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b7643390640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b7643390990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b764338f6a8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b764338f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b764338f9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b7643390c78" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b7643390c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b764338f020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b764338f1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b764338f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b7642c3db18" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b7642c3db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7642c3de68"/>
        <function-ref name="runTask" scoped="" ref="0x2b7642ce7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b7642c1b020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b7642c1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642c1b370"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b7642c1b4f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b7642c1b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b7642da81c8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b7642da81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7642da8518"/>
        <function-ref name="runTask" scoped="" ref="0x2b7642da86a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b7642da5668" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b7642da5668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b7642da59b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b7642da92a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b7642da92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7642da95f8"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b7642da9780"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b7642da9908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b7642de5d80" loc="52:CountToRadioC.nc">
      <component-ref qname="CountToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b7642de5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76433a3088"/>
        <function-ref name="fired" scoped="" ref="0x2b76433a56c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b76433a4470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b76433a4020"/>
        <function-ref name="getdt" scoped="" ref="0x2b76433a3928"/>
        <function-ref name="gett0" scoped="" ref="0x2b76433a34d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76433a5b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b76433a78f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b76433a4a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76433a7d90"/>
        <function-ref name="stop" scoped="" ref="0x2b76433a5278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b76433ec460" loc="61:CountToRadioC.nc">
      <component-ref qname="CountToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2b76433ec460"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76433ec7b0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76433ec938"/>
        <function-ref name="start" scoped="" ref="0x2b76433ecac0"/>
        <function-ref name="stop" scoped="" ref="0x2b76433ecc48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b76433a0460" loc="54:CountToRadioC.nc">
      <component-ref qname="CountToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b76433a0460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b76433a07b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b76433db278" loc="56:CountToRadioC.nc">
      <component-ref qname="CountToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b76433db278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76433db5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76433db750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76433db8d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b76433dba60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76433dbbe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b76433f0c58" loc="59:CountToRadioC.nc">
      <component-ref qname="CountToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b76433f0c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76433f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b76433a3d70" loc="53:CountToRadioC.nc">
      <component-ref qname="CountToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b76433a3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76433a10f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76433a1278"/>
        <function-ref name="led1On" scoped="" ref="0x2b76433a1400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76433a1588"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76433a1710"/>
        <function-ref name="get" scoped="" ref="0x2b76433a1898"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76433a1a20"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76433a01a8"/>
        <function-ref name="set" scoped="" ref="0x2b76433a1ba8"/>
        <function-ref name="led0On" scoped="" ref="0x2b76433a1d30"/>
        <function-ref name="led2On" scoped="" ref="0x2b76433a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b76433f5b58" loc="57:CountToRadioC.nc">
      <component-ref qname="CountToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b76433f5b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b764339e020"/>
        <function-ref name="source" scoped="" ref="0x2b764339e1a8"/>
        <function-ref name="address" scoped="" ref="0x2b764339e330"/>
        <function-ref name="destination" scoped="" ref="0x2b764339e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b764339e640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b764339e7c8"/>
        <function-ref name="type" scoped="" ref="0x2b764339e950"/>
        <function-ref name="setType" scoped="" ref="0x2b764339ead8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b764339ec60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b764339ede8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76433dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b76433ff1b8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b76433ff1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76433ff508"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76433ff690"/>
        <function-ref name="led1On" scoped="" ref="0x2b76433ff818"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76433ff9a0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76433ffb28"/>
        <function-ref name="get" scoped="" ref="0x2b76433ffcb0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76433ffe38"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76433fe4b8"/>
        <function-ref name="set" scoped="" ref="0x2b76433fe020"/>
        <function-ref name="led0On" scoped="" ref="0x2b76433fe1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b76433fe330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b7643423020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b7643423020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7643423370"/>
        <function-ref name="isInput" scoped="" ref="0x2b76434234f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7643423680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7643423808"/>
        <function-ref name="get" scoped="" ref="0x2b7643423990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7643423b18"/>
        <function-ref name="set" scoped="" ref="0x2b7643423ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7643423e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76433fb368" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b76433fb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76433fb6b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b7643422190" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b7643422190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76434224e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7643422668"/>
        <function-ref name="toggle" scoped="" ref="0x2b76434227f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7643422978"/>
        <function-ref name="get" scoped="" ref="0x2b7643422b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7643422c88"/>
        <function-ref name="set" scoped="" ref="0x2b7643422e10"/>
        <function-ref name="clr" scoped="" ref="0x2b7643421020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b76433fb930" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b76433fb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b76433fbc80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b76433fbe08"/>
        <function-ref name="led1On" scoped="" ref="0x2b76433fa020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b76433fa1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b76433fa330"/>
        <function-ref name="get" scoped="" ref="0x2b76433fa4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b76433fa640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b76433fac60"/>
        <function-ref name="set" scoped="" ref="0x2b76433fa7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b76433fa950"/>
        <function-ref name="led2On" scoped="" ref="0x2b76433faad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b7643421338" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b7643421338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7643421688"/>
        <function-ref name="isInput" scoped="" ref="0x2b7643421810"/>
        <function-ref name="toggle" scoped="" ref="0x2b7643421998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7643421b20"/>
        <function-ref name="get" scoped="" ref="0x2b7643421ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7643421e30"/>
        <function-ref name="set" scoped="" ref="0x2b7643420020"/>
        <function-ref name="clr" scoped="" ref="0x2b76434201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b76433fc710" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b76433fc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b76433fca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b76433fcbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b76433fcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764342f020"/>
        <function-ref name="get" scoped="" ref="0x2b764342f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764342f330"/>
        <function-ref name="set" scoped="" ref="0x2b764342f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b764342f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b764342f958" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b764342f958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764342fca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b764342fe30"/>
        <function-ref name="toggle" scoped="" ref="0x2b764342e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764342e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b764342e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764342e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b764342e640"/>
        <function-ref name="clr" scoped="" ref="0x2b764342e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b764342dc28" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b764342dc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b764342c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b764342eae0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b764342eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b764342ee30"/>
        <function-ref name="isInput" scoped="" ref="0x2b764342d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b764342d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b764342d330"/>
        <function-ref name="get" scoped="" ref="0x2b764342d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b764342d640"/>
        <function-ref name="set" scoped="" ref="0x2b764342d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b764342d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7643427470" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CountToRadioAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7643427470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b764344d6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b7643426db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7643424ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7643424688"/>
        <function-ref name="getdt" scoped="" ref="0x2b764344c020"/>
        <function-ref name="gett0" scoped="" ref="0x2b764344db18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643424238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7643426020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b764344d0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b76434264c0"/>
        <function-ref name="stop" scoped="" ref="0x2b7643426960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b764344b750" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b764344b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b764344baa0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b764344bc28"/>
        <function-ref name="start" scoped="" ref="0x2b764344bdb0"/>
        <function-ref name="stop" scoped="" ref="0x2b7643447020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b76434431c8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b76434431c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b7643443518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b764343b720" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b764343b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b764343ba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b7643442020" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7643442020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643442370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76434424f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643442680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643442808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643442990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7643447798" loc="32:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7643447798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643447ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643447c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643447df8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643446020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76434461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b7643444498" loc="34:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b7643444498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76434447e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b764344f418" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b764344f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b764344f768"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b764344f8f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b764344fa78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b764344fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7643446928" loc="33:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7643446928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643446c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b7643473260" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7643473260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b764346c700"/>
        <function-ref name="clear" scoped="" ref="0x2b764346cde0"/>
        <function-ref name="isValid" scoped="" ref="0x2b764346c020"/>
        <function-ref name="set" scoped="" ref="0x2b764346b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b7643457cb0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7643457cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b764345c0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b764345c228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b764345c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b76434721d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b76434721d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b7643472528"/>
        <function-ref name="setRetries" scoped="" ref="0x2b76434726b0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b7643472838"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b76434729c0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b7643472b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b7643442c30" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b7643442c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7643440020"/>
        <function-ref name="source" scoped="" ref="0x2b76434401a8"/>
        <function-ref name="address" scoped="" ref="0x2b7643440330"/>
        <function-ref name="destination" scoped="" ref="0x2b76434404b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b7643440640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76434407c8"/>
        <function-ref name="type" scoped="" ref="0x2b7643440950"/>
        <function-ref name="setType" scoped="" ref="0x2b7643440ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643440c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7643440de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b764345d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b7643469130" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7643469130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7643468700"/>
        <function-ref name="clear" scoped="" ref="0x2b7643468de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b7643468020"/>
        <function-ref name="set" scoped="" ref="0x2b76434674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76434666f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b76434666f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7643466a40"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7643466bc8"/>
        <function-ref name="start" scoped="" ref="0x2b7643466d50"/>
        <function-ref name="stop" scoped="" ref="0x2b7643463020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b76434a2348" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b76434a2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76434a1a40"/>
        <function-ref name="get" scoped="" ref="0x2b76434a1530"/>
        <function-ref name="isSet" scoped="" ref="0x2b76434a1020"/>
        <function-ref name="set" scoped="" ref="0x2b764349f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b7643496bf0" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b7643496bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7643494088"/>
        <function-ref name="clear" scoped="" ref="0x2b7643494768"/>
        <function-ref name="isValid" scoped="" ref="0x2b7643495970"/>
        <function-ref name="set" scoped="" ref="0x2b7643494e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b764348b020" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b764348b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b764348b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b764348bb28" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b764348bb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b764348be78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b76434898d8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b76434898d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643489c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643489db0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643487020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76434871a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643487330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7643463798" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7643463798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643463ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643463c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643463df8"/>
        <function-ref name="cancel" scoped="" ref="0x2b764348d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764348d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b764348c498" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b764348c498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764348c7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b7643479020" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b7643479020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76434a4608"/>
        <function-ref name="get" scoped="" ref="0x2b76434a40f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643479ba0"/>
        <function-ref name="set" scoped="" ref="0x2b76434a4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b7643485628" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b7643485628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b7643485978"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b7643485b00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b7643485c88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b7643485e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b764348d928" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b764348d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764348dc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b764349dcb8" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b764349dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7643498150"/>
        <function-ref name="clear" scoped="" ref="0x2b7643498830"/>
        <function-ref name="isValid" scoped="" ref="0x2b764349ba40"/>
        <function-ref name="set" scoped="" ref="0x2b7643496020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b764349a8b0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b764349a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b764349d490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b764347bc58" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b764347bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b764347a270"/>
        <function-ref name="get" scoped="" ref="0x2b7643481d30"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643481820"/>
        <function-ref name="set" scoped="" ref="0x2b764347a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b7643486c78" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7643486c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b7643485020"/>
        <function-ref name="noAck" scoped="" ref="0x2b76434851a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b7643485330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b764348a718" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b764348a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764348aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b7643484128" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b7643484128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b7643484578"/>
        <function-ref name="setRetries" scoped="" ref="0x2b7643484700"/>
        <function-ref name="getRetries" scoped="" ref="0x2b7643484888"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b7643484a10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b7643484b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b76434875d0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b76434875d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7643487920"/>
        <function-ref name="source" scoped="" ref="0x2b7643487aa8"/>
        <function-ref name="address" scoped="" ref="0x2b7643487c30"/>
        <function-ref name="destination" scoped="" ref="0x2b7643487db8"/>
        <function-ref name="setSource" scoped="" ref="0x2b7643486020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76434861a8"/>
        <function-ref name="type" scoped="" ref="0x2b7643486330"/>
        <function-ref name="setType" scoped="" ref="0x2b76434864b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643486640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76434867c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7643486950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b7643480c30" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b7643480c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b7643482020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b76434821a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7643482330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b764349cca8" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b764349cca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b764349e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b7643489300" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b7643489300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643489650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b764348f020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b764348f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b764348f370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b764348f4f8"/>
        <function-ref name="start" scoped="" ref="0x2b764348f680"/>
        <function-ref name="stop" scoped="" ref="0x2b764348f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2b76434e10d0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b76434e10d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b76434e1620"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b76434e17a8"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b76434e1930"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b76434e1ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b76434bf348" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b76434bf348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76434bea40"/>
        <function-ref name="get" scoped="" ref="0x2b76434be530"/>
        <function-ref name="isSet" scoped="" ref="0x2b76434be020"/>
        <function-ref name="set" scoped="" ref="0x2b76434bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b76434b1710" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b76434b1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b76434b1b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b76434b0420" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b76434b0420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76434b0770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76434b08f8"/>
        <function-ref name="request" scoped="" ref="0x2b76434b0a80"/>
        <function-ref name="granted" scoped="" ref="0x2b76434b0c08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76434b0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b76434b8810" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b76434b8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b76434b8b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b76434b6348" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b76434b6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b76434b6698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b76434ba020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b76434ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76434ba370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76434ba4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76434ba680"/>
        <function-ref name="cancel" scoped="" ref="0x2b76434ba808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76434ba990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b76434b9d10" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b76434b9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76434b80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b76434ca9c0" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b76434ca9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b76434cad10"/>
        <function-ref name="address" scoped="" ref="0x2b76434a6020"/>
        <function-ref name="destination" scoped="" ref="0x2b76434a61a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b76434a6330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76434a64b8"/>
        <function-ref name="pan" scoped="" ref="0x2b76434a6640"/>
        <function-ref name="setPan" scoped="" ref="0x2b76434a67c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76434a6950"/>
        <function-ref name="localPan" scoped="" ref="0x2b76434a6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b76434a5020" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b76434a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76434a5370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76434a54f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76434a5680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76434a5808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76434a5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b76434c2020" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b76434c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76434c1608"/>
        <function-ref name="get" scoped="" ref="0x2b76434c10f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b76434c2ba0"/>
        <function-ref name="set" scoped="" ref="0x2b76434c1b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b76434c86a8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b76434c86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b76434c89f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b76434c8b80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b76434c8d08"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b76434c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2b76434bd838" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b76434bd838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76434bbe30"/>
        <function-ref name="get" scoped="" ref="0x2b76434bb920"/>
        <function-ref name="isSet" scoped="" ref="0x2b76434bb410"/>
        <function-ref name="set" scoped="" ref="0x2b76434e7388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b76434b39e8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b76434b39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76434b3d38"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76434b2020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76434b21a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76434b2330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76434b24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76434b91c8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b76434b91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76434b9518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b76434e4a48" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b76434e4a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76434de020"/>
        <function-ref name="clear" scoped="" ref="0x2b76434de700"/>
        <function-ref name="isValid" scoped="" ref="0x2b76434df828"/>
        <function-ref name="set" scoped="" ref="0x2b76434dede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b76434e5630" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b76434e5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76434e4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b76434c6b78" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b76434c6b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76434c4190"/>
        <function-ref name="get" scoped="" ref="0x2b76434c5c38"/>
        <function-ref name="isSet" scoped="" ref="0x2b76434c5728"/>
        <function-ref name="set" scoped="" ref="0x2b76434c46a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b76434a5cb8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b76434a5cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76434c80a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b76434c8228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76434c83b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b76434a9250" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b76434a9250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76434a95a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76434a9728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76434a98b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76434a9a38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76434a9bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b76434b5020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b76434b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76434b5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b76434c72d0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b76434c72d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b76434c7620"/>
        <function-ref name="setRetries" scoped="" ref="0x2b76434c77a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b76434c7930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b76434c7ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b76434c7c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b76434c6020" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b76434c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b76434c6370"/>
        <function-ref name="setChannel" scoped="" ref="0x2b76434c64f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b76434c6680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b76434b42c0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b76434b42c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76434b4610"/>
        <function-ref name="source" scoped="" ref="0x2b76434b4798"/>
        <function-ref name="address" scoped="" ref="0x2b76434b4920"/>
        <function-ref name="destination" scoped="" ref="0x2b76434b4aa8"/>
        <function-ref name="setSource" scoped="" ref="0x2b76434b4c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76434b4db8"/>
        <function-ref name="type" scoped="" ref="0x2b76434b3020"/>
        <function-ref name="setType" scoped="" ref="0x2b76434b31a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76434b3330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76434b34b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76434b3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b76434dd9d8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76434dd9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76434dbe48"/>
        <function-ref name="clear" scoped="" ref="0x2b76434da558"/>
        <function-ref name="isValid" scoped="" ref="0x2b76434db768"/>
        <function-ref name="set" scoped="" ref="0x2b76434dac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b76434b1020" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b76434b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76434b1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b76434e1db8" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b76434e1db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b76434e5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b76434b5bb0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b76434b5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76434b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2b7643535998" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643535998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b7643535ce8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b7643535e70"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b7643533020"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b76435331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b76435057b0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b76435057b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7643505b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b76434ea558" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b76434ea558"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b76434ea8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b7643508b48" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b7643508b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7643513020"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b76435131a8"/>
        <function-ref name="source" scoped="" ref="0x2b7643513330"/>
        <function-ref name="destination" scoped="" ref="0x2b76435134b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b7643513640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76435137c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7643513950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b764350fb10" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b764350fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b764350fe60"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b76434eb020"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b76434eb1a8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b76434eb330"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b76434eb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b7643541640" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7643541640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7643541990"/>
        <function-ref name="wait" scoped="" ref="0x2b7643541b18"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643541ca0"/>
        <function-ref name="isFree" scoped="" ref="0x2b7643541e28"/>
        <function-ref name="getNow" scoped="" ref="0x2b7643517020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b76435168b8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b76435168b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7643540e10"/>
        <function-ref name="clear" scoped="" ref="0x2b7643539558"/>
        <function-ref name="isValid" scoped="" ref="0x2b7643540730"/>
        <function-ref name="set" scoped="" ref="0x2b7643539c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b76434f1020" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b76434f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b76434f1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b76434f2468" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b76434f2468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b76434f27b8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b76434f2940"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b76434f2ac8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b76434f2c50"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b76434f2dd8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b76434d4020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b76434d41a8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b76434d4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b764351a858" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b764351a858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b764351aba8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b764351ad30"/>
        <function-ref name="setFCF" scoped="" ref="0x2b7643506020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b76435061a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b7643506330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b76435064b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b7643506640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b76435067c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b7643506950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b7643506ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b7643506c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b7643506de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b7643503020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b76435032a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b7643503430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b76435035b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b7643503740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b76435038c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b7643503a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643503bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7643503d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b7643518020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b76435181a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b7643518330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b76435184b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2b7643537698" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643537698"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643536dc8"/>
        <function-ref name="get" scoped="" ref="0x2b76435368b8"/>
        <function-ref name="isSet" scoped="" ref="0x2b76435363a8"/>
        <function-ref name="set" scoped="" ref="0x2b7643535328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b76434ee5f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b76434ee5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b76434ee940"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b76434eeac8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b76434eec50"/>
        <function-ref name="getSender" scoped="" ref="0x2b76434eedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b7643514950" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b7643514950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b7643514ca0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b7643514e28"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b76434ec020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b76434ec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2b764353b810" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2b764353b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b764353bb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b764353bce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b764353be70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643516020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76435161a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643516330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x2b76434fb3a8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b76434fb3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b76434fb6f8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b76434fb880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76434fba08"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b76434fbb90"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76434fbd18"/>
        <function-ref name="setAck" scoped="" ref="0x2b76434d5020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b76434d51a8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b76434d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b76435942e8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b76435942e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7643594658"/>
        <function-ref name="wait" scoped="" ref="0x2b76435947e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643594968"/>
        <function-ref name="isFree" scoped="" ref="0x2b7643594af0"/>
        <function-ref name="getNow" scoped="" ref="0x2b7643594c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b76435be2d0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b76435be2d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b764339a8e0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76435bb928"/>
        <function-ref name="fired" scoped="" ref="0x2b76435bd9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b76435bb320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76435bde70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76435bbdb0"/>
        <function-ref name="start" scoped="" ref="0x2b76435bd088"/>
        <function-ref name="stop" scoped="" ref="0x2b76435bd560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b7643eba718" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7643eba718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7643ebaa88"/>
        <function-ref name="wait" scoped="" ref="0x2b7643ebac10"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643ebad98"/>
        <function-ref name="isFree" scoped="" ref="0x2b7643eb9020"/>
        <function-ref name="getNow" scoped="" ref="0x2b7643eb91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b7643eb9660" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7643eb9660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b764339a8e0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643eb6cc0"/>
        <function-ref name="fired" scoped="" ref="0x2b7643eb7d50"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643eb66b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643eb6230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643eb5190"/>
        <function-ref name="start" scoped="" ref="0x2b7643eb73f0"/>
        <function-ref name="stop" scoped="" ref="0x2b7643eb78c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b7643eb5568" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b7643eb5568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b7643eb58b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b7643eb5a40"/>
        <function-ref name="resume" scoped="" ref="0x2b7643eb5bc8"/>
        <function-ref name="run" scoped="" ref="0x2b7643eb5d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b76435cbc30" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b76435cbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b76435c8020"/>
        <function-ref name="suspend" scoped="" ref="0x2b76435c81a8"/>
        <function-ref name="resume" scoped="" ref="0x2b76435c8330"/>
        <function-ref name="run" scoped="" ref="0x2b76435c84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7643694430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7643694430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643694780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7643695a50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7643695a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643695da0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643694020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76436941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b7643698020" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b7643698020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b7643698390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b76436986f8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b76436986f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b7643698a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b764369b578" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b764369b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b764369b8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b764369ba50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b764369bbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b764369bd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b764369a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b764369a388" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b764369a388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764369a6f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b764369a880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b764369aa08"/>
        <function-ref name="cancel" scoped="" ref="0x2b764369ab90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764369ad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b76436997e0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b76436997e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643699b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7643694a08" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7643694a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7643694e58"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b7643693020"/>
        <function-ref name="source" scoped="" ref="0x2b76436931a8"/>
        <function-ref name="destination" scoped="" ref="0x2b7643693330"/>
        <function-ref name="setSource" scoped="" ref="0x2b76436934b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7643693640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76436937c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643697ba8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643697ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643695020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76436951a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643695330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76436954b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643695640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b76436957c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76436990c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b76436990c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643699438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b7643698e10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7643698e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76436971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b764369c020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b764369c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b764369c370"/>
        <function-ref name="source" scoped="" ref="0x2b764369c4f8"/>
        <function-ref name="address" scoped="" ref="0x2b764369c680"/>
        <function-ref name="destination" scoped="" ref="0x2b764369c808"/>
        <function-ref name="setSource" scoped="" ref="0x2b764369c990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b764369cb18"/>
        <function-ref name="type" scoped="" ref="0x2b764369cca0"/>
        <function-ref name="setType" scoped="" ref="0x2b764369ce28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b764369b020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b764369b1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b764369b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b7643697550" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b7643697550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76436978c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7643eed060" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7643eed060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643eed4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7643eee740" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7643eee740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643eeea90"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643eeec18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643eeeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sniff" ref="0x2b7643ef1c28" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sniff" scoped="" ref="0x2b7643ef1c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sniff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="catch" scoped="" ref="0x2b7643ef0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b7643ef0388" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b7643ef0388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b7643ef06f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b7643ef33f0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7643ef33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643ef3740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643ef38c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643ef3a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643ef3bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643ef3d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7643ef2100" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7643ef2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643ef2470"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643ef25f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643ef2780"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643ef2908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643ef2a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b7643ef1550" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b7643ef1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643ef18c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643ef6100" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643ef6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643ef6450"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643ef65d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643ef6760"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643ef68e8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643ef6a70"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643ef6bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7643eed738" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7643eed738"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7643eeda88"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b7643eedc10"/>
        <function-ref name="source" scoped="" ref="0x2b7643eedd98"/>
        <function-ref name="destination" scoped="" ref="0x2b7643eeb020"/>
        <function-ref name="setSource" scoped="" ref="0x2b7643eeb1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7643eeb330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7643eeb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b7643eeb700" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7643eeb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b7643eeba50"/>
        <function-ref name="changed" scoped="" ref="0x2b7643eebbd8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b7643eebd60"/>
        <function-ref name="setAddress" scoped="" ref="0x2b7643eea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643eef838" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643eef838"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643eefb88"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643eefd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643eee020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643eee1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643eee330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643eee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7643ef2df8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7643ef2df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643ef11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b7643ef0aa0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b7643ef0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643ef0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b7643ef6e40" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b7643ef6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7643ef41c0"/>
        <function-ref name="source" scoped="" ref="0x2b7643ef4348"/>
        <function-ref name="address" scoped="" ref="0x2b7643ef44d0"/>
        <function-ref name="destination" scoped="" ref="0x2b7643ef4658"/>
        <function-ref name="setSource" scoped="" ref="0x2b7643ef47e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7643ef4968"/>
        <function-ref name="type" scoped="" ref="0x2b7643ef4af0"/>
        <function-ref name="setType" scoped="" ref="0x2b7643ef4c78"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643ef4e00"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7643ef3020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7643ef31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b7643eef1e0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b7643eef1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643eef550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b76436834d8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b76436834d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b7643683828"/>
        <function-ref name="changed" scoped="" ref="0x2b76436839b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b7643683b38"/>
        <function-ref name="setAddress" scoped="" ref="0x2b7643683cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b764368c618" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b764368c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764368c968"/>
        <function-ref name="cancel" scoped="" ref="0x2b764368caf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764368cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b76436b1020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b76436b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76436b1370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76436b14f8"/>
        <function-ref name="request" scoped="" ref="0x2b76436b1680"/>
        <function-ref name="granted" scoped="" ref="0x2b76436b1808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76436b1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b764368db40" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b764368db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764368c020"/>
        <function-ref name="cancel" scoped="" ref="0x2b764368c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764368c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b76436adaf8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b76436adaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b76436ade68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b76436ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b76436acae8" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b76436acae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b76436ace58"/>
        <function-ref name="configure" scoped="" ref="0x2b76436aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b76436aed88" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b76436aed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b76436ad170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b76436ad2f8"/>
        <function-ref name="request" scoped="" ref="0x2b76436ad480"/>
        <function-ref name="granted" scoped="" ref="0x2b76436ad608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b76436ad790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b76436ac268" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b76436ac268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b76436ac5b8"/>
        <function-ref name="userId" scoped="" ref="0x2b76436ac740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7643f44438" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7643f44438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643f44788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b7643f44a10" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b7643f44a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b7643f44d60"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b7643f43020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b7643f431a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b7643f43330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b7643f41698" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b7643f41698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b7643f41a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b7643f41b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b7643f3f6c0" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b7643f3f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b7643f3fa30"/>
        <function-ref name="configure" scoped="" ref="0x2b7643f3fbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b7643f3fe40" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b7643f3fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b7643f3e1c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b7643f3e348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b7643f3e4d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b7643f3e658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b7643f42918" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b7643f42918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b7643f42c88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b7643f42e10"/>
        <function-ref name="request" scoped="" ref="0x2b7643f41020"/>
        <function-ref name="granted" scoped="" ref="0x2b7643f411a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b7643f41330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b7643f41dd8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b7643f41dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b7643f3f170"/>
        <function-ref name="userId" scoped="" ref="0x2b7643f3f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b7643f3e920" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b7643f3e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7643f3ec70"/>
        <function-ref name="runTask" scoped="" ref="0x2b7643f3edf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76436de740" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b76436de740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76436dea90"/>
        <function-ref name="cancel" scoped="" ref="0x2b76436dec18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76436deda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76436dd060" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b76436dd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76436dd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b76436e2268" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b76436e2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b76436e25b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b76436e4340" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b76436e4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76436e4690"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76436e4818"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76436e49a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76436e4b28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76436e4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b76436df900" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b76436df900"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76436dfc50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76436dfdd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76436de020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76436de1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76436de330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b76436de4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b76436e2860" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b76436e2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b76436e2bb0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b76436e2d38"/>
        <function-ref name="setFCF" scoped="" ref="0x2b76436e1020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b76436e11a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b76436e1330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b76436e14b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b76436e1640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b76436e17c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b76436e1950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b76436e1ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b76436e1c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b76436e1de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b76436e0020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b76436e02a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b76436e0430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b76436e05b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b76436e0740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b76436e08c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b76436e0a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76436e0bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b76436e0d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b76436df020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b76436df1a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b76436df330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b76436df4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b76436e3020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b76436e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76436e3370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76436e34f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76436e3680"/>
        <function-ref name="cancel" scoped="" ref="0x2b76436e3808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76436e3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b76436e3c18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b76436e3c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76436e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b764370fe00" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b764370fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764370e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b764370e330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764370e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b764370e740" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b764370e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764370ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b7643712120" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7643712120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643712470"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76437125f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643712780"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643712908"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643712a90"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643712c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b7643710908" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b7643710908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643710c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b764370ed18" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b764370ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b764370d0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b764370d228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b764370d3b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b764370d538"/>
        <function-ref name="headerLength" scoped="" ref="0x2b764370d6c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b764370d848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b7643710020" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b7643710020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643710370"/>
        <function-ref name="cancel" scoped="" ref="0x2b76437104f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643710680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b76436d6230" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b76436d6230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76436d6580"/>
        <function-ref name="cancel" scoped="" ref="0x2b76436d6708"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76436d6890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b76436d6b18" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b76436d6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76436d6e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b764370f020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b764370f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b764370f370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b764370f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b764370f680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b764370f808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b764370f990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b764370fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b7643791900" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7643791900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b7643791c50"/>
        <function-ref name="address" scoped="" ref="0x2b7643791dd8"/>
        <function-ref name="destination" scoped="" ref="0x2b76437c7020"/>
        <function-ref name="setSource" scoped="" ref="0x2b76437c71a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76437c7330"/>
        <function-ref name="pan" scoped="" ref="0x2b76437c74b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b76437c7640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76437c77c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b76437c7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b76437c7b98" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b76437c7b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76437c6020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76437c61a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76437c6330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76437c64b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76437c6640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b76437c67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b7643794980" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7643794980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b7643794cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b7643794e58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b7643793020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b76437931a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b7643793330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b76437934b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b7643793640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b76437937c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b7643793950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b7643793ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b7643793c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b7643793de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b7643792020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b76437922a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b7643792430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b76437925b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b7643792740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b76437928c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b7643792a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643792bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7643792d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b7643791020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b76437911a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b7643791330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b76437914b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b76437c6ab0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b76437c6ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76437c6e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76437c5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76437c51a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76437c5330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76437c54b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b76437c5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b7643fdf020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b7643fdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b7643fdf370"/>
        <function-ref name="address" scoped="" ref="0x2b7643fdf4f8"/>
        <function-ref name="destination" scoped="" ref="0x2b7643fdf680"/>
        <function-ref name="setSource" scoped="" ref="0x2b7643fdf808"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7643fdf990"/>
        <function-ref name="pan" scoped="" ref="0x2b7643fdfb18"/>
        <function-ref name="setPan" scoped="" ref="0x2b7643fdfca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643fdfe28"/>
        <function-ref name="localPan" scoped="" ref="0x2b7643fde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643fde268" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643fde268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643fde5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643fde740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643fde8c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643fdea50"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643fdebd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643fded60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b7643f8b020" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7643f8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b7643f8b370"/>
        <function-ref name="getDSN" scoped="" ref="0x2b7643f8b4f8"/>
        <function-ref name="setFCF" scoped="" ref="0x2b7643f8b680"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b7643f8b808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b7643f8b990"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b7643f8bb18"/>
        <function-ref name="setDSN" scoped="" ref="0x2b7643f8bca0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b7643f8be28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b7643fe1020"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b7643fe11a8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b7643fe1330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b7643fe14b8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b7643fe1640"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b7643fe18c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b7643fe1a50"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b7643fe1bd8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b7643fe1d60"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b7643fe0020"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b7643fe01a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643fe0330"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7643fe04b8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b7643fe0640"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b7643fe07c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b7643fe0950"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b7643fe0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b7643fdd060" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b7643fdd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b7643fdd3b0"/>
        <function-ref name="changed" scoped="" ref="0x2b7643fdd538"/>
        <function-ref name="amGroup" scoped="" ref="0x2b7643fdd6c0"/>
        <function-ref name="setAddress" scoped="" ref="0x2b7643fdd848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643fddad0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643fddad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643fdde20"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643fdc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643fdc1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643fdc330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643fdc4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643fdc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b764380a510" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b764380a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764380a860"/>
        <function-ref name="cancel" scoped="" ref="0x2b764380a9e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764380ab70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b764380adf8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b764380adf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643809170"/>
        <function-ref name="header" scoped="" ref="0x2b76438092f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b764380b470" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b764380b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764380b7c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b764380b948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764380bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7643809580" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7643809580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b76438098d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b7643809a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b7643809be0"/>
        <function-ref name="getSender" scoped="" ref="0x2b7643809d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b764380bd18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b764380bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764380a0a0"/>
        <function-ref name="header" scoped="" ref="0x2b764380a228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7643fe9458" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7643fe9458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643fe97a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643fe9930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643fe9ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7643fe9d40" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7643fe9d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643fe80d8"/>
        <function-ref name="header" scoped="" ref="0x2b7643fe8260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b7643fe7bd8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7643fe7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643fe6020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b7643fe61a8"/>
        <function-ref name="get" scoped="" ref="0x2b7643fe6330"/>
        <function-ref name="set" scoped="" ref="0x2b7643fe64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7643feed98" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7643feed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643fea170"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643fea2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643fea480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b7643fe7020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b7643fe7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b7643fe7370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b7643fe74f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b7643fe7680"/>
        <function-ref name="evicted" scoped="" ref="0x2b7643fe7808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b7643fe7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7643fea6c8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7643fea6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643feaa18"/>
        <function-ref name="header" scoped="" ref="0x2b7643feaba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7643feade8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7643feade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643fe9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b7643fe84a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b7643fe84a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b7643fe87f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b7643fe8980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b7643fe8b08"/>
        <function-ref name="getSender" scoped="" ref="0x2b7643fe8c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b76437cbd70" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b76437cbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b76438010f0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b7643801278"/>
        <function-ref name="getNode" scoped="" ref="0x2b7643801400"/>
        <function-ref name="evicted" scoped="" ref="0x2b7643801588"/>
        <function-ref name="getIndex" scoped="" ref="0x2b7643801710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b76437fdb18" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b76437fdb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76437fde68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b76437fc020"/>
        <function-ref name="get" scoped="" ref="0x2b76437fc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b76437fc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b76437fe850" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b76437fe850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b76437feba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b76437fed28"/>
        <function-ref name="getNode" scoped="" ref="0x2b76437fd020"/>
        <function-ref name="evicted" scoped="" ref="0x2b76437fd1a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b76437fd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76437fe238" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b76437fe238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76437fe588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b7643fe4140" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b7643fe4140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643fe4490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b7643fe4618"/>
        <function-ref name="get" scoped="" ref="0x2b7643fe47a0"/>
        <function-ref name="set" scoped="" ref="0x2b7643fe4928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7643832c38" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7643832c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643831020"/>
        <function-ref name="cancel" scoped="" ref="0x2b76438311a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643831330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76438315b8" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b76438315b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643831908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b764382d100" loc="93:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b764382d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b764382d450"/>
        <function-ref name="noAck" scoped="" ref="0x2b764382d5d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b764382d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76438342e8" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b76438342e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643834638"/>
        <function-ref name="cancel" scoped="" ref="0x2b76438347c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643834948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643833e20" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643833e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76438321a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643832330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76438324b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643832640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76438327c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643832950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643831b90" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643831b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b764382f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b764382f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b764382f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b764382f4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b764382f640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b764382f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b764382e470" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b764382e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b764382e7c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b764382e948"/>
        <function-ref name="getRetries" scoped="" ref="0x2b764382ead0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b764382ec58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b764382ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7643834bd0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7643834bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643833020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b764382fa10" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b764382fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b764382fd60"/>
        <function-ref name="noAck" scoped="" ref="0x2b764382e020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b764382e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b7643833268" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b7643833268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b76438335b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b7643833740"/>
        <function-ref name="getRetries" scoped="" ref="0x2b76438338c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b7643833a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b7643833bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7643828988" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7643828988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7643828cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7643828e60"/>
        <function-ref name="start" scoped="" ref="0x2b764384f020"/>
        <function-ref name="stop" scoped="" ref="0x2b764384f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b764384b5c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b764384b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764384b918"/>
        <function-ref name="cancel" scoped="" ref="0x2b764384baa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764384bc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b764384a020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b764384a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764384a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b764384f430" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b764384f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764384f780"/>
        <function-ref name="cancel" scoped="" ref="0x2b764384f908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764384fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b764384d2e8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b764384d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b764384d638"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b764384d7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b764384d948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b764384dad0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b764384dc58"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b764384dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b764384c060" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b764384c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b764384c3b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b764384c538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b764384c6c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b764384c848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b764384cb30" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b764384cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b764384ce80"/>
        <function-ref name="stopDone" scoped="" ref="0x2b764384b030"/>
        <function-ref name="start" scoped="" ref="0x2b764384b1b8"/>
        <function-ref name="stop" scoped="" ref="0x2b764384b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b764384fd18" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b764384fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764384d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b764384a5f8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b764384a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b764384a948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b764384aad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b764384ac58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b764384ade0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643849020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b76438491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b764401a458" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b764401a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b764401a7a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b764401a930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b764401aab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b764401ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b76438cd270" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b76438cd270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76438cd5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b76438cd748"/>
        <function-ref name="start" scoped="" ref="0x2b76438cd8d0"/>
        <function-ref name="stop" scoped="" ref="0x2b76438cda58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b76438cb5d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b76438cb5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b76438cb928"/>
        <function-ref name="turnOn" scoped="" ref="0x2b76438cbab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b76438cbc38"/>
        <function-ref name="done" scoped="" ref="0x2b76438cbdc0"/>
        <function-ref name="standby" scoped="" ref="0x2b76438ca020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b76438ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b76438cdce0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b76438cdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76438cc0a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76438cc228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76438cc3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b76438cac98" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b76438cac98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76438c9020"/>
        <function-ref name="header" scoped="" ref="0x2b76438c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b76438cc638" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b76438cc638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76438cc988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b76438ca3f0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b76438ca3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76438ca740"/>
        <function-ref name="ready" scoped="" ref="0x2b76438ca8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76438caa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b76438ccbd0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b76438ccbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b76438cb020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b76438cb1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b76438cb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7644013870" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7644013870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7644013bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7644013d48"/>
        <function-ref name="start" scoped="" ref="0x2b7644012020"/>
        <function-ref name="stop" scoped="" ref="0x2b76440121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b7644012430" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b7644012430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7644012780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b7644010450" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b7644010450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b76440107a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7644010928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7644010ab0"/>
        <function-ref name="done" scoped="" ref="0x2b7644010c38"/>
        <function-ref name="standby" scoped="" ref="0x2b7644010dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b764400f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7644012a08" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7644012a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7644012d58"/>
        <function-ref name="cancel" scoped="" ref="0x2b7644011020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76440111a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b76440664f0" loc="189:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b76440664f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7644066840"/>
        <function-ref name="runTask" scoped="" ref="0x2b76440669c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b7644067578" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7644067578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76440678c8"/>
        <function-ref name="header" scoped="" ref="0x2b7644067a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b7644066c90" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b7644066c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7644065020"/>
        <function-ref name="runTask" scoped="" ref="0x2b76440651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7644011430" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7644011430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7644011780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b7644067d18" loc="322:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b7644067d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76440660a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b7644066228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b764400fc98" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b764400fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7644067020"/>
        <function-ref name="ready" scoped="" ref="0x2b76440671a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7644067330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b76440119c8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b76440119c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b7644011d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7644010020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b76440101a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b764400f268" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b764400f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b764400f5b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b764400f740"/>
        <function-ref name="resume" scoped="" ref="0x2b764400f8c8"/>
        <function-ref name="run" scoped="" ref="0x2b764400fa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b76438f10c0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b76438f10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76438f1410"/>
        <function-ref name="ready" scoped="" ref="0x2b76438f1598"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76438f1720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76438f19a8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b76438f19a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76438f1cf8"/>
        <function-ref name="header" scoped="" ref="0x2b76438f1e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b76438f00f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b76438f00f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76438f0440"/>
        <function-ref name="wait" scoped="" ref="0x2b76438f05c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b76438f0750"/>
        <function-ref name="isFree" scoped="" ref="0x2b76438f08d8"/>
        <function-ref name="getNow" scoped="" ref="0x2b76438f0a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b76438f0ce8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b76438f0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b764392d0a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b764392d228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b764392d3b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b764392d538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b76438f28c8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b76438f28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76438f2c18"/>
        <function-ref name="header" scoped="" ref="0x2b76438f2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b76438f2020" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b76438f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76438f2370"/>
        <function-ref name="ready" scoped="" ref="0x2b76438f24f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76438f2680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b764408ad38" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b764408ad38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76440890d8"/>
        <function-ref name="ready" scoped="" ref="0x2b7644089260"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76440893e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7644089670" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7644089670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76440899c0"/>
        <function-ref name="header" scoped="" ref="0x2b7644089b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b7644089d90" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7644089d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b7644088170"/>
        <function-ref name="wait" scoped="" ref="0x2b76440882f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b7644088480"/>
        <function-ref name="isFree" scoped="" ref="0x2b7644088608"/>
        <function-ref name="getNow" scoped="" ref="0x2b7644088790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b76440889d8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b76440889d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b7644088d28"/>
        <function-ref name="rand32" scoped="" ref="0x2b7644086020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b76440862a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b76440862a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b76440865f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b7644086780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b7644086908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b7644086a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b764408a578" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b764408a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764408a8c8"/>
        <function-ref name="header" scoped="" ref="0x2b764408aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b764408cb58" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b764408cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764408a020"/>
        <function-ref name="ready" scoped="" ref="0x2b764408a1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764408a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2b7644086d58" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2b7644086d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b76440850d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b7644085260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b7643906690" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b7643906690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b76439069e0"/>
        <function-ref name="rand32" scoped="" ref="0x2b7643906b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b7643904668" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b7643904668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76439061e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b764390a940" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b764390a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b764390ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b7643900568" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b7643900568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b76439008b8"/>
        <function-ref name="rand32" scoped="" ref="0x2b7643900a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b7643901528" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b7643901528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76439000c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7643905b40" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7643905b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643901020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7643938020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7643938020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643938370"/>
        <function-ref name="ready" scoped="" ref="0x2b76439384f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643938680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7643938908" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7643938908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643938c58"/>
        <function-ref name="header" scoped="" ref="0x2b7643938de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b7643937060" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b7643937060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76439373b0"/>
        <function-ref name="wait" scoped="" ref="0x2b7643937538"/>
        <function-ref name="cancel" scoped="" ref="0x2b76439376c0"/>
        <function-ref name="isFree" scoped="" ref="0x2b7643937848"/>
        <function-ref name="getNow" scoped="" ref="0x2b76439379d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2b7643936d60" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b7643936d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76439350d8"/>
        <function-ref name="get" scoped="" ref="0x2b7643935260"/>
        <function-ref name="setValue" scoped="" ref="0x2b76439353e8"/>
        <function-ref name="set" scoped="" ref="0x2b7643935570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7643937c58" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7643937c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b7643936020"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b76439361a8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b7643936330"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b76439364b8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b7643936640"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b76439367c8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b7643936950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b7643936ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7643927e00" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7643927e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b76439391a8"/>
        <function-ref name="header" scoped="" ref="0x2b7643939330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b7643927558" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7643927558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76439278a8"/>
        <function-ref name="ready" scoped="" ref="0x2b7643927a30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643927bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b7643939578" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b7643939578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76439398c8"/>
        <function-ref name="noAck" scoped="" ref="0x2b7643939a50"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b7643939bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x2b76439357f8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x2b76439357f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643935b48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643935cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643935e58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643934020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76439341a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643934330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b76439317e0" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b76439317e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643931b30"/>
        <function-ref name="header" scoped="" ref="0x2b7643931cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7643931020" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7643931020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643931370"/>
        <function-ref name="header" scoped="" ref="0x2b76439314f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b7643962020" loc="21:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b7643962020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b7643962370"/>
        <function-ref name="getDSN" scoped="" ref="0x2b76439624f8"/>
        <function-ref name="setFCF" scoped="" ref="0x2b7643962680"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b7643962808"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b7643962990"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b7643962b18"/>
        <function-ref name="setDSN" scoped="" ref="0x2b7643962ca0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b7643962e28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b7643961020"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b76439611a8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b7643961330"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b76439614b8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b7643961640"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b76439618c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b7643961a50"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b7643961bd8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b7643961d60"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b7643960020"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b76439601a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643960330"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b76439604b8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b7643960640"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b76439607c8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b7643960950"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b7643960ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1DriverConfig" ref="0x2b764395f020" loc="22:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/SoftwareAddressRecognitionLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAddressRecognitionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x2b764395f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b764395f370"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b764395f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b764395f680"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b764395f808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b764395f990"/>
        <function-ref name="setAck" scoped="" ref="0x2b764395fb18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b764395fca0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b764395fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b764395c180" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b764395c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b764395c4f0"/>
        <function-ref name="wait" scoped="" ref="0x2b764395c678"/>
        <function-ref name="cancel" scoped="" ref="0x2b764395c800"/>
        <function-ref name="isFree" scoped="" ref="0x2b764395c988"/>
        <function-ref name="getNow" scoped="" ref="0x2b764395cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b764395b190" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b764395b190"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b764339a8e0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643958918"/>
        <function-ref name="fired" scoped="" ref="0x2b764395a980"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643958310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b764395ae08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643958da0"/>
        <function-ref name="start" scoped="" ref="0x2b764395a020"/>
        <function-ref name="stop" scoped="" ref="0x2b764395a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b76440ae5a0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b76440ae5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b76440ae910"/>
        <function-ref name="wait" scoped="" ref="0x2b76440aea98"/>
        <function-ref name="cancel" scoped="" ref="0x2b76440aec20"/>
        <function-ref name="isFree" scoped="" ref="0x2b76440aeda8"/>
        <function-ref name="getNow" scoped="" ref="0x2b76440ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b76440ad4d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b76440ad4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b764339a8e0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76440abc88"/>
        <function-ref name="fired" scoped="" ref="0x2b76440acd08"/>
        <function-ref name="startAt" scoped="" ref="0x2b76440ab680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76440ab1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76440aa150"/>
        <function-ref name="start" scoped="" ref="0x2b76440ac3a8"/>
        <function-ref name="stop" scoped="" ref="0x2b76440ac880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b76440aa528" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckRadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b76440aa528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b76440aa878"/>
        <function-ref name="suspend" scoped="" ref="0x2b76440aaa00"/>
        <function-ref name="resume" scoped="" ref="0x2b76440aab88"/>
        <function-ref name="run" scoped="" ref="0x2b76440aad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b764397e338" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b764397e338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b764397e688"/>
        <function-ref name="stopDone" scoped="" ref="0x2b764397e810"/>
        <function-ref name="start" scoped="" ref="0x2b764397e998"/>
        <function-ref name="stop" scoped="" ref="0x2b764397eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b764397ab10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b764397ab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b764397ae60"/>
        <function-ref name="request" scoped="" ref="0x2b7643979020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7643975020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7643975020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643975370"/>
        <function-ref name="ready" scoped="" ref="0x2b76439754f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643975680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7643975908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7643975908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643975c58"/>
        <function-ref name="header" scoped="" ref="0x2b7643975de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b764397dbe0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b764397dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b764397b020"/>
        <function-ref name="turnOn" scoped="" ref="0x2b764397b1a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b764397b330"/>
        <function-ref name="done" scoped="" ref="0x2b764397b4b8"/>
        <function-ref name="standby" scoped="" ref="0x2b764397b640"/>
        <function-ref name="getChannel" scoped="" ref="0x2b764397b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643979268" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643979268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76439795b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643979740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76439798c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643979a50"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643979bd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643979d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b7643976020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b7643976020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7643976470"/>
        <function-ref name="turnOn" scoped="" ref="0x2b76439765f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7643976780"/>
        <function-ref name="done" scoped="" ref="0x2b7643976908"/>
        <function-ref name="standby" scoped="" ref="0x2b7643976a90"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7643976c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b7643978020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b7643978020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7643978370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b764397a3f0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b764397a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764397a740"/>
        <function-ref name="header" scoped="" ref="0x2b764397a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b7643977a08" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b7643977a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643977d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b7643978658" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b7643978658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b76439789a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7643978b30"/>
        <function-ref name="start" scoped="" ref="0x2b7643978cb8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643978e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643974800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643974800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643974b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643974cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643974e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643972020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76439721a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643972330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b764397d648" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b764397d648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b764397d998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b76439725b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b76439725b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7643972908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b7643977120" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b7643977120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643977470"/>
        <function-ref name="cancel" scoped="" ref="0x2b76439775f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643977780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b764397ba10" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b764397ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764397bd60"/>
        <function-ref name="ready" scoped="" ref="0x2b764397a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764397a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b76439740a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b76439740a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b76439743f0"/>
        <function-ref name="request" scoped="" ref="0x2b7643974578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b764397ed68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b764397ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b764397d0f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b764397d278"/>
        <function-ref name="sendDone" scoped="" ref="0x2b764397d400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b7643a04da0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b7643a04da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a03170"/>
        <function-ref name="get" scoped="" ref="0x2b7643a032f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b7643a03480"/>
        <function-ref name="set" scoped="" ref="0x2b7643a03608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643a06020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a06370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a064f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a06680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a06808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a06990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a06b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643a04020" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643a04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a04370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a044f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a04680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a04808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a04990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a04b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b7643a0a598" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b7643a0a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7643a09a88"/>
        <function-ref name="clear" scoped="" ref="0x2b7643a08190"/>
        <function-ref name="isValid" scoped="" ref="0x2b7643a093a8"/>
        <function-ref name="set" scoped="" ref="0x2b7643a08870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b7643a05020" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7643a05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643a05ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b76439cd920" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76439cd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76439ccd78"/>
        <function-ref name="clear" scoped="" ref="0x2b7643a0b4b8"/>
        <function-ref name="isValid" scoped="" ref="0x2b76439cc698"/>
        <function-ref name="set" scoped="" ref="0x2b7643a0bb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b76440e2b30" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b76440e2b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76440e2e80"/>
        <function-ref name="get" scoped="" ref="0x2b76440e1030"/>
        <function-ref name="setValue" scoped="" ref="0x2b76440e11b8"/>
        <function-ref name="set" scoped="" ref="0x2b76440e1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b76440e4cd8" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b76440e4cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76440e20a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76440e2228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76440e23b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76440e2538"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76440e26c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b76440e2848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b76440df8a8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b76440df8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76440dfbf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76440dfd80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76440de020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76440de1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b76440de330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b76440de4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b76440e62d0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b76440e62d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76440e5768"/>
        <function-ref name="clear" scoped="" ref="0x2b76440e5e48"/>
        <function-ref name="isValid" scoped="" ref="0x2b76440e5088"/>
        <function-ref name="set" scoped="" ref="0x2b76440e4558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b76440e16d0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b76440e16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76440e03a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b76440e08c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b76440e08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76440df490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b76440ea688" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b76440ea688"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b76440e9ae0"/>
        <function-ref name="clear" scoped="" ref="0x2b76440e81f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b76440e9400"/>
        <function-ref name="set" scoped="" ref="0x2b76440e88d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b76439df380" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b76439df380"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76439de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b76439ddab0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b76439ddab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76439dc658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b76439dcc80" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b76439dcc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e209d8"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7642e20d30"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b76439d1a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b76439d04a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b76439d0020"/>
        <function-ref name="overflow" scoped="" ref="0x2b76439d0930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b76439fea70" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b76439fea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76439fedc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a20020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a201a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a20330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a204b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a20640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643a20928" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643a20928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a20c78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a20e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a1f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a1f1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a1f330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a1f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b76439fe020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b76439fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76439fe390"/>
        <function-ref name="get" scoped="" ref="0x2b76439fe518"/>
        <function-ref name="setValue" scoped="" ref="0x2b76439fe6a0"/>
        <function-ref name="set" scoped="" ref="0x2b76439fe828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7643a1d268" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7643a1d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7643a1d5b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7643a1d740"/>
        <function-ref name="start" scoped="" ref="0x2b7643a1d8c8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643a1da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b7643a1a988" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b7643a1a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7643a1acd8"/>
        <function-ref name="request" scoped="" ref="0x2b7643a1ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7643a14020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7643a14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a14370"/>
        <function-ref name="ready" scoped="" ref="0x2b7643a144f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a14680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7643a14908" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7643a14908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a14c58"/>
        <function-ref name="header" scoped="" ref="0x2b7643a14de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b7643a1cb10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b7643a1cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7643a1ce60"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7643a1b020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7643a1b1a8"/>
        <function-ref name="done" scoped="" ref="0x2b7643a1b330"/>
        <function-ref name="standby" scoped="" ref="0x2b7643a1b4b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7643a1b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643a190e0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a190e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a19430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a195b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a19740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a198c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a19a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a19bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b7643a15020" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b7643a15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7643a15470"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7643a155f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7643a15780"/>
        <function-ref name="done" scoped="" ref="0x2b7643a15908"/>
        <function-ref name="standby" scoped="" ref="0x2b7643a15a90"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7643a15c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b7643a19e60" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b7643a19e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7643a181e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7643a1a268" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a1a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a1a5b8"/>
        <function-ref name="header" scoped="" ref="0x2b7643a1a740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b7643a16908" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b7643a16908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a16c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b7643a184d0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b7643a184d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7643a18820"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7643a189a8"/>
        <function-ref name="start" scoped="" ref="0x2b7643a18b30"/>
        <function-ref name="stop" scoped="" ref="0x2b7643a18cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643a13800" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643a13800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a13b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a13cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a13e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a12020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a121a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a12330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b7643a1c578" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b7643a1c578"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a1c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7643a125b8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7643a125b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7643a12908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b7643a16020" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b7643a16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a16370"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643a164f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a16680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b7643a1b888" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7643a1b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a1bbd8"/>
        <function-ref name="ready" scoped="" ref="0x2b7643a1bd60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a1a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b7643a130a0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b7643a130a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7643a133f0"/>
        <function-ref name="request" scoped="" ref="0x2b7643a13578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b7643a1dc98" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b7643a1dc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a1c020"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643a1c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a1c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b7643a0ed08" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b7643a0ed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7643a0d0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7643a0d228"/>
        <function-ref name="start" scoped="" ref="0x2b7643a0d3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b7643a0d538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b7643a4b3f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b7643a4b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7643a4b740"/>
        <function-ref name="request" scoped="" ref="0x2b7643a4b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b7643a478c8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b7643a478c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a47c18"/>
        <function-ref name="ready" scoped="" ref="0x2b7643a47da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a46020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b7643a462a8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b7643a462a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a465f8"/>
        <function-ref name="header" scoped="" ref="0x2b7643a46780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b7643a4e5f8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b7643a4e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7643a4e948"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7643a4ead0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7643a4ec58"/>
        <function-ref name="done" scoped="" ref="0x2b7643a4ede0"/>
        <function-ref name="standby" scoped="" ref="0x2b7643a4c020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7643a4c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643a4bb10" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a4bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a4be60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a4a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a4a1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a4a330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a4a4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a4a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b7643a48a08" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b7643a48a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7643a48e58"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7643a47020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7643a471a8"/>
        <function-ref name="done" scoped="" ref="0x2b7643a47330"/>
        <function-ref name="standby" scoped="" ref="0x2b7643a474b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7643a47640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b7643a4a8c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b7643a4a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7643a4ac18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7643a4cc98" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a4cc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a4b020"/>
        <function-ref name="header" scoped="" ref="0x2b7643a4b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b7643a48430" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b7643a48430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a48780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b7643a49020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b7643a49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b7643a49370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b7643a494f8"/>
        <function-ref name="start" scoped="" ref="0x2b7643a49680"/>
        <function-ref name="stop" scoped="" ref="0x2b7643a49808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643a442a8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643a442a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a445f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a44780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a44908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a44a90"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a44c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a44da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b7643a4e060" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b7643a4e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a4e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7643a43060" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7643a43060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b7643a433b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b7643a49a90" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b7643a49a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a49de0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643a48020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b7643a4c3f0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7643a4c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a4c740"/>
        <function-ref name="ready" scoped="" ref="0x2b7643a4c8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a4ca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b7643a46a08" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b7643a46a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7643a46d58"/>
        <function-ref name="request" scoped="" ref="0x2b7643a44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b7643a0d780" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b7643a0d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a0dad0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643a0dc58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a0dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AntennaDiversityConfig" ref="0x2b7643a50b60" loc="14:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643a50b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b7643a4f020"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b7643a4f1a8"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b7643a4f330"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b7643a4f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643a4f700" loc="15:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a4f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a4fa50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a4fbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a4fd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a91020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a911a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a91330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAntenna" ref="0x2b7643a3ea50" loc="13:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643a3ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a500c0"/>
        <function-ref name="get" scoped="" ref="0x2b7643a52b68"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643a52658"/>
        <function-ref name="set" scoped="" ref="0x2b7643a505d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b7643a900c0" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b7643a900c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a90410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a90598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a90720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a908a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a90a30"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a90bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntCtrlFlag" ref="0x2b7643a91618" loc="18:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntCtrlFlag" scoped="" ref="0x2b7643a91618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a91968"/>
        <function-ref name="get" scoped="" ref="0x2b7643a91af0"/>
        <function-ref name="setValue" scoped="" ref="0x2b7643a91c78"/>
        <function-ref name="set" scoped="" ref="0x2b7643a91e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RxModeLock" ref="0x2b7643a3e1e8" loc="12:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityLayerC.nc">
      <component-ref qname="RFA1RadioC.ADLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2b7643a3e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7643a3e538"/>
        <function-ref name="stop" scoped="" ref="0x2b7643a3e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b7643a85020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b7643a85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7643a85370"/>
        <function-ref name="request" scoped="" ref="0x2b7643a854f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b7643a7f020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b7643a7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a7e608"/>
        <function-ref name="get" scoped="" ref="0x2b7643a7e0f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643a7fba0"/>
        <function-ref name="set" scoped="" ref="0x2b7643a7eb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2b7643aa9e28" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643aa9e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b7643aa71a8"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b7643aa7330"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b7643aa74b8"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b7643aa7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b7643aae020" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b7643aae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7643aad478"/>
        <function-ref name="clear" scoped="" ref="0x2b7643aadb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b7643aaed70"/>
        <function-ref name="set" scoped="" ref="0x2b7643aab278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b7643aa5020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b7643aa5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643aa5370"/>
        <function-ref name="get" scoped="" ref="0x2b7643aa54f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b7643aa5680"/>
        <function-ref name="set" scoped="" ref="0x2b7643aa5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b7643a88020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b7643a88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7643a88370"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7643a884f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7643a88680"/>
        <function-ref name="done" scoped="" ref="0x2b7643a88808"/>
        <function-ref name="standby" scoped="" ref="0x2b7643a88990"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7643a88b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b7643a81b10" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b7643a81b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a82190"/>
        <function-ref name="get" scoped="" ref="0x2b7643a83c38"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643a83728"/>
        <function-ref name="set" scoped="" ref="0x2b7643a826a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643a857b0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a857b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a85b00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a85c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a85e10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a84020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a841a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a84330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7643ab1a48" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7643ab1a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b7643ab1d98"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b7643aaf020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643aaf1a8"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b7643aaf330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643aaf4b8"/>
        <function-ref name="setAck" scoped="" ref="0x2b7643aaf640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643aaf7c8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b7643aaf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7643a87748" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a87748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a87a98"/>
        <function-ref name="header" scoped="" ref="0x2b7643a87c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7643a744b8" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7643a744b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b764339a8e0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643a72c88"/>
        <function-ref name="fired" scoped="" ref="0x2b7643a73d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643a72680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643a721f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643a70150"/>
        <function-ref name="start" scoped="" ref="0x2b7643a733a8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643a73880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b7643a7c3b0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b7643a7c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a7ba40"/>
        <function-ref name="get" scoped="" ref="0x2b7643a7b530"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643a7b020"/>
        <function-ref name="set" scoped="" ref="0x2b7643a7a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2b7643aabc80" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643aabc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643aa92a8"/>
        <function-ref name="get" scoped="" ref="0x2b7643aaad68"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643aaa858"/>
        <function-ref name="set" scoped="" ref="0x2b7643aa97b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2b7643aa4860" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2b7643aa4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7643aa4bb0"/>
        <function-ref name="stop" scoped="" ref="0x2b7643aa4d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2b7643aa79c8" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2b7643aa79c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7643aa7d18"/>
        <function-ref name="stop" scoped="" ref="0x2b7643aa6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftAckAlarm" ref="0x2b7643a708e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftAckAlarm" scoped="" ref="0x2b7643a708e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b764339a8e0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643ab1020"/>
        <function-ref name="fired" scoped="" ref="0x2b7643ab2020"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643ab2930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643ab24a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643ab14a8"/>
        <function-ref name="start" scoped="" ref="0x2b7643ab3660"/>
        <function-ref name="stop" scoped="" ref="0x2b7643ab3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b7643a76220" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b7643a76220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643a76da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b7643a88dc0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7643a88dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a87170"/>
        <function-ref name="ready" scoped="" ref="0x2b7643a872f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a87480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b7643a7a860" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b7643a7a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a78e30"/>
        <function-ref name="get" scoped="" ref="0x2b7643a78920"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643a78410"/>
        <function-ref name="set" scoped="" ref="0x2b7643a77388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b7643aa5b78" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b7643aa5b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643aa4020"/>
        <function-ref name="get" scoped="" ref="0x2b7643aa41a8"/>
        <function-ref name="setValue" scoped="" ref="0x2b7643aa4330"/>
        <function-ref name="set" scoped="" ref="0x2b7643aa44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b7643aa63c0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b7643aa63c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643aa6710"/>
        <function-ref name="get" scoped="" ref="0x2b7643aa6898"/>
        <function-ref name="setValue" scoped="" ref="0x2b7643aa6a20"/>
        <function-ref name="set" scoped="" ref="0x2b7643aa6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b7643a779d0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b7643a779d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b7643a77d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2b7643a812b8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2b7643a812b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b7643a81608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b7643a9bd70" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b7643a9bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b7643a9a0f0"/>
        <function-ref name="request" scoped="" ref="0x2b7643a9a278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b7643acb498" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b7643acb498"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e1e8f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7642e1ec50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b7643ace220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b7643a950c8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b7643a950c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a946a0"/>
        <function-ref name="get" scoped="" ref="0x2b7643a94190"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643a95c48"/>
        <function-ref name="set" scoped="" ref="0x2b7643a94bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b7643ac34f0" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b7643ac34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643ac3840"/>
        <function-ref name="get" scoped="" ref="0x2b7643ac39c8"/>
        <function-ref name="setValue" scoped="" ref="0x2b7643ac3b50"/>
        <function-ref name="set" scoped="" ref="0x2b7643ac3cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AntennaDiversityConfig" ref="0x2b7643abcc78" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AntennaDiversityConfig" scoped="" ref="0x2b7643abcc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AntennaDiversityConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="rxModeSet" scoped="" ref="0x2b7643aba020"/>
        <function-ref name="rxModeGet" scoped="" ref="0x2b7643aba1a8"/>
        <function-ref name="txModeSet" scoped="" ref="0x2b7643aba330"/>
        <function-ref name="txModeGet" scoped="" ref="0x2b7643aba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b7643a9d788" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b7643a9d788"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643a9dad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b7643ac2e50" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b7643ac2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b7643ac0300"/>
        <function-ref name="clear" scoped="" ref="0x2b7643ac09e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b7643ac1be8"/>
        <function-ref name="set" scoped="" ref="0x2b7643abe0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b7643a9dd88" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b7643a9dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b7643a9c170"/>
        <function-ref name="turnOn" scoped="" ref="0x2b7643a9c2f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b7643a9c480"/>
        <function-ref name="done" scoped="" ref="0x2b7643a9c608"/>
        <function-ref name="standby" scoped="" ref="0x2b7643a9c790"/>
        <function-ref name="getChannel" scoped="" ref="0x2b7643a9c918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b7643ace7f0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7643ace7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="TRadio" ref="0x2b764339a4e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643acd3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b7643a99cf0" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b7643a99cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a97388"/>
        <function-ref name="get" scoped="" ref="0x2b7643a98e00"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643a988f0"/>
        <function-ref name="set" scoped="" ref="0x2b7643a97898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b7643a9a530" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b7643a9a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643a9a880"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643a9aa08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643a9ab90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643a9ad18"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643a99020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643a991a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b7643ac6588" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b7643ac6588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b7643ac68d8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b7643ac6a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643ac6be8"/>
        <function-ref name="isAckEnabled" scoped="" ref="0x2b7643ac6d70"/>
        <function-ref name="headerLength" scoped="" ref="0x2b7643ac4020"/>
        <function-ref name="setAck" scoped="" ref="0x2b7643ac41a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b7643ac4330"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b7643ac44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b7643a9b5f8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b7643a9b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643a9b948"/>
        <function-ref name="header" scoped="" ref="0x2b7643a9bad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExtAmpControl" ref="0x2b7643ab8498" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExtAmpControl" scoped="" ref="0x2b7643ab8498"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7643ab87e8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643ab8970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b7643acf168" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7643acf168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b7643acf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAntenna" ref="0x2b7643abeb00" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAntenna" scoped="" ref="0x2b7643abeb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643abc0f8"/>
        <function-ref name="get" scoped="" ref="0x2b7643abdbb8"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643abd6a8"/>
        <function-ref name="set" scoped="" ref="0x2b7643abc608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b7643a92458" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b7643a92458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643ad5a40"/>
        <function-ref name="get" scoped="" ref="0x2b7643ad5530"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643ad5020"/>
        <function-ref name="set" scoped="" ref="0x2b7643ad4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b7643a9fc10" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b7643a9fc10"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7643a9d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RxModeLock" ref="0x2b7643aba840" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RxModeLock" scoped="" ref="0x2b7643aba840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b7643abad90"/>
        <function-ref name="stop" scoped="" ref="0x2b7643ab9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b7643ad4860" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b7643ad4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643ad2e30"/>
        <function-ref name="get" scoped="" ref="0x2b7643ad2920"/>
        <function-ref name="isSet" scoped="" ref="0x2b7643ad2410"/>
        <function-ref name="set" scoped="" ref="0x2b7643ad1388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b7643a9cbc0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b7643a9cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643a9b020"/>
        <function-ref name="ready" scoped="" ref="0x2b7643a9b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643a9b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b7643ab9d68" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b7643ab9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b7643ab80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x2b7643acda30" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x2b7643acda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7643ac7b80"/>
        <function-ref name="test" scoped="" ref="0x2b7643ac84a8"/>
        <function-ref name="fired" scoped="" ref="0x2b7643ac8020"/>
        <function-ref name="get" scoped="" ref="0x2b7643ac95d8"/>
        <function-ref name="reset" scoped="" ref="0x2b7643ac8930"/>
        <function-ref name="getMode" scoped="" ref="0x2b7643ac6088"/>
        <function-ref name="isOn" scoped="" ref="0x2b7643ac76f8"/>
        <function-ref name="set" scoped="" ref="0x2b7643ac9a60"/>
        <function-ref name="start" scoped="" ref="0x2b7643ac8db8"/>
        <function-ref name="stop" scoped="" ref="0x2b7643ac7270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b7643ac20e0" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b7643ac20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643ac2430"/>
        <function-ref name="get" scoped="" ref="0x2b7643ac25b8"/>
        <function-ref name="setValue" scoped="" ref="0x2b7643ac2740"/>
        <function-ref name="set" scoped="" ref="0x2b7643ac28c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b7643ac4858" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b7643ac4858"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643ac4ba8"/>
        <function-ref name="get" scoped="" ref="0x2b7643ac4d30"/>
        <function-ref name="setValue" scoped="" ref="0x2b7643ac3020"/>
        <function-ref name="set" scoped="" ref="0x2b7643ac31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b7643ad19d0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b7643ad19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b7643ad1e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b7643ab92b0" loc="84:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b7643ab92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b7643ab9600"/>
        <function-ref name="suspend" scoped="" ref="0x2b7643ab9788"/>
        <function-ref name="resume" scoped="" ref="0x2b7643ab9910"/>
        <function-ref name="run" scoped="" ref="0x2b7643ab9a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCalibration" ref="0x2b7643a99498" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCalibration" scoped="" ref="0x2b7643a99498"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCalibration"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b7643a997e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b7643bbab28" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b7643bbab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7642e1e8f8"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7642e1ec50"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b7643bb78f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7643bb2188" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7643bb2188"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643bb2d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7643baf560" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7643baf560"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643bae130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b7643bae758" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7643bae758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7643bad578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7643bac020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7643bada00"/>
        <function-ref name="overflow" scoped="" ref="0x2b7643bac4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7643bb3160" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7643bb3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643bf0918"/>
        <function-ref name="fired" scoped="" ref="0x2b7643bf1980"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643bf0310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643bf1e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643bf0da0"/>
        <function-ref name="start" scoped="" ref="0x2b7643bf1020"/>
        <function-ref name="stop" scoped="" ref="0x2b7643bf14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b7644192610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b7644192610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b764418e6f8"/>
        <function-ref name="test" scoped="" ref="0x2b764418f020"/>
        <function-ref name="fired" scoped="" ref="0x2b7644191b30"/>
        <function-ref name="force" scoped="" ref="0x2b764418d088"/>
        <function-ref name="get" scoped="" ref="0x2b76441911d0"/>
        <function-ref name="reset" scoped="" ref="0x2b764418f4a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b764418ebd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b764418e270"/>
        <function-ref name="set" scoped="" ref="0x2b7644191658"/>
        <function-ref name="start" scoped="" ref="0x2b764418f930"/>
        <function-ref name="stop" scoped="" ref="0x2b764418fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b764413bab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b764413bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7644138150"/>
        <function-ref name="fired" scoped="" ref="0x2b76441391f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7644139b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7644139680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76441385d8"/>
        <function-ref name="start" scoped="" ref="0x2b764413a828"/>
        <function-ref name="stop" scoped="" ref="0x2b764413ad00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b7644138b18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b7644138b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7644134c20"/>
        <function-ref name="test" scoped="" ref="0x2b7644135548"/>
        <function-ref name="get" scoped="" ref="0x2b7644137728"/>
        <function-ref name="reset" scoped="" ref="0x2b76441359d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b7644192130"/>
        <function-ref name="overflow" scoped="" ref="0x2b76441350c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7644134798"/>
        <function-ref name="set" scoped="" ref="0x2b7644137bb0"/>
        <function-ref name="start" scoped="" ref="0x2b7644135e58"/>
        <function-ref name="stop" scoped="" ref="0x2b7644134310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b764417ac28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b764417ac28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b7644176db8"/>
        <function-ref name="test" scoped="" ref="0x2b7644177658"/>
        <function-ref name="fired" scoped="" ref="0x2b76441771d0"/>
        <function-ref name="force" scoped="" ref="0x2b7644174778"/>
        <function-ref name="get" scoped="" ref="0x2b7644178820"/>
        <function-ref name="reset" scoped="" ref="0x2b7644177ae0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76441742f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7644176930"/>
        <function-ref name="set" scoped="" ref="0x2b7644178ca8"/>
        <function-ref name="start" scoped="" ref="0x2b7644176020"/>
        <function-ref name="stop" scoped="" ref="0x2b76441764a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7644182020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7644182020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b764417f690"/>
        <function-ref name="fired" scoped="" ref="0x2b76441806f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b764417f088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7644180b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b764417fb18"/>
        <function-ref name="start" scoped="" ref="0x2b7644182d70"/>
        <function-ref name="stop" scoped="" ref="0x2b7644180270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7644183810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7644183810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7644183b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b764417e0a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b764417e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b764417a270"/>
        <function-ref name="test" scoped="" ref="0x2b764417ca58"/>
        <function-ref name="get" scoped="" ref="0x2b764417ec20"/>
        <function-ref name="reset" scoped="" ref="0x2b764417b020"/>
        <function-ref name="getMode" scoped="" ref="0x2b764417a748"/>
        <function-ref name="overflow" scoped="" ref="0x2b764417c5d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b764417bdb8"/>
        <function-ref name="set" scoped="" ref="0x2b764417c0f8"/>
        <function-ref name="start" scoped="" ref="0x2b764417b4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b764417b930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7643be9230" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7643be9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7643be6918"/>
        <function-ref name="fired" scoped="" ref="0x2b7643be8980"/>
        <function-ref name="startAt" scoped="" ref="0x2b7643be6310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7643be8e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7643be6da0"/>
        <function-ref name="start" scoped="" ref="0x2b7643be8020"/>
        <function-ref name="stop" scoped="" ref="0x2b7643be84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b76441b7610" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b76441b7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b76441b36f8"/>
        <function-ref name="test" scoped="" ref="0x2b76441b5020"/>
        <function-ref name="fired" scoped="" ref="0x2b76441b6b30"/>
        <function-ref name="force" scoped="" ref="0x2b76441b2088"/>
        <function-ref name="get" scoped="" ref="0x2b76441b61d0"/>
        <function-ref name="reset" scoped="" ref="0x2b76441b54a8"/>
        <function-ref name="getMode" scoped="" ref="0x2b76441b3bd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b76441b3270"/>
        <function-ref name="set" scoped="" ref="0x2b76441b6658"/>
        <function-ref name="start" scoped="" ref="0x2b76441b5930"/>
        <function-ref name="stop" scoped="" ref="0x2b76441b5db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76441c0ab0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b76441c0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76441bc150"/>
        <function-ref name="fired" scoped="" ref="0x2b76441bd1f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b76441bdb08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76441bd680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76441bc5d8"/>
        <function-ref name="start" scoped="" ref="0x2b76441bf828"/>
        <function-ref name="stop" scoped="" ref="0x2b76441bfd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b76441bcb18" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmC.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b76441bcb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b76441b8c20"/>
        <function-ref name="test" scoped="" ref="0x2b76441ba548"/>
        <function-ref name="get" scoped="" ref="0x2b76441bb728"/>
        <function-ref name="reset" scoped="" ref="0x2b76441ba9d0"/>
        <function-ref name="getMode" scoped="" ref="0x2b76441b7130"/>
        <function-ref name="overflow" scoped="" ref="0x2b76441ba0c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b76441b8798"/>
        <function-ref name="set" scoped="" ref="0x2b76441bbbb0"/>
        <function-ref name="start" scoped="" ref="0x2b76441bae58"/>
        <function-ref name="stop" scoped="" ref="0x2b76441b8310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCompare" ref="0x2b764419fc28" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCompare" scoped="" ref="0x2b764419fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b764419bdb8"/>
        <function-ref name="test" scoped="" ref="0x2b764419c658"/>
        <function-ref name="fired" scoped="" ref="0x2b764419c1d0"/>
        <function-ref name="force" scoped="" ref="0x2b764419a778"/>
        <function-ref name="get" scoped="" ref="0x2b764419e820"/>
        <function-ref name="reset" scoped="" ref="0x2b764419cae0"/>
        <function-ref name="getMode" scoped="" ref="0x2b764419a2f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b764419b930"/>
        <function-ref name="set" scoped="" ref="0x2b764419eca8"/>
        <function-ref name="start" scoped="" ref="0x2b764419b020"/>
        <function-ref name="stop" scoped="" ref="0x2b764419b4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b76441a7020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b76441a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x2b7642e2c078"/>
            <typename><typedef-ref name="T62khz" ref="0x2b7642e2c360"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b76441a4690"/>
        <function-ref name="fired" scoped="" ref="0x2b76441a66f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b76441a4088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b76441a6b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b76441a4b18"/>
        <function-ref name="start" scoped="" ref="0x2b76441a7d70"/>
        <function-ref name="stop" scoped="" ref="0x2b76441a6270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b76441a8810" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b76441a8810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7642c23570"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7642c23570"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b76441a8b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaCounter" ref="0x2b76441a30a0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaAlarmP.nc">
      <component-ref qname="RFA1DriverLayerC.SoftAckAlarmC.AtmegaAlarmC.AtmegaAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaCounter" scoped="" ref="0x2b76441a30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x2b764419f270"/>
        <function-ref name="test" scoped="" ref="0x2b76441a2a58"/>
        <function-ref name="get" scoped="" ref="0x2b76441a3c20"/>
        <function-ref name="reset" scoped="" ref="0x2b76441a0020"/>
        <function-ref name="getMode" scoped="" ref="0x2b764419f748"/>
        <function-ref name="overflow" scoped="" ref="0x2b76441a25d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b76441a0db8"/>
        <function-ref name="set" scoped="" ref="0x2b76441a20f8"/>
        <function-ref name="start" scoped="" ref="0x2b76441a04a8"/>
        <function-ref name="stop" scoped="" ref="0x2b76441a0930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b7643cd6390" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7643cd6390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643cd66e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643cd6868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643cd69f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643cd6b78"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643cd6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b7643cd5020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7643cd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643cd5370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643cd54f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643cd5680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643cd5808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643cd5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b7643cd5bd8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b7643cd5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7643cd4020"/>
        <function-ref name="source" scoped="" ref="0x2b7643cd41a8"/>
        <function-ref name="address" scoped="" ref="0x2b7643cd4330"/>
        <function-ref name="destination" scoped="" ref="0x2b7643cd44b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b7643cd4640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7643cd47c8"/>
        <function-ref name="type" scoped="" ref="0x2b7643cd4950"/>
        <function-ref name="setType" scoped="" ref="0x2b7643cd4ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643cd4c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7643cd4de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7643cd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b7643cd32a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b7643cd32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b7643cd35f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b7643cd3780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b7643cd3908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b76441e2400" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b76441e2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76441e2750"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76441e28d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76441e2a60"/>
        <function-ref name="cancel" scoped="" ref="0x2b76441e2be8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76441e2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b76441e0020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b76441e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b76441e0370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b76441e04f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76441e0680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76441e0808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b76441e0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b76441e0bd8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b76441e0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76441df020"/>
        <function-ref name="source" scoped="" ref="0x2b76441df1a8"/>
        <function-ref name="address" scoped="" ref="0x2b76441df330"/>
        <function-ref name="destination" scoped="" ref="0x2b76441df4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b76441df640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76441df7c8"/>
        <function-ref name="type" scoped="" ref="0x2b76441df950"/>
        <function-ref name="setType" scoped="" ref="0x2b76441dfad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76441dfc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76441dfde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76441de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b76441de2a8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b76441de2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b76441de5f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b76441de780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b76441de908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b76441d5790" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b76441d5790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76441d5ae0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76441d5c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76441d5df0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76441d4020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76441d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b76441d4450" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b76441d4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b76441d47a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b76441d4928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b76441d4ab0"/>
        <function-ref name="cancel" scoped="" ref="0x2b76441d4c38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b76441d4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b76441d3060" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CountToRadioAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b76441d3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b76441d33b0"/>
        <function-ref name="source" scoped="" ref="0x2b76441d3538"/>
        <function-ref name="address" scoped="" ref="0x2b76441d36c0"/>
        <function-ref name="destination" scoped="" ref="0x2b76441d3848"/>
        <function-ref name="setSource" scoped="" ref="0x2b76441d39d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b76441d3b58"/>
        <function-ref name="type" scoped="" ref="0x2b76441d3ce0"/>
        <function-ref name="setType" scoped="" ref="0x2b76441d3e68"/>
        <function-ref name="isForMe" scoped="" ref="0x2b76441d2020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b76441d21a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b76441d2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7643c4f020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7643c4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643c4f370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643c4f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643c4f680"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643c4f808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643c4f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b7643c9d060" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b7643c9d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643c9d3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643c9d558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643c9d6e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643c9d868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643c9d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b7643c9e2c8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b7643c9e2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b7643c9e638"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643c9e7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643c9e948"/>
        <function-ref name="cancel" scoped="" ref="0x2b7643c9ead0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b7643c9ec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b7643c9b268" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7643c9b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643c9b5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643c9b740"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643c9b8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643c9ba50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643c9bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b7643c9a020" loc="169:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b7643c9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7643c9a370"/>
        <function-ref name="runTask" scoped="" ref="0x2b7643c9a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b7643c9a7c0" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b7643c9a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7643c9ab10"/>
        <function-ref name="runTask" scoped="" ref="0x2b7643c9ac98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b7643c9dc38" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b7643c9dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7643c9c020"/>
        <function-ref name="source" scoped="" ref="0x2b7643c9c1a8"/>
        <function-ref name="address" scoped="" ref="0x2b7643c9c330"/>
        <function-ref name="destination" scoped="" ref="0x2b7643c9c4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b7643c9c640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7643c9c7c8"/>
        <function-ref name="type" scoped="" ref="0x2b7643c9c950"/>
        <function-ref name="setType" scoped="" ref="0x2b7643c9cad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643c9cc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7643c9cde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7643c9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b7643cc9268" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CountToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b7643cc9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b7643cc95b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b7643cc9740"/>
        <function-ref name="getPayload" scoped="" ref="0x2b7643cc98c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b7643cc9a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b7643cc9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b7643ccfc20" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CountToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b7643ccfc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b7643cc9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b7643cc9e20" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CountToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b7643cc9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b7643cc81a8"/>
        <function-ref name="source" scoped="" ref="0x2b7643cc8330"/>
        <function-ref name="address" scoped="" ref="0x2b7643cc84b8"/>
        <function-ref name="destination" scoped="" ref="0x2b7643cc8640"/>
        <function-ref name="setSource" scoped="" ref="0x2b7643cc87c8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b7643cc8950"/>
        <function-ref name="type" scoped="" ref="0x2b7643cc8ad8"/>
        <function-ref name="setType" scoped="" ref="0x2b7643cc8c60"/>
        <function-ref name="isForMe" scoped="" ref="0x2b7643cc8de8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b7643cc7020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b7643cc71a8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b7642df2600" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.&#10;&#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b7642df31d8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b7642dfb408" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b7642dfb198" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b7642defb78" loc="31:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b7642dfd5a0" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b7642dfd330" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b7642dfc0a8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b7642dfddb8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b7642dfc8f0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b7642e5a178" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b7642e5a840" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b7642e5b3a0" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b7642e6d6f8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7642e5ba40" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b7642e6d020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7642e60670" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b7642e60ce0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b7642c3fa38" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b7642c3d258" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7642f23020" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7642f23020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b7642f1c918" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b7642f203e0" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b7642f1d020" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7642f1fa60" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b7642f1fd78" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b7642f1f328" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b7642f31878" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b7642f31070" loc="144:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b7642f20b10" loc="92:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b7642f23af0" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7642f23880" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b7642f1c020" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7642f1d950" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b7642f1dc68" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b7642f21570" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7642f21300" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7642f21d18" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7642f52748" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7642f52748"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7642f52978" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f52978"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b7642f4b258" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f52978"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b7642f4e418" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b7642f4c8e0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f52978"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f52978"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7642f4c340" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f52978"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b7642f4c660" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f52978"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b7642f4eb60" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b7642f4b9d8" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f52978"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7642f4f4a8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f52978"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7642f4f238" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642f52978"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7642f4fc78" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCompare" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b7642fc7758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
          <interfacedef-ref qname="HplAtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fc7758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b7642fbfbb8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b7642fbf948" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b7642fc2740" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b7642fc2070" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x2b7642fd69f0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7642fc3070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fc7758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b7642fc2de8" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b7642fd6328" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b7642fbf290" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7642fc3970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fc7758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b7642fc3700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fc7758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7642fc14e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7642fc1b80" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCompare.nc">
        <interfacedef-ref qname="HplAtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCounter" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b7642fbb758" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
          <interfacedef-ref qname="HplAtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fbb758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b7642fb4c50" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b7642fb49e0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b7642fb67a8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7642fb8070" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fbb758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b7642fb6e50" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b7642fb3378" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b7642fb60d8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b7642fb4328" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7642fb8970" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fbb758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b7642fb8700" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7642fbb758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7642fb5560" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7642fb5c00" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCounter.nc">
        <interfacedef-ref qname="HplAtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaCapture" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x2b764302c068" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
          <interfacedef-ref qname="HplAtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b764302c068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x2b76430274e0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b7643027270" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b7643029070" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b764302b958" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b764302c920" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b764302c068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b7643029718" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x2b7643027be0" loc="73:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b7643028b88" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b764302b290" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b764302c068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x2b764302b020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b764302c068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7643029de0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b76430284b8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmegaCapture.nc">
        <interfacedef-ref qname="HplAtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/platforms/tpa/hardware.h">
        <short>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.&#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b7642dcfcd8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the&#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b7642d7d1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10;&#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b7642dc3da0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long>&#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b7642dda428" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b7642ddab60" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b7642dd9328" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b7642dd81d8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b7642dd7810" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7642dd5020" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b7642dd9a40" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7642dd5b20" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b7642dd58b0" loc="134:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b7642dcbcd8" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b7642dd8948" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b7642dd70d8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b7642da5360" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b76430dea38" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76430dea38"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b76430dec68" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76430dec68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b76430db528" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b76430dec68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b76430da550" loc="76:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b76430dbd38" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b76430dac40" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b7643216e20" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b7643216bb0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b7643213838" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b7643214910" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b7643214020" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b76432130d8" loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b7643212258" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b76432256b0" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b764322cd70" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b7643225100" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7643225420" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b7643224a48" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b7643223da0" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b7643224140" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7643224460" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b76432247a8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast&#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast&#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b764322a4a8" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even&#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b764322a238" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b7643228778" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7643228508" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b764322aca0" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till&#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till&#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b7643227290" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7643227020" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side&#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b764323ac98" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b764323a4e8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b7643251440" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b7643248c40" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b764324c818" loc="117:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b7643247610" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b76432473a0" loc="128:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b7643252cd8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b7643249338" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b76432490c8" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b764324d0a8" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b764324edd0" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b7643250328" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Read the SPI data register&#10; </short>
          <long>&#10; Read the SPI data register&#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b7643266de0" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b7643266b70" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b764324d7e0" loc="114:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b7643245690" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b7643245420" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b7643244538" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b7643248518" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b76432482a8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b76432664a0" loc="140:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b764324b290" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b764324b020" loc="119:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b7643250c78" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Write the SPI data register&#10; </short>
          <long>&#10; Write the SPI data register&#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b7643250a08" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b764324c118" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b764324de80" loc="116:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b7643249b48" loc="123:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b7643247d18" loc="129:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b7643245d80" loc="132:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b7643244c80" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b764324b9a8" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b7643251b58" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b764324e630" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete.&#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b764324e3c0" loc="109:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b76432a00d8" loc="95:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was&#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b76432a08b0" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was&#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the&#10; Resource interface in order to receive events based on other users&#10; requests.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b7643302328" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b7643302bf0" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current&#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b76432ff8d0" loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b76432fe110" loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10;&#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource&#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b764331b620" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b76433008a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b764331b3b0" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b76433008a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b764331e720" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b764331c290" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b76433008a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b764331c020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b76433008a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b764331cb30" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue.&#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b76433008a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <short>&#10; The interface to a TinyOS task scheduler.</short>
        <long>&#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b7642623cb0" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Initialize the scheduler.</short>
          <long>&#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b7642caebf0" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b7642cae450" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long>&#10; Run the next task if one is waiting, otherwise return immediately.&#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b76433efc00" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long>&#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b76433ef990" loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b76433ec020" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b76433edd78" loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b76433ef020" loc="104:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         starting or the device was off and the device is now ready to turn&#10;         on.  After receiving this return value, you should expect a&#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b76433ed410" loc="130:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of&#10;         stopping or the device was on and the device is now ready to turn&#10;         off.  After receiving this return value, you should expect a&#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2b76433e30c8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b76433e4788" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b76433e4ae8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76433e4df8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b76433dd3c0" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76433dfdc8" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76433dd108" loc="135:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b76433df5c0" loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b76433e2370" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76433e2100" loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b76433e07a0" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76433e01f8" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b76433e0520" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b76433f35f8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
              <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76433dcc88" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b76433f3020" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76433f3330" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis&#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b76433f9680" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76433f9410" loc="177:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b76433d84f8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76433d8288" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b764339fa68" loc="68:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b76433da4f8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76433da288" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b76433d4c78" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76433d46c0" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b76433d49f8" loc="121:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b76433d7840" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76433d7288" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b76433d75c0" loc="103:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b76433d1290" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76433d1020" loc="147:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b76433d05a0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76433d0020" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b76433d0320" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b76433b4b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b76433d3020" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76433d6d60" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b76433f7a50" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b76433f74a0" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b76433f77d0" loc="187:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b76433f5818" loc="195:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sniff" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <short>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; </short>
        <long>&#10; Sniff Interface to catch all messages heard (Receive + Snoop, but prior to them &#38; no return)&#10;&#10; @author tango&#10; @date 2014/03/12&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="catch" ref="0x2b7643441c48" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
        <documentation loc="10:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
          <short>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; </short>
          <long>&#10; Sniff a packet buffer, signaled just before the buffer receive/snoop&#10; @param 'message_t* ONE msg'        the receied packet&#10; @param 'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param len      the length of the data region pointed to by payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Sniff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643441380" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b76434416a8" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76434419b8" loc="16:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Sniff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long>&#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b764343d900" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10;&#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b764343d320" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b764343d680" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <short>&#10; The basic message data type accessors.</short>
        <long>&#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b764343c8e0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764343c670" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b76434628d8" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength().&#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643462668" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b7643460ca0" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than&#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434606d8" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76434609e8" loc="126:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b7643439cf8" loc="106:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b7643461c88" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434616f8" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7643461a08" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b7643453ad0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434534e8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b7643453850" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b7643451bc0" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643451950" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b7643454c90" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b7643454338" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b76434540c8" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b76434562e8" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b76434562e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7643456518" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7643456518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b7643470290" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7643456518"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643470020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b764346f370" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764346f100" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b76434710a8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643456dc8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b764346d5e0" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7643456518"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764346d020" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b764346d360" loc="78:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7643456518"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b76434590a8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764345dde0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b7643458290" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643458020" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b7643457338" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434570c8" loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b7643475a48" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434757d8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b764345bd68" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764345b780" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b764345bae8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b764344eaf0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764344e880" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b764344e0b8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643478a90" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b7643478df8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b7643474970" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643474700" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b7643482a00" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b7643482a00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b764347ca18" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764347c7a8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b764347c020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b7643482a00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764347ec88" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b764347e538" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764347e2c8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b764347b708" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the&#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b7643482a00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764347b140" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b764347b488" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b7643482a00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b764349ea30" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b764349ea30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b764349a328" loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short>&#10; Return current time.</short>
          <long>&#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b76434801d8" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b76434839a8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b7643483738" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b7643480938" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b764349c338" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764349c0c8" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AntennaDiversityConfig" loc="10:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <short>&#10; antenna user mode manager&#10;&#10; </short>
        <long>&#10; antenna user mode manager&#10;&#10; @author tango&#10; @date 2013/08/26&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rxModeSet" ref="0x2b76434e3640" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rxmode" ref="0x2b76434e33d0" loc="19:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rxModeGet" ref="0x2b76434e3d38" loc="20:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeSet" ref="0x2b76434e26d8" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txmode" ref="0x2b76434e2468" loc="29:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txModeGet" ref="0x2b76434e2dd0" loc="30:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/AntennaDiversityConfig.nc">
        <interfacedef-ref qname="AntennaDiversityConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b76434cf538" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434cf2c8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b76434d01d8" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b76434d0b88" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434d0918" loc="39:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b76434cc020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434ce938" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b76434ceca8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b76434ce2a0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434cfc00" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b76434ce020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b76434cb2d0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b76433987b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434cb060" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b76434ca020" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b76433987b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434cb948" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b76434cbca8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b76433987b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b76434cc940" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434cc6d0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b76434ca728" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b76433987b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b76434aea70" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b76434ae170" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b76434ae4d0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76434ae7e0" loc="67:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b76434aadf0" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434aa828" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b76434aab38" loc="122:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b76434aa020" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b76434ad7e8" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434ad578" loc="83:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b76434ab6e8" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434ab140" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b76434ab468" loc="97:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b76435054d0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b76434ea290" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434ea020" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b7643509108" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764350ae30" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b7643508758" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user&#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up,&#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76435084e8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b764350ca48" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764350c7d8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b764350d3d0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764350d160" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b764350a718" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764350a160" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b764350a498" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b764350c0b8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764350dad8" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b764350de10" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b7643509d88" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76435097d8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b7643509b08" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b76434ece68" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b7643512790" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b764350f830" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764350f5c0" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b7643511290" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643511020" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b7643511d18" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643511aa8" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b7643542b60" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b7643543ce0" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b764339a8e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b7643543a70" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b764339a8e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b7643542458" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b7643543290" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b7643541328" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b764339a8e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b76434fac68" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434fa9f8" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b76434f2178" loc="86:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b76434f49b0" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76434f43d0" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b76434f4730" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b76434f87a8" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434f8538" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b76434f6290" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434f6020" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b76434f5118" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified&#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b76434f6b10" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b76434f6e70" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b76434f9020" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b76434f9d28" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434f97b0" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b76434f9aa8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b76434f5c08" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434f5998" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with&#10; 16-bit destination pan, source and destination addresses. It also&#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b76435234e8" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643523278" loc="131:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b7643525cc8" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643525a58" loc="120:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b7643502a18" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used,&#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643502478" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b7643502798" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b76434ffa90" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434ff820" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b764351d2a0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764351fba0" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b764351d020" loc="156:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b76434ff020" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643501cf0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b7643524a78" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76435244e8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b76435247f8" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b764352b3c0" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a&#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b764352cdb8" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b764352b140" loc="88:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b764351f468" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764351f1f8" loc="151:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b76435014e8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by&#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643501278" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b7643529d28" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643529ab8" loc="99:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b76435292a0" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b764352bc10" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b7643529020" loc="94:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b764351b7b0" loc="178:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b7643398ba0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b764351dca0" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764351da30" loc="162:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b764351b020" loc="173:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b76433987b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b7643520a20" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643520470" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b76435207a0" loc="146:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b764352c5b8" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764352c348" loc="81:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b76435252e0" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643527ce0" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b7643525060" loc="115:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b76435212a0" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643523c40" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b7643521020" loc="136:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b764351a290" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764351a020" loc="185:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b7643528a78" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643528500" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b76435287f8" loc="105:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b764350ecb0" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used,&#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764350ea40" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b764351c750" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764351c4e0" loc="168:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b7643521ca8" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643521a38" loc="141:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b7643527538" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76435272c8" loc="110:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b76434efa60" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434ef4b0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b76434ef7e0" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b76434ee258" loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump&#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b76434f0290" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434f0020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b76434f0cb0" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434f0a40" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b76434e8338" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434e80c8" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b76434e9840" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434e95d0" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b76434e8b20" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b76435145b8" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return&#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643514348" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b764353b468" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764353b1f8" loc="70:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b764353e968" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764353e6f8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b764353c020" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b764353d710" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764353d160" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b764353d490" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b7643517e60" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure&#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643517bf0" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b764353ca38" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764353c7c8" loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b76434feda8" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="66:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if addressRecognition enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b76434fe338" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAddressRecognition' TRUE to enable address recognition&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b76434fe0c8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b76434d2258" loc="47:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the&#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckEnabled" ref="0x2b76434fb0d8" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="76:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if ack enabled, otherwise FALSE&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b76434d6a50" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="38:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434d67e0" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAck" ref="0x2b76434fc730" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; </short>
          <long>&#10; @param 'bool enableAck' TRUE to enable acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAck" ref="0x2b76434fc4c0" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b76434d2d10" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="49:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434d2aa0" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b76434d17e0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76434d1570" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state&#10; transitions should be executed atomically but with interrupts enabled.&#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b76435b20d8" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the&#10; run event is currently not executing, then it  is called immediately&#10; and this command returns only after the completion of the run event.&#10; If the run event is currently executed, then this method returns at&#10; once, and makes sure that the run event is called once more when&#10; it is finished. If this method is called from a task, then by the&#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b76435b2978" loc="72:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b76435b1328" loc="79:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from&#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b76435b5990" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b76435d72c8" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
              <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76435d7020" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b76435deda0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a task. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76435deb30" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b76435d97a8" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76435d9538" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b76435dacd0" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76435da728" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b76435daa50" loc="54:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b76435f5db8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b76435f4c48" loc="60:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b76435f4558" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b76435f55d8" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b76435f5020" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b76433b3020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b76435f5358" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b76437bde70" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules&#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
              <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76437bdbc8" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b76437bd290" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the&#10; higher layers are consulted whether it needs to be downloaded and&#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b76437bd020" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b76437e3020" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b76437e4c58" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b76437e3790" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b76437b4c80" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b76437b4a10" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b76437e45b8" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b76437e4348" loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b76437b1030" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b76437b2d90" loc="57:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b76437b04a8" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1].&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b76437b0238" loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b76437b1ac0" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b76437b1850" loc="62:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b76437ae020" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b76437b0ca8" loc="80:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b76437b25c8" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not&#10; found in the table, then the value NEIGHBORHOOD is  returned,&#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b76437b2358" loc="49:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b76433b33d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b7643841760" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but&#10; highest wakeup time. The radio cannot send or receive in this state&#10; and releases all access to shared resources (e.g. SPI bus).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b764383d790" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages&#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b764383c290" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b764383c020" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b764383c9f0" loc="69:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state&#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b764383d020" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b76438761d8" loc="74:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b7643840e10" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send&#10; command could be retried from a tasklet. Returns SUCCESS if the&#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643840ba0" loc="48:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b76438721d8" loc="63:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept&#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept&#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b7643874998" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each&#10; successfull send command. If the returned error code is SUCCESS, then&#10; the message was sent (may not have been acknowledged), otherwise&#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b7643874728" loc="56:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <short>&#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long>&#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt&#10; @date   March 1 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b76438b7d88" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b764262fbd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b76438b75f0" loc="46:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Random.nc">
          <short>&#10; Produces a 32-bit pseudorandom number.</short>
          <long>&#10; Produces a 32-bit pseudorandom number.&#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b76426306a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b7643907518" loc="53:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b7643907518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b7643904020" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b7643907518"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b7643907d50" loc="64:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b7643907518"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b764391de50" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764391dbe0" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7643921dd8" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643921b68" loc="40:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b764391eab0" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764391e520" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b764391e830" loc="45:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b7642c25818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b764391d4e8" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b764391d278" loc="50:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b7643987020" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b7643989c68" loc="52:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b76439894e0" loc="44:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/wangqi/platforms2013/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCalibration" loc="8:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
      <documentation loc="1:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <short>&#10; FTN/CF/DCU Calibration Interface, recommanded to do it every 5 min or less&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="run" ref="0x2b7643a81020" loc="9:/home/wangqi/platforms2013/tinyos-main/tos/chips/atm128rfa1/radiox/RadioCalibration.nc">
        <interfacedef-ref qname="RadioCalibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7643acc0f0" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7643acc0f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7643acc320" loc="59:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7643acc320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b7643accdb8" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7643acc320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7643accb48" loc="66:/home/wangqi/platforms2013/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7643acc320"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/wangqi/platforms2013/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b7643c685b0" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long>&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643c68020" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7643c68330" loc="75:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b7643c64878" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643c642b0" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b7643c645c0" loc="125:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b7643c63a58" loc="112:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b764262f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b7643c66828" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the&#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643c665b8" loc="89:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b7643c65c10" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Signaled in response to an accepted send request.</short>
          <long>&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;&#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b7643c65668" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b76433be9a0"/>
                <typename><typedef-ref name="message_t" ref="0x2b76433e4020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b7643c65990" loc="100:/home/wangqi/platforms2013/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b7642c2f5d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
